/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: google/protobuf/test_messages_proto3.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./any";
import * as dependency_2 from "./duration";
import * as dependency_3 from "./field_mask";
import * as dependency_4 from "./struct";
import * as dependency_5 from "./timestamp";
import * as dependency_6 from "./wrappers";
import * as pb_1 from "google-protobuf";
export namespace protobuf_test_messages.proto3 {
    export enum ForeignEnum {
        FOREIGN_FOO = 0,
        FOREIGN_BAR = 1,
        FOREIGN_BAZ = 2
    }
    export class TestAllTypesProto3 extends pb_1.Message {
        #one_of_decls: number[][] = [[111, 112, 113, 114, 115, 116, 117, 118, 119, 120]];
        constructor(data?: any[] | ({
            optional_int32?: number;
            optional_int64?: number;
            optional_uint32?: number;
            optional_uint64?: number;
            optional_sint32?: number;
            optional_sint64?: number;
            optional_fixed32?: number;
            optional_fixed64?: number;
            optional_sfixed32?: number;
            optional_sfixed64?: number;
            optional_float?: number;
            optional_double?: number;
            optional_bool?: boolean;
            optional_string?: string;
            optional_bytes?: Uint8Array;
            optional_nested_message?: TestAllTypesProto3.NestedMessage;
            optional_foreign_message?: ForeignMessage;
            optional_nested_enum?: TestAllTypesProto3.NestedEnum;
            optional_foreign_enum?: ForeignEnum;
            optional_aliased_enum?: TestAllTypesProto3.AliasedEnum;
            optional_string_piece?: string;
            optional_cord?: string;
            recursive_message?: TestAllTypesProto3;
            repeated_int32?: number[];
            repeated_int64?: number[];
            repeated_uint32?: number[];
            repeated_uint64?: number[];
            repeated_sint32?: number[];
            repeated_sint64?: number[];
            repeated_fixed32?: number[];
            repeated_fixed64?: number[];
            repeated_sfixed32?: number[];
            repeated_sfixed64?: number[];
            repeated_float?: number[];
            repeated_double?: number[];
            repeated_bool?: boolean[];
            repeated_string?: string[];
            repeated_bytes?: Uint8Array[];
            repeated_nested_message?: TestAllTypesProto3.NestedMessage[];
            repeated_foreign_message?: ForeignMessage[];
            repeated_nested_enum?: TestAllTypesProto3.NestedEnum[];
            repeated_foreign_enum?: ForeignEnum[];
            repeated_string_piece?: string[];
            repeated_cord?: string[];
            packed_int32?: number[];
            packed_int64?: number[];
            packed_uint32?: number[];
            packed_uint64?: number[];
            packed_sint32?: number[];
            packed_sint64?: number[];
            packed_fixed32?: number[];
            packed_fixed64?: number[];
            packed_sfixed32?: number[];
            packed_sfixed64?: number[];
            packed_float?: number[];
            packed_double?: number[];
            packed_bool?: boolean[];
            packed_nested_enum?: TestAllTypesProto3.NestedEnum[];
            unpacked_int32?: number[];
            unpacked_int64?: number[];
            unpacked_uint32?: number[];
            unpacked_uint64?: number[];
            unpacked_sint32?: number[];
            unpacked_sint64?: number[];
            unpacked_fixed32?: number[];
            unpacked_fixed64?: number[];
            unpacked_sfixed32?: number[];
            unpacked_sfixed64?: number[];
            unpacked_float?: number[];
            unpacked_double?: number[];
            unpacked_bool?: boolean[];
            unpacked_nested_enum?: TestAllTypesProto3.NestedEnum[];
            map_int32_int32?: Map<number, number>;
            map_int64_int64?: Map<number, number>;
            map_uint32_uint32?: Map<number, number>;
            map_uint64_uint64?: Map<number, number>;
            map_sint32_sint32?: Map<number, number>;
            map_sint64_sint64?: Map<number, number>;
            map_fixed32_fixed32?: Map<number, number>;
            map_fixed64_fixed64?: Map<number, number>;
            map_sfixed32_sfixed32?: Map<number, number>;
            map_sfixed64_sfixed64?: Map<number, number>;
            map_int32_float?: Map<number, number>;
            map_int32_double?: Map<number, number>;
            map_bool_bool?: Map<boolean, boolean>;
            map_string_string?: Map<string, string>;
            map_string_bytes?: Map<string, Uint8Array>;
            map_string_nested_message?: Map<string, TestAllTypesProto3.NestedMessage>;
            map_string_foreign_message?: Map<string, ForeignMessage>;
            map_string_nested_enum?: Map<string, TestAllTypesProto3.NestedEnum>;
            map_string_foreign_enum?: Map<string, ForeignEnum>;
            optional_bool_wrapper?: dependency_6.google.protobuf.BoolValue;
            optional_int32_wrapper?: dependency_6.google.protobuf.Int32Value;
            optional_int64_wrapper?: dependency_6.google.protobuf.Int64Value;
            optional_uint32_wrapper?: dependency_6.google.protobuf.UInt32Value;
            optional_uint64_wrapper?: dependency_6.google.protobuf.UInt64Value;
            optional_float_wrapper?: dependency_6.google.protobuf.FloatValue;
            optional_double_wrapper?: dependency_6.google.protobuf.DoubleValue;
            optional_string_wrapper?: dependency_6.google.protobuf.StringValue;
            optional_bytes_wrapper?: dependency_6.google.protobuf.BytesValue;
            repeated_bool_wrapper?: dependency_6.google.protobuf.BoolValue[];
            repeated_int32_wrapper?: dependency_6.google.protobuf.Int32Value[];
            repeated_int64_wrapper?: dependency_6.google.protobuf.Int64Value[];
            repeated_uint32_wrapper?: dependency_6.google.protobuf.UInt32Value[];
            repeated_uint64_wrapper?: dependency_6.google.protobuf.UInt64Value[];
            repeated_float_wrapper?: dependency_6.google.protobuf.FloatValue[];
            repeated_double_wrapper?: dependency_6.google.protobuf.DoubleValue[];
            repeated_string_wrapper?: dependency_6.google.protobuf.StringValue[];
            repeated_bytes_wrapper?: dependency_6.google.protobuf.BytesValue[];
            optional_duration?: dependency_2.google.protobuf.Duration;
            optional_timestamp?: dependency_5.google.protobuf.Timestamp;
            optional_field_mask?: dependency_3.google.protobuf.FieldMask;
            optional_struct?: dependency_4.google.protobuf.Struct;
            optional_any?: dependency_1.google.protobuf.Any;
            optional_value?: dependency_4.google.protobuf.Value;
            optional_null_value?: dependency_4.google.protobuf.NullValue;
            repeated_duration?: dependency_2.google.protobuf.Duration[];
            repeated_timestamp?: dependency_5.google.protobuf.Timestamp[];
            repeated_fieldmask?: dependency_3.google.protobuf.FieldMask[];
            repeated_struct?: dependency_4.google.protobuf.Struct[];
            repeated_any?: dependency_1.google.protobuf.Any[];
            repeated_value?: dependency_4.google.protobuf.Value[];
            repeated_list_value?: dependency_4.google.protobuf.ListValue[];
            fieldname1?: number;
            field_name2?: number;
            _field_name3?: number;
            field__name4_?: number;
            field0name5?: number;
            field_0_name6?: number;
            fieldName7?: number;
            FieldName8?: number;
            field_Name9?: number;
            Field_Name10?: number;
            FIELD_NAME11?: number;
            FIELD_name12?: number;
            __field_name13?: number;
            __Field_name14?: number;
            field__name15?: number;
            field__Name16?: number;
            field_name17__?: number;
            Field_name18__?: number;
        } & (({
            oneof_uint32?: number;
            oneof_nested_message?: never;
            oneof_string?: never;
            oneof_bytes?: never;
            oneof_bool?: never;
            oneof_uint64?: never;
            oneof_float?: never;
            oneof_double?: never;
            oneof_enum?: never;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: TestAllTypesProto3.NestedMessage;
            oneof_string?: never;
            oneof_bytes?: never;
            oneof_bool?: never;
            oneof_uint64?: never;
            oneof_float?: never;
            oneof_double?: never;
            oneof_enum?: never;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: never;
            oneof_string?: string;
            oneof_bytes?: never;
            oneof_bool?: never;
            oneof_uint64?: never;
            oneof_float?: never;
            oneof_double?: never;
            oneof_enum?: never;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: never;
            oneof_string?: never;
            oneof_bytes?: Uint8Array;
            oneof_bool?: never;
            oneof_uint64?: never;
            oneof_float?: never;
            oneof_double?: never;
            oneof_enum?: never;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: never;
            oneof_string?: never;
            oneof_bytes?: never;
            oneof_bool?: boolean;
            oneof_uint64?: never;
            oneof_float?: never;
            oneof_double?: never;
            oneof_enum?: never;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: never;
            oneof_string?: never;
            oneof_bytes?: never;
            oneof_bool?: never;
            oneof_uint64?: number;
            oneof_float?: never;
            oneof_double?: never;
            oneof_enum?: never;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: never;
            oneof_string?: never;
            oneof_bytes?: never;
            oneof_bool?: never;
            oneof_uint64?: never;
            oneof_float?: number;
            oneof_double?: never;
            oneof_enum?: never;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: never;
            oneof_string?: never;
            oneof_bytes?: never;
            oneof_bool?: never;
            oneof_uint64?: never;
            oneof_float?: never;
            oneof_double?: number;
            oneof_enum?: never;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: never;
            oneof_string?: never;
            oneof_bytes?: never;
            oneof_bool?: never;
            oneof_uint64?: never;
            oneof_float?: never;
            oneof_double?: never;
            oneof_enum?: TestAllTypesProto3.NestedEnum;
            oneof_null_value?: never;
        } | {
            oneof_uint32?: never;
            oneof_nested_message?: never;
            oneof_string?: never;
            oneof_bytes?: never;
            oneof_bool?: never;
            oneof_uint64?: never;
            oneof_float?: never;
            oneof_double?: never;
            oneof_enum?: never;
            oneof_null_value?: dependency_4.google.protobuf.NullValue;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 54, 55, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 211, 212, 213, 214, 215, 216, 217, 218, 219, 311, 312, 313, 324, 315, 316, 317], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("optional_int32" in data && data.optional_int32 != undefined) {
                    this.optional_int32 = data.optional_int32;
                }
                if ("optional_int64" in data && data.optional_int64 != undefined) {
                    this.optional_int64 = data.optional_int64;
                }
                if ("optional_uint32" in data && data.optional_uint32 != undefined) {
                    this.optional_uint32 = data.optional_uint32;
                }
                if ("optional_uint64" in data && data.optional_uint64 != undefined) {
                    this.optional_uint64 = data.optional_uint64;
                }
                if ("optional_sint32" in data && data.optional_sint32 != undefined) {
                    this.optional_sint32 = data.optional_sint32;
                }
                if ("optional_sint64" in data && data.optional_sint64 != undefined) {
                    this.optional_sint64 = data.optional_sint64;
                }
                if ("optional_fixed32" in data && data.optional_fixed32 != undefined) {
                    this.optional_fixed32 = data.optional_fixed32;
                }
                if ("optional_fixed64" in data && data.optional_fixed64 != undefined) {
                    this.optional_fixed64 = data.optional_fixed64;
                }
                if ("optional_sfixed32" in data && data.optional_sfixed32 != undefined) {
                    this.optional_sfixed32 = data.optional_sfixed32;
                }
                if ("optional_sfixed64" in data && data.optional_sfixed64 != undefined) {
                    this.optional_sfixed64 = data.optional_sfixed64;
                }
                if ("optional_float" in data && data.optional_float != undefined) {
                    this.optional_float = data.optional_float;
                }
                if ("optional_double" in data && data.optional_double != undefined) {
                    this.optional_double = data.optional_double;
                }
                if ("optional_bool" in data && data.optional_bool != undefined) {
                    this.optional_bool = data.optional_bool;
                }
                if ("optional_string" in data && data.optional_string != undefined) {
                    this.optional_string = data.optional_string;
                }
                if ("optional_bytes" in data && data.optional_bytes != undefined) {
                    this.optional_bytes = data.optional_bytes;
                }
                if ("optional_nested_message" in data && data.optional_nested_message != undefined) {
                    this.optional_nested_message = data.optional_nested_message;
                }
                if ("optional_foreign_message" in data && data.optional_foreign_message != undefined) {
                    this.optional_foreign_message = data.optional_foreign_message;
                }
                if ("optional_nested_enum" in data && data.optional_nested_enum != undefined) {
                    this.optional_nested_enum = data.optional_nested_enum;
                }
                if ("optional_foreign_enum" in data && data.optional_foreign_enum != undefined) {
                    this.optional_foreign_enum = data.optional_foreign_enum;
                }
                if ("optional_aliased_enum" in data && data.optional_aliased_enum != undefined) {
                    this.optional_aliased_enum = data.optional_aliased_enum;
                }
                if ("optional_string_piece" in data && data.optional_string_piece != undefined) {
                    this.optional_string_piece = data.optional_string_piece;
                }
                if ("optional_cord" in data && data.optional_cord != undefined) {
                    this.optional_cord = data.optional_cord;
                }
                if ("recursive_message" in data && data.recursive_message != undefined) {
                    this.recursive_message = data.recursive_message;
                }
                if ("repeated_int32" in data && data.repeated_int32 != undefined) {
                    this.repeated_int32 = data.repeated_int32;
                }
                if ("repeated_int64" in data && data.repeated_int64 != undefined) {
                    this.repeated_int64 = data.repeated_int64;
                }
                if ("repeated_uint32" in data && data.repeated_uint32 != undefined) {
                    this.repeated_uint32 = data.repeated_uint32;
                }
                if ("repeated_uint64" in data && data.repeated_uint64 != undefined) {
                    this.repeated_uint64 = data.repeated_uint64;
                }
                if ("repeated_sint32" in data && data.repeated_sint32 != undefined) {
                    this.repeated_sint32 = data.repeated_sint32;
                }
                if ("repeated_sint64" in data && data.repeated_sint64 != undefined) {
                    this.repeated_sint64 = data.repeated_sint64;
                }
                if ("repeated_fixed32" in data && data.repeated_fixed32 != undefined) {
                    this.repeated_fixed32 = data.repeated_fixed32;
                }
                if ("repeated_fixed64" in data && data.repeated_fixed64 != undefined) {
                    this.repeated_fixed64 = data.repeated_fixed64;
                }
                if ("repeated_sfixed32" in data && data.repeated_sfixed32 != undefined) {
                    this.repeated_sfixed32 = data.repeated_sfixed32;
                }
                if ("repeated_sfixed64" in data && data.repeated_sfixed64 != undefined) {
                    this.repeated_sfixed64 = data.repeated_sfixed64;
                }
                if ("repeated_float" in data && data.repeated_float != undefined) {
                    this.repeated_float = data.repeated_float;
                }
                if ("repeated_double" in data && data.repeated_double != undefined) {
                    this.repeated_double = data.repeated_double;
                }
                if ("repeated_bool" in data && data.repeated_bool != undefined) {
                    this.repeated_bool = data.repeated_bool;
                }
                if ("repeated_string" in data && data.repeated_string != undefined) {
                    this.repeated_string = data.repeated_string;
                }
                if ("repeated_bytes" in data && data.repeated_bytes != undefined) {
                    this.repeated_bytes = data.repeated_bytes;
                }
                if ("repeated_nested_message" in data && data.repeated_nested_message != undefined) {
                    this.repeated_nested_message = data.repeated_nested_message;
                }
                if ("repeated_foreign_message" in data && data.repeated_foreign_message != undefined) {
                    this.repeated_foreign_message = data.repeated_foreign_message;
                }
                if ("repeated_nested_enum" in data && data.repeated_nested_enum != undefined) {
                    this.repeated_nested_enum = data.repeated_nested_enum;
                }
                if ("repeated_foreign_enum" in data && data.repeated_foreign_enum != undefined) {
                    this.repeated_foreign_enum = data.repeated_foreign_enum;
                }
                if ("repeated_string_piece" in data && data.repeated_string_piece != undefined) {
                    this.repeated_string_piece = data.repeated_string_piece;
                }
                if ("repeated_cord" in data && data.repeated_cord != undefined) {
                    this.repeated_cord = data.repeated_cord;
                }
                if ("packed_int32" in data && data.packed_int32 != undefined) {
                    this.packed_int32 = data.packed_int32;
                }
                if ("packed_int64" in data && data.packed_int64 != undefined) {
                    this.packed_int64 = data.packed_int64;
                }
                if ("packed_uint32" in data && data.packed_uint32 != undefined) {
                    this.packed_uint32 = data.packed_uint32;
                }
                if ("packed_uint64" in data && data.packed_uint64 != undefined) {
                    this.packed_uint64 = data.packed_uint64;
                }
                if ("packed_sint32" in data && data.packed_sint32 != undefined) {
                    this.packed_sint32 = data.packed_sint32;
                }
                if ("packed_sint64" in data && data.packed_sint64 != undefined) {
                    this.packed_sint64 = data.packed_sint64;
                }
                if ("packed_fixed32" in data && data.packed_fixed32 != undefined) {
                    this.packed_fixed32 = data.packed_fixed32;
                }
                if ("packed_fixed64" in data && data.packed_fixed64 != undefined) {
                    this.packed_fixed64 = data.packed_fixed64;
                }
                if ("packed_sfixed32" in data && data.packed_sfixed32 != undefined) {
                    this.packed_sfixed32 = data.packed_sfixed32;
                }
                if ("packed_sfixed64" in data && data.packed_sfixed64 != undefined) {
                    this.packed_sfixed64 = data.packed_sfixed64;
                }
                if ("packed_float" in data && data.packed_float != undefined) {
                    this.packed_float = data.packed_float;
                }
                if ("packed_double" in data && data.packed_double != undefined) {
                    this.packed_double = data.packed_double;
                }
                if ("packed_bool" in data && data.packed_bool != undefined) {
                    this.packed_bool = data.packed_bool;
                }
                if ("packed_nested_enum" in data && data.packed_nested_enum != undefined) {
                    this.packed_nested_enum = data.packed_nested_enum;
                }
                if ("unpacked_int32" in data && data.unpacked_int32 != undefined) {
                    this.unpacked_int32 = data.unpacked_int32;
                }
                if ("unpacked_int64" in data && data.unpacked_int64 != undefined) {
                    this.unpacked_int64 = data.unpacked_int64;
                }
                if ("unpacked_uint32" in data && data.unpacked_uint32 != undefined) {
                    this.unpacked_uint32 = data.unpacked_uint32;
                }
                if ("unpacked_uint64" in data && data.unpacked_uint64 != undefined) {
                    this.unpacked_uint64 = data.unpacked_uint64;
                }
                if ("unpacked_sint32" in data && data.unpacked_sint32 != undefined) {
                    this.unpacked_sint32 = data.unpacked_sint32;
                }
                if ("unpacked_sint64" in data && data.unpacked_sint64 != undefined) {
                    this.unpacked_sint64 = data.unpacked_sint64;
                }
                if ("unpacked_fixed32" in data && data.unpacked_fixed32 != undefined) {
                    this.unpacked_fixed32 = data.unpacked_fixed32;
                }
                if ("unpacked_fixed64" in data && data.unpacked_fixed64 != undefined) {
                    this.unpacked_fixed64 = data.unpacked_fixed64;
                }
                if ("unpacked_sfixed32" in data && data.unpacked_sfixed32 != undefined) {
                    this.unpacked_sfixed32 = data.unpacked_sfixed32;
                }
                if ("unpacked_sfixed64" in data && data.unpacked_sfixed64 != undefined) {
                    this.unpacked_sfixed64 = data.unpacked_sfixed64;
                }
                if ("unpacked_float" in data && data.unpacked_float != undefined) {
                    this.unpacked_float = data.unpacked_float;
                }
                if ("unpacked_double" in data && data.unpacked_double != undefined) {
                    this.unpacked_double = data.unpacked_double;
                }
                if ("unpacked_bool" in data && data.unpacked_bool != undefined) {
                    this.unpacked_bool = data.unpacked_bool;
                }
                if ("unpacked_nested_enum" in data && data.unpacked_nested_enum != undefined) {
                    this.unpacked_nested_enum = data.unpacked_nested_enum;
                }
                if ("map_int32_int32" in data && data.map_int32_int32 != undefined) {
                    this.map_int32_int32 = data.map_int32_int32;
                }
                if ("map_int64_int64" in data && data.map_int64_int64 != undefined) {
                    this.map_int64_int64 = data.map_int64_int64;
                }
                if ("map_uint32_uint32" in data && data.map_uint32_uint32 != undefined) {
                    this.map_uint32_uint32 = data.map_uint32_uint32;
                }
                if ("map_uint64_uint64" in data && data.map_uint64_uint64 != undefined) {
                    this.map_uint64_uint64 = data.map_uint64_uint64;
                }
                if ("map_sint32_sint32" in data && data.map_sint32_sint32 != undefined) {
                    this.map_sint32_sint32 = data.map_sint32_sint32;
                }
                if ("map_sint64_sint64" in data && data.map_sint64_sint64 != undefined) {
                    this.map_sint64_sint64 = data.map_sint64_sint64;
                }
                if ("map_fixed32_fixed32" in data && data.map_fixed32_fixed32 != undefined) {
                    this.map_fixed32_fixed32 = data.map_fixed32_fixed32;
                }
                if ("map_fixed64_fixed64" in data && data.map_fixed64_fixed64 != undefined) {
                    this.map_fixed64_fixed64 = data.map_fixed64_fixed64;
                }
                if ("map_sfixed32_sfixed32" in data && data.map_sfixed32_sfixed32 != undefined) {
                    this.map_sfixed32_sfixed32 = data.map_sfixed32_sfixed32;
                }
                if ("map_sfixed64_sfixed64" in data && data.map_sfixed64_sfixed64 != undefined) {
                    this.map_sfixed64_sfixed64 = data.map_sfixed64_sfixed64;
                }
                if ("map_int32_float" in data && data.map_int32_float != undefined) {
                    this.map_int32_float = data.map_int32_float;
                }
                if ("map_int32_double" in data && data.map_int32_double != undefined) {
                    this.map_int32_double = data.map_int32_double;
                }
                if ("map_bool_bool" in data && data.map_bool_bool != undefined) {
                    this.map_bool_bool = data.map_bool_bool;
                }
                if ("map_string_string" in data && data.map_string_string != undefined) {
                    this.map_string_string = data.map_string_string;
                }
                if ("map_string_bytes" in data && data.map_string_bytes != undefined) {
                    this.map_string_bytes = data.map_string_bytes;
                }
                if ("map_string_nested_message" in data && data.map_string_nested_message != undefined) {
                    this.map_string_nested_message = data.map_string_nested_message;
                }
                if ("map_string_foreign_message" in data && data.map_string_foreign_message != undefined) {
                    this.map_string_foreign_message = data.map_string_foreign_message;
                }
                if ("map_string_nested_enum" in data && data.map_string_nested_enum != undefined) {
                    this.map_string_nested_enum = data.map_string_nested_enum;
                }
                if ("map_string_foreign_enum" in data && data.map_string_foreign_enum != undefined) {
                    this.map_string_foreign_enum = data.map_string_foreign_enum;
                }
                if ("oneof_uint32" in data && data.oneof_uint32 != undefined) {
                    this.oneof_uint32 = data.oneof_uint32;
                }
                if ("oneof_nested_message" in data && data.oneof_nested_message != undefined) {
                    this.oneof_nested_message = data.oneof_nested_message;
                }
                if ("oneof_string" in data && data.oneof_string != undefined) {
                    this.oneof_string = data.oneof_string;
                }
                if ("oneof_bytes" in data && data.oneof_bytes != undefined) {
                    this.oneof_bytes = data.oneof_bytes;
                }
                if ("oneof_bool" in data && data.oneof_bool != undefined) {
                    this.oneof_bool = data.oneof_bool;
                }
                if ("oneof_uint64" in data && data.oneof_uint64 != undefined) {
                    this.oneof_uint64 = data.oneof_uint64;
                }
                if ("oneof_float" in data && data.oneof_float != undefined) {
                    this.oneof_float = data.oneof_float;
                }
                if ("oneof_double" in data && data.oneof_double != undefined) {
                    this.oneof_double = data.oneof_double;
                }
                if ("oneof_enum" in data && data.oneof_enum != undefined) {
                    this.oneof_enum = data.oneof_enum;
                }
                if ("oneof_null_value" in data && data.oneof_null_value != undefined) {
                    this.oneof_null_value = data.oneof_null_value;
                }
                if ("optional_bool_wrapper" in data && data.optional_bool_wrapper != undefined) {
                    this.optional_bool_wrapper = data.optional_bool_wrapper;
                }
                if ("optional_int32_wrapper" in data && data.optional_int32_wrapper != undefined) {
                    this.optional_int32_wrapper = data.optional_int32_wrapper;
                }
                if ("optional_int64_wrapper" in data && data.optional_int64_wrapper != undefined) {
                    this.optional_int64_wrapper = data.optional_int64_wrapper;
                }
                if ("optional_uint32_wrapper" in data && data.optional_uint32_wrapper != undefined) {
                    this.optional_uint32_wrapper = data.optional_uint32_wrapper;
                }
                if ("optional_uint64_wrapper" in data && data.optional_uint64_wrapper != undefined) {
                    this.optional_uint64_wrapper = data.optional_uint64_wrapper;
                }
                if ("optional_float_wrapper" in data && data.optional_float_wrapper != undefined) {
                    this.optional_float_wrapper = data.optional_float_wrapper;
                }
                if ("optional_double_wrapper" in data && data.optional_double_wrapper != undefined) {
                    this.optional_double_wrapper = data.optional_double_wrapper;
                }
                if ("optional_string_wrapper" in data && data.optional_string_wrapper != undefined) {
                    this.optional_string_wrapper = data.optional_string_wrapper;
                }
                if ("optional_bytes_wrapper" in data && data.optional_bytes_wrapper != undefined) {
                    this.optional_bytes_wrapper = data.optional_bytes_wrapper;
                }
                if ("repeated_bool_wrapper" in data && data.repeated_bool_wrapper != undefined) {
                    this.repeated_bool_wrapper = data.repeated_bool_wrapper;
                }
                if ("repeated_int32_wrapper" in data && data.repeated_int32_wrapper != undefined) {
                    this.repeated_int32_wrapper = data.repeated_int32_wrapper;
                }
                if ("repeated_int64_wrapper" in data && data.repeated_int64_wrapper != undefined) {
                    this.repeated_int64_wrapper = data.repeated_int64_wrapper;
                }
                if ("repeated_uint32_wrapper" in data && data.repeated_uint32_wrapper != undefined) {
                    this.repeated_uint32_wrapper = data.repeated_uint32_wrapper;
                }
                if ("repeated_uint64_wrapper" in data && data.repeated_uint64_wrapper != undefined) {
                    this.repeated_uint64_wrapper = data.repeated_uint64_wrapper;
                }
                if ("repeated_float_wrapper" in data && data.repeated_float_wrapper != undefined) {
                    this.repeated_float_wrapper = data.repeated_float_wrapper;
                }
                if ("repeated_double_wrapper" in data && data.repeated_double_wrapper != undefined) {
                    this.repeated_double_wrapper = data.repeated_double_wrapper;
                }
                if ("repeated_string_wrapper" in data && data.repeated_string_wrapper != undefined) {
                    this.repeated_string_wrapper = data.repeated_string_wrapper;
                }
                if ("repeated_bytes_wrapper" in data && data.repeated_bytes_wrapper != undefined) {
                    this.repeated_bytes_wrapper = data.repeated_bytes_wrapper;
                }
                if ("optional_duration" in data && data.optional_duration != undefined) {
                    this.optional_duration = data.optional_duration;
                }
                if ("optional_timestamp" in data && data.optional_timestamp != undefined) {
                    this.optional_timestamp = data.optional_timestamp;
                }
                if ("optional_field_mask" in data && data.optional_field_mask != undefined) {
                    this.optional_field_mask = data.optional_field_mask;
                }
                if ("optional_struct" in data && data.optional_struct != undefined) {
                    this.optional_struct = data.optional_struct;
                }
                if ("optional_any" in data && data.optional_any != undefined) {
                    this.optional_any = data.optional_any;
                }
                if ("optional_value" in data && data.optional_value != undefined) {
                    this.optional_value = data.optional_value;
                }
                if ("optional_null_value" in data && data.optional_null_value != undefined) {
                    this.optional_null_value = data.optional_null_value;
                }
                if ("repeated_duration" in data && data.repeated_duration != undefined) {
                    this.repeated_duration = data.repeated_duration;
                }
                if ("repeated_timestamp" in data && data.repeated_timestamp != undefined) {
                    this.repeated_timestamp = data.repeated_timestamp;
                }
                if ("repeated_fieldmask" in data && data.repeated_fieldmask != undefined) {
                    this.repeated_fieldmask = data.repeated_fieldmask;
                }
                if ("repeated_struct" in data && data.repeated_struct != undefined) {
                    this.repeated_struct = data.repeated_struct;
                }
                if ("repeated_any" in data && data.repeated_any != undefined) {
                    this.repeated_any = data.repeated_any;
                }
                if ("repeated_value" in data && data.repeated_value != undefined) {
                    this.repeated_value = data.repeated_value;
                }
                if ("repeated_list_value" in data && data.repeated_list_value != undefined) {
                    this.repeated_list_value = data.repeated_list_value;
                }
                if ("fieldname1" in data && data.fieldname1 != undefined) {
                    this.fieldname1 = data.fieldname1;
                }
                if ("field_name2" in data && data.field_name2 != undefined) {
                    this.field_name2 = data.field_name2;
                }
                if ("_field_name3" in data && data._field_name3 != undefined) {
                    this._field_name3 = data._field_name3;
                }
                if ("field__name4_" in data && data.field__name4_ != undefined) {
                    this.field__name4_ = data.field__name4_;
                }
                if ("field0name5" in data && data.field0name5 != undefined) {
                    this.field0name5 = data.field0name5;
                }
                if ("field_0_name6" in data && data.field_0_name6 != undefined) {
                    this.field_0_name6 = data.field_0_name6;
                }
                if ("fieldName7" in data && data.fieldName7 != undefined) {
                    this.fieldName7 = data.fieldName7;
                }
                if ("FieldName8" in data && data.FieldName8 != undefined) {
                    this.FieldName8 = data.FieldName8;
                }
                if ("field_Name9" in data && data.field_Name9 != undefined) {
                    this.field_Name9 = data.field_Name9;
                }
                if ("Field_Name10" in data && data.Field_Name10 != undefined) {
                    this.Field_Name10 = data.Field_Name10;
                }
                if ("FIELD_NAME11" in data && data.FIELD_NAME11 != undefined) {
                    this.FIELD_NAME11 = data.FIELD_NAME11;
                }
                if ("FIELD_name12" in data && data.FIELD_name12 != undefined) {
                    this.FIELD_name12 = data.FIELD_name12;
                }
                if ("__field_name13" in data && data.__field_name13 != undefined) {
                    this.__field_name13 = data.__field_name13;
                }
                if ("__Field_name14" in data && data.__Field_name14 != undefined) {
                    this.__Field_name14 = data.__Field_name14;
                }
                if ("field__name15" in data && data.field__name15 != undefined) {
                    this.field__name15 = data.field__name15;
                }
                if ("field__Name16" in data && data.field__Name16 != undefined) {
                    this.field__Name16 = data.field__Name16;
                }
                if ("field_name17__" in data && data.field_name17__ != undefined) {
                    this.field_name17__ = data.field_name17__;
                }
                if ("Field_name18__" in data && data.Field_name18__ != undefined) {
                    this.Field_name18__ = data.Field_name18__;
                }
            }
            if (!this.map_int32_int32)
                this.map_int32_int32 = new Map();
            if (!this.map_int64_int64)
                this.map_int64_int64 = new Map();
            if (!this.map_uint32_uint32)
                this.map_uint32_uint32 = new Map();
            if (!this.map_uint64_uint64)
                this.map_uint64_uint64 = new Map();
            if (!this.map_sint32_sint32)
                this.map_sint32_sint32 = new Map();
            if (!this.map_sint64_sint64)
                this.map_sint64_sint64 = new Map();
            if (!this.map_fixed32_fixed32)
                this.map_fixed32_fixed32 = new Map();
            if (!this.map_fixed64_fixed64)
                this.map_fixed64_fixed64 = new Map();
            if (!this.map_sfixed32_sfixed32)
                this.map_sfixed32_sfixed32 = new Map();
            if (!this.map_sfixed64_sfixed64)
                this.map_sfixed64_sfixed64 = new Map();
            if (!this.map_int32_float)
                this.map_int32_float = new Map();
            if (!this.map_int32_double)
                this.map_int32_double = new Map();
            if (!this.map_bool_bool)
                this.map_bool_bool = new Map();
            if (!this.map_string_string)
                this.map_string_string = new Map();
            if (!this.map_string_bytes)
                this.map_string_bytes = new Map();
            if (!this.map_string_nested_message)
                this.map_string_nested_message = new Map();
            if (!this.map_string_foreign_message)
                this.map_string_foreign_message = new Map();
            if (!this.map_string_nested_enum)
                this.map_string_nested_enum = new Map();
            if (!this.map_string_foreign_enum)
                this.map_string_foreign_enum = new Map();
        }
        get optional_int32() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set optional_int32(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get optional_int64() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set optional_int64(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get optional_uint32() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set optional_uint32(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get optional_uint64() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set optional_uint64(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get optional_sint32() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set optional_sint32(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get optional_sint64() {
            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
        }
        set optional_sint64(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get optional_fixed32() {
            return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
        }
        set optional_fixed32(value: number) {
            pb_1.Message.setField(this, 7, value);
        }
        get optional_fixed64() {
            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
        }
        set optional_fixed64(value: number) {
            pb_1.Message.setField(this, 8, value);
        }
        get optional_sfixed32() {
            return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
        }
        set optional_sfixed32(value: number) {
            pb_1.Message.setField(this, 9, value);
        }
        get optional_sfixed64() {
            return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;
        }
        set optional_sfixed64(value: number) {
            pb_1.Message.setField(this, 10, value);
        }
        get optional_float() {
            return pb_1.Message.getFieldWithDefault(this, 11, 0) as number;
        }
        set optional_float(value: number) {
            pb_1.Message.setField(this, 11, value);
        }
        get optional_double() {
            return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
        }
        set optional_double(value: number) {
            pb_1.Message.setField(this, 12, value);
        }
        get optional_bool() {
            return pb_1.Message.getFieldWithDefault(this, 13, false) as boolean;
        }
        set optional_bool(value: boolean) {
            pb_1.Message.setField(this, 13, value);
        }
        get optional_string() {
            return pb_1.Message.getFieldWithDefault(this, 14, "") as string;
        }
        set optional_string(value: string) {
            pb_1.Message.setField(this, 14, value);
        }
        get optional_bytes() {
            return pb_1.Message.getFieldWithDefault(this, 15, new Uint8Array(0)) as Uint8Array;
        }
        set optional_bytes(value: Uint8Array) {
            pb_1.Message.setField(this, 15, value);
        }
        get optional_nested_message() {
            return pb_1.Message.getWrapperField(this, TestAllTypesProto3.NestedMessage, 18) as TestAllTypesProto3.NestedMessage;
        }
        set optional_nested_message(value: TestAllTypesProto3.NestedMessage) {
            pb_1.Message.setWrapperField(this, 18, value);
        }
        get has_optional_nested_message() {
            return pb_1.Message.getField(this, 18) != null;
        }
        get optional_foreign_message() {
            return pb_1.Message.getWrapperField(this, ForeignMessage, 19) as ForeignMessage;
        }
        set optional_foreign_message(value: ForeignMessage) {
            pb_1.Message.setWrapperField(this, 19, value);
        }
        get has_optional_foreign_message() {
            return pb_1.Message.getField(this, 19) != null;
        }
        get optional_nested_enum() {
            return pb_1.Message.getFieldWithDefault(this, 21, TestAllTypesProto3.NestedEnum.FOO) as TestAllTypesProto3.NestedEnum;
        }
        set optional_nested_enum(value: TestAllTypesProto3.NestedEnum) {
            pb_1.Message.setField(this, 21, value);
        }
        get optional_foreign_enum() {
            return pb_1.Message.getFieldWithDefault(this, 22, ForeignEnum.FOREIGN_FOO) as ForeignEnum;
        }
        set optional_foreign_enum(value: ForeignEnum) {
            pb_1.Message.setField(this, 22, value);
        }
        get optional_aliased_enum() {
            return pb_1.Message.getFieldWithDefault(this, 23, TestAllTypesProto3.AliasedEnum.ALIAS_FOO) as TestAllTypesProto3.AliasedEnum;
        }
        set optional_aliased_enum(value: TestAllTypesProto3.AliasedEnum) {
            pb_1.Message.setField(this, 23, value);
        }
        get optional_string_piece() {
            return pb_1.Message.getFieldWithDefault(this, 24, "") as string;
        }
        set optional_string_piece(value: string) {
            pb_1.Message.setField(this, 24, value);
        }
        get optional_cord() {
            return pb_1.Message.getFieldWithDefault(this, 25, "") as string;
        }
        set optional_cord(value: string) {
            pb_1.Message.setField(this, 25, value);
        }
        get recursive_message() {
            return pb_1.Message.getWrapperField(this, TestAllTypesProto3, 27) as TestAllTypesProto3;
        }
        set recursive_message(value: TestAllTypesProto3) {
            pb_1.Message.setWrapperField(this, 27, value);
        }
        get has_recursive_message() {
            return pb_1.Message.getField(this, 27) != null;
        }
        get repeated_int32() {
            return pb_1.Message.getFieldWithDefault(this, 31, []) as number[];
        }
        set repeated_int32(value: number[]) {
            pb_1.Message.setField(this, 31, value);
        }
        get repeated_int64() {
            return pb_1.Message.getFieldWithDefault(this, 32, []) as number[];
        }
        set repeated_int64(value: number[]) {
            pb_1.Message.setField(this, 32, value);
        }
        get repeated_uint32() {
            return pb_1.Message.getFieldWithDefault(this, 33, []) as number[];
        }
        set repeated_uint32(value: number[]) {
            pb_1.Message.setField(this, 33, value);
        }
        get repeated_uint64() {
            return pb_1.Message.getFieldWithDefault(this, 34, []) as number[];
        }
        set repeated_uint64(value: number[]) {
            pb_1.Message.setField(this, 34, value);
        }
        get repeated_sint32() {
            return pb_1.Message.getFieldWithDefault(this, 35, []) as number[];
        }
        set repeated_sint32(value: number[]) {
            pb_1.Message.setField(this, 35, value);
        }
        get repeated_sint64() {
            return pb_1.Message.getFieldWithDefault(this, 36, []) as number[];
        }
        set repeated_sint64(value: number[]) {
            pb_1.Message.setField(this, 36, value);
        }
        get repeated_fixed32() {
            return pb_1.Message.getFieldWithDefault(this, 37, []) as number[];
        }
        set repeated_fixed32(value: number[]) {
            pb_1.Message.setField(this, 37, value);
        }
        get repeated_fixed64() {
            return pb_1.Message.getFieldWithDefault(this, 38, []) as number[];
        }
        set repeated_fixed64(value: number[]) {
            pb_1.Message.setField(this, 38, value);
        }
        get repeated_sfixed32() {
            return pb_1.Message.getFieldWithDefault(this, 39, []) as number[];
        }
        set repeated_sfixed32(value: number[]) {
            pb_1.Message.setField(this, 39, value);
        }
        get repeated_sfixed64() {
            return pb_1.Message.getFieldWithDefault(this, 40, []) as number[];
        }
        set repeated_sfixed64(value: number[]) {
            pb_1.Message.setField(this, 40, value);
        }
        get repeated_float() {
            return pb_1.Message.getFieldWithDefault(this, 41, []) as number[];
        }
        set repeated_float(value: number[]) {
            pb_1.Message.setField(this, 41, value);
        }
        get repeated_double() {
            return pb_1.Message.getFieldWithDefault(this, 42, []) as number[];
        }
        set repeated_double(value: number[]) {
            pb_1.Message.setField(this, 42, value);
        }
        get repeated_bool() {
            return pb_1.Message.getFieldWithDefault(this, 43, []) as boolean[];
        }
        set repeated_bool(value: boolean[]) {
            pb_1.Message.setField(this, 43, value);
        }
        get repeated_string() {
            return pb_1.Message.getFieldWithDefault(this, 44, []) as string[];
        }
        set repeated_string(value: string[]) {
            pb_1.Message.setField(this, 44, value);
        }
        get repeated_bytes() {
            return pb_1.Message.getFieldWithDefault(this, 45, []) as Uint8Array[];
        }
        set repeated_bytes(value: Uint8Array[]) {
            pb_1.Message.setField(this, 45, value);
        }
        get repeated_nested_message() {
            return pb_1.Message.getRepeatedWrapperField(this, TestAllTypesProto3.NestedMessage, 48) as TestAllTypesProto3.NestedMessage[];
        }
        set repeated_nested_message(value: TestAllTypesProto3.NestedMessage[]) {
            pb_1.Message.setRepeatedWrapperField(this, 48, value);
        }
        get repeated_foreign_message() {
            return pb_1.Message.getRepeatedWrapperField(this, ForeignMessage, 49) as ForeignMessage[];
        }
        set repeated_foreign_message(value: ForeignMessage[]) {
            pb_1.Message.setRepeatedWrapperField(this, 49, value);
        }
        get repeated_nested_enum() {
            return pb_1.Message.getFieldWithDefault(this, 51, []) as TestAllTypesProto3.NestedEnum[];
        }
        set repeated_nested_enum(value: TestAllTypesProto3.NestedEnum[]) {
            pb_1.Message.setField(this, 51, value);
        }
        get repeated_foreign_enum() {
            return pb_1.Message.getFieldWithDefault(this, 52, []) as ForeignEnum[];
        }
        set repeated_foreign_enum(value: ForeignEnum[]) {
            pb_1.Message.setField(this, 52, value);
        }
        get repeated_string_piece() {
            return pb_1.Message.getFieldWithDefault(this, 54, []) as string[];
        }
        set repeated_string_piece(value: string[]) {
            pb_1.Message.setField(this, 54, value);
        }
        get repeated_cord() {
            return pb_1.Message.getFieldWithDefault(this, 55, []) as string[];
        }
        set repeated_cord(value: string[]) {
            pb_1.Message.setField(this, 55, value);
        }
        get packed_int32() {
            return pb_1.Message.getFieldWithDefault(this, 75, []) as number[];
        }
        set packed_int32(value: number[]) {
            pb_1.Message.setField(this, 75, value);
        }
        get packed_int64() {
            return pb_1.Message.getFieldWithDefault(this, 76, []) as number[];
        }
        set packed_int64(value: number[]) {
            pb_1.Message.setField(this, 76, value);
        }
        get packed_uint32() {
            return pb_1.Message.getFieldWithDefault(this, 77, []) as number[];
        }
        set packed_uint32(value: number[]) {
            pb_1.Message.setField(this, 77, value);
        }
        get packed_uint64() {
            return pb_1.Message.getFieldWithDefault(this, 78, []) as number[];
        }
        set packed_uint64(value: number[]) {
            pb_1.Message.setField(this, 78, value);
        }
        get packed_sint32() {
            return pb_1.Message.getFieldWithDefault(this, 79, []) as number[];
        }
        set packed_sint32(value: number[]) {
            pb_1.Message.setField(this, 79, value);
        }
        get packed_sint64() {
            return pb_1.Message.getFieldWithDefault(this, 80, []) as number[];
        }
        set packed_sint64(value: number[]) {
            pb_1.Message.setField(this, 80, value);
        }
        get packed_fixed32() {
            return pb_1.Message.getFieldWithDefault(this, 81, []) as number[];
        }
        set packed_fixed32(value: number[]) {
            pb_1.Message.setField(this, 81, value);
        }
        get packed_fixed64() {
            return pb_1.Message.getFieldWithDefault(this, 82, []) as number[];
        }
        set packed_fixed64(value: number[]) {
            pb_1.Message.setField(this, 82, value);
        }
        get packed_sfixed32() {
            return pb_1.Message.getFieldWithDefault(this, 83, []) as number[];
        }
        set packed_sfixed32(value: number[]) {
            pb_1.Message.setField(this, 83, value);
        }
        get packed_sfixed64() {
            return pb_1.Message.getFieldWithDefault(this, 84, []) as number[];
        }
        set packed_sfixed64(value: number[]) {
            pb_1.Message.setField(this, 84, value);
        }
        get packed_float() {
            return pb_1.Message.getFieldWithDefault(this, 85, []) as number[];
        }
        set packed_float(value: number[]) {
            pb_1.Message.setField(this, 85, value);
        }
        get packed_double() {
            return pb_1.Message.getFieldWithDefault(this, 86, []) as number[];
        }
        set packed_double(value: number[]) {
            pb_1.Message.setField(this, 86, value);
        }
        get packed_bool() {
            return pb_1.Message.getFieldWithDefault(this, 87, []) as boolean[];
        }
        set packed_bool(value: boolean[]) {
            pb_1.Message.setField(this, 87, value);
        }
        get packed_nested_enum() {
            return pb_1.Message.getFieldWithDefault(this, 88, []) as TestAllTypesProto3.NestedEnum[];
        }
        set packed_nested_enum(value: TestAllTypesProto3.NestedEnum[]) {
            pb_1.Message.setField(this, 88, value);
        }
        get unpacked_int32() {
            return pb_1.Message.getFieldWithDefault(this, 89, []) as number[];
        }
        set unpacked_int32(value: number[]) {
            pb_1.Message.setField(this, 89, value);
        }
        get unpacked_int64() {
            return pb_1.Message.getFieldWithDefault(this, 90, []) as number[];
        }
        set unpacked_int64(value: number[]) {
            pb_1.Message.setField(this, 90, value);
        }
        get unpacked_uint32() {
            return pb_1.Message.getFieldWithDefault(this, 91, []) as number[];
        }
        set unpacked_uint32(value: number[]) {
            pb_1.Message.setField(this, 91, value);
        }
        get unpacked_uint64() {
            return pb_1.Message.getFieldWithDefault(this, 92, []) as number[];
        }
        set unpacked_uint64(value: number[]) {
            pb_1.Message.setField(this, 92, value);
        }
        get unpacked_sint32() {
            return pb_1.Message.getFieldWithDefault(this, 93, []) as number[];
        }
        set unpacked_sint32(value: number[]) {
            pb_1.Message.setField(this, 93, value);
        }
        get unpacked_sint64() {
            return pb_1.Message.getFieldWithDefault(this, 94, []) as number[];
        }
        set unpacked_sint64(value: number[]) {
            pb_1.Message.setField(this, 94, value);
        }
        get unpacked_fixed32() {
            return pb_1.Message.getFieldWithDefault(this, 95, []) as number[];
        }
        set unpacked_fixed32(value: number[]) {
            pb_1.Message.setField(this, 95, value);
        }
        get unpacked_fixed64() {
            return pb_1.Message.getFieldWithDefault(this, 96, []) as number[];
        }
        set unpacked_fixed64(value: number[]) {
            pb_1.Message.setField(this, 96, value);
        }
        get unpacked_sfixed32() {
            return pb_1.Message.getFieldWithDefault(this, 97, []) as number[];
        }
        set unpacked_sfixed32(value: number[]) {
            pb_1.Message.setField(this, 97, value);
        }
        get unpacked_sfixed64() {
            return pb_1.Message.getFieldWithDefault(this, 98, []) as number[];
        }
        set unpacked_sfixed64(value: number[]) {
            pb_1.Message.setField(this, 98, value);
        }
        get unpacked_float() {
            return pb_1.Message.getFieldWithDefault(this, 99, []) as number[];
        }
        set unpacked_float(value: number[]) {
            pb_1.Message.setField(this, 99, value);
        }
        get unpacked_double() {
            return pb_1.Message.getFieldWithDefault(this, 100, []) as number[];
        }
        set unpacked_double(value: number[]) {
            pb_1.Message.setField(this, 100, value);
        }
        get unpacked_bool() {
            return pb_1.Message.getFieldWithDefault(this, 101, []) as boolean[];
        }
        set unpacked_bool(value: boolean[]) {
            pb_1.Message.setField(this, 101, value);
        }
        get unpacked_nested_enum() {
            return pb_1.Message.getFieldWithDefault(this, 102, []) as TestAllTypesProto3.NestedEnum[];
        }
        set unpacked_nested_enum(value: TestAllTypesProto3.NestedEnum[]) {
            pb_1.Message.setField(this, 102, value);
        }
        get map_int32_int32() {
            return pb_1.Message.getField(this, 56) as any as Map<number, number>;
        }
        set map_int32_int32(value: Map<number, number>) {
            pb_1.Message.setField(this, 56, value as any);
        }
        get map_int64_int64() {
            return pb_1.Message.getField(this, 57) as any as Map<number, number>;
        }
        set map_int64_int64(value: Map<number, number>) {
            pb_1.Message.setField(this, 57, value as any);
        }
        get map_uint32_uint32() {
            return pb_1.Message.getField(this, 58) as any as Map<number, number>;
        }
        set map_uint32_uint32(value: Map<number, number>) {
            pb_1.Message.setField(this, 58, value as any);
        }
        get map_uint64_uint64() {
            return pb_1.Message.getField(this, 59) as any as Map<number, number>;
        }
        set map_uint64_uint64(value: Map<number, number>) {
            pb_1.Message.setField(this, 59, value as any);
        }
        get map_sint32_sint32() {
            return pb_1.Message.getField(this, 60) as any as Map<number, number>;
        }
        set map_sint32_sint32(value: Map<number, number>) {
            pb_1.Message.setField(this, 60, value as any);
        }
        get map_sint64_sint64() {
            return pb_1.Message.getField(this, 61) as any as Map<number, number>;
        }
        set map_sint64_sint64(value: Map<number, number>) {
            pb_1.Message.setField(this, 61, value as any);
        }
        get map_fixed32_fixed32() {
            return pb_1.Message.getField(this, 62) as any as Map<number, number>;
        }
        set map_fixed32_fixed32(value: Map<number, number>) {
            pb_1.Message.setField(this, 62, value as any);
        }
        get map_fixed64_fixed64() {
            return pb_1.Message.getField(this, 63) as any as Map<number, number>;
        }
        set map_fixed64_fixed64(value: Map<number, number>) {
            pb_1.Message.setField(this, 63, value as any);
        }
        get map_sfixed32_sfixed32() {
            return pb_1.Message.getField(this, 64) as any as Map<number, number>;
        }
        set map_sfixed32_sfixed32(value: Map<number, number>) {
            pb_1.Message.setField(this, 64, value as any);
        }
        get map_sfixed64_sfixed64() {
            return pb_1.Message.getField(this, 65) as any as Map<number, number>;
        }
        set map_sfixed64_sfixed64(value: Map<number, number>) {
            pb_1.Message.setField(this, 65, value as any);
        }
        get map_int32_float() {
            return pb_1.Message.getField(this, 66) as any as Map<number, number>;
        }
        set map_int32_float(value: Map<number, number>) {
            pb_1.Message.setField(this, 66, value as any);
        }
        get map_int32_double() {
            return pb_1.Message.getField(this, 67) as any as Map<number, number>;
        }
        set map_int32_double(value: Map<number, number>) {
            pb_1.Message.setField(this, 67, value as any);
        }
        get map_bool_bool() {
            return pb_1.Message.getField(this, 68) as any as Map<boolean, boolean>;
        }
        set map_bool_bool(value: Map<boolean, boolean>) {
            pb_1.Message.setField(this, 68, value as any);
        }
        get map_string_string() {
            return pb_1.Message.getField(this, 69) as any as Map<string, string>;
        }
        set map_string_string(value: Map<string, string>) {
            pb_1.Message.setField(this, 69, value as any);
        }
        get map_string_bytes() {
            return pb_1.Message.getField(this, 70) as any as Map<string, Uint8Array>;
        }
        set map_string_bytes(value: Map<string, Uint8Array>) {
            pb_1.Message.setField(this, 70, value as any);
        }
        get map_string_nested_message() {
            return pb_1.Message.getField(this, 71) as any as Map<string, TestAllTypesProto3.NestedMessage>;
        }
        set map_string_nested_message(value: Map<string, TestAllTypesProto3.NestedMessage>) {
            pb_1.Message.setField(this, 71, value as any);
        }
        get map_string_foreign_message() {
            return pb_1.Message.getField(this, 72) as any as Map<string, ForeignMessage>;
        }
        set map_string_foreign_message(value: Map<string, ForeignMessage>) {
            pb_1.Message.setField(this, 72, value as any);
        }
        get map_string_nested_enum() {
            return pb_1.Message.getField(this, 73) as any as Map<string, TestAllTypesProto3.NestedEnum>;
        }
        set map_string_nested_enum(value: Map<string, TestAllTypesProto3.NestedEnum>) {
            pb_1.Message.setField(this, 73, value as any);
        }
        get map_string_foreign_enum() {
            return pb_1.Message.getField(this, 74) as any as Map<string, ForeignEnum>;
        }
        set map_string_foreign_enum(value: Map<string, ForeignEnum>) {
            pb_1.Message.setField(this, 74, value as any);
        }
        get oneof_uint32() {
            return pb_1.Message.getFieldWithDefault(this, 111, 0) as number;
        }
        set oneof_uint32(value: number) {
            pb_1.Message.setOneofField(this, 111, this.#one_of_decls[0], value);
        }
        get has_oneof_uint32() {
            return pb_1.Message.getField(this, 111) != null;
        }
        get oneof_nested_message() {
            return pb_1.Message.getWrapperField(this, TestAllTypesProto3.NestedMessage, 112) as TestAllTypesProto3.NestedMessage;
        }
        set oneof_nested_message(value: TestAllTypesProto3.NestedMessage) {
            pb_1.Message.setOneofWrapperField(this, 112, this.#one_of_decls[0], value);
        }
        get has_oneof_nested_message() {
            return pb_1.Message.getField(this, 112) != null;
        }
        get oneof_string() {
            return pb_1.Message.getFieldWithDefault(this, 113, "") as string;
        }
        set oneof_string(value: string) {
            pb_1.Message.setOneofField(this, 113, this.#one_of_decls[0], value);
        }
        get has_oneof_string() {
            return pb_1.Message.getField(this, 113) != null;
        }
        get oneof_bytes() {
            return pb_1.Message.getFieldWithDefault(this, 114, new Uint8Array(0)) as Uint8Array;
        }
        set oneof_bytes(value: Uint8Array) {
            pb_1.Message.setOneofField(this, 114, this.#one_of_decls[0], value);
        }
        get has_oneof_bytes() {
            return pb_1.Message.getField(this, 114) != null;
        }
        get oneof_bool() {
            return pb_1.Message.getFieldWithDefault(this, 115, false) as boolean;
        }
        set oneof_bool(value: boolean) {
            pb_1.Message.setOneofField(this, 115, this.#one_of_decls[0], value);
        }
        get has_oneof_bool() {
            return pb_1.Message.getField(this, 115) != null;
        }
        get oneof_uint64() {
            return pb_1.Message.getFieldWithDefault(this, 116, 0) as number;
        }
        set oneof_uint64(value: number) {
            pb_1.Message.setOneofField(this, 116, this.#one_of_decls[0], value);
        }
        get has_oneof_uint64() {
            return pb_1.Message.getField(this, 116) != null;
        }
        get oneof_float() {
            return pb_1.Message.getFieldWithDefault(this, 117, 0) as number;
        }
        set oneof_float(value: number) {
            pb_1.Message.setOneofField(this, 117, this.#one_of_decls[0], value);
        }
        get has_oneof_float() {
            return pb_1.Message.getField(this, 117) != null;
        }
        get oneof_double() {
            return pb_1.Message.getFieldWithDefault(this, 118, 0) as number;
        }
        set oneof_double(value: number) {
            pb_1.Message.setOneofField(this, 118, this.#one_of_decls[0], value);
        }
        get has_oneof_double() {
            return pb_1.Message.getField(this, 118) != null;
        }
        get oneof_enum() {
            return pb_1.Message.getFieldWithDefault(this, 119, TestAllTypesProto3.NestedEnum.FOO) as TestAllTypesProto3.NestedEnum;
        }
        set oneof_enum(value: TestAllTypesProto3.NestedEnum) {
            pb_1.Message.setOneofField(this, 119, this.#one_of_decls[0], value);
        }
        get has_oneof_enum() {
            return pb_1.Message.getField(this, 119) != null;
        }
        get oneof_null_value() {
            return pb_1.Message.getFieldWithDefault(this, 120, dependency_4.google.protobuf.NullValue.NULL_VALUE) as dependency_4.google.protobuf.NullValue;
        }
        set oneof_null_value(value: dependency_4.google.protobuf.NullValue) {
            pb_1.Message.setOneofField(this, 120, this.#one_of_decls[0], value);
        }
        get has_oneof_null_value() {
            return pb_1.Message.getField(this, 120) != null;
        }
        get optional_bool_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.BoolValue, 201) as dependency_6.google.protobuf.BoolValue;
        }
        set optional_bool_wrapper(value: dependency_6.google.protobuf.BoolValue) {
            pb_1.Message.setWrapperField(this, 201, value);
        }
        get has_optional_bool_wrapper() {
            return pb_1.Message.getField(this, 201) != null;
        }
        get optional_int32_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.Int32Value, 202) as dependency_6.google.protobuf.Int32Value;
        }
        set optional_int32_wrapper(value: dependency_6.google.protobuf.Int32Value) {
            pb_1.Message.setWrapperField(this, 202, value);
        }
        get has_optional_int32_wrapper() {
            return pb_1.Message.getField(this, 202) != null;
        }
        get optional_int64_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.Int64Value, 203) as dependency_6.google.protobuf.Int64Value;
        }
        set optional_int64_wrapper(value: dependency_6.google.protobuf.Int64Value) {
            pb_1.Message.setWrapperField(this, 203, value);
        }
        get has_optional_int64_wrapper() {
            return pb_1.Message.getField(this, 203) != null;
        }
        get optional_uint32_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.UInt32Value, 204) as dependency_6.google.protobuf.UInt32Value;
        }
        set optional_uint32_wrapper(value: dependency_6.google.protobuf.UInt32Value) {
            pb_1.Message.setWrapperField(this, 204, value);
        }
        get has_optional_uint32_wrapper() {
            return pb_1.Message.getField(this, 204) != null;
        }
        get optional_uint64_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.UInt64Value, 205) as dependency_6.google.protobuf.UInt64Value;
        }
        set optional_uint64_wrapper(value: dependency_6.google.protobuf.UInt64Value) {
            pb_1.Message.setWrapperField(this, 205, value);
        }
        get has_optional_uint64_wrapper() {
            return pb_1.Message.getField(this, 205) != null;
        }
        get optional_float_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.FloatValue, 206) as dependency_6.google.protobuf.FloatValue;
        }
        set optional_float_wrapper(value: dependency_6.google.protobuf.FloatValue) {
            pb_1.Message.setWrapperField(this, 206, value);
        }
        get has_optional_float_wrapper() {
            return pb_1.Message.getField(this, 206) != null;
        }
        get optional_double_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.DoubleValue, 207) as dependency_6.google.protobuf.DoubleValue;
        }
        set optional_double_wrapper(value: dependency_6.google.protobuf.DoubleValue) {
            pb_1.Message.setWrapperField(this, 207, value);
        }
        get has_optional_double_wrapper() {
            return pb_1.Message.getField(this, 207) != null;
        }
        get optional_string_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.StringValue, 208) as dependency_6.google.protobuf.StringValue;
        }
        set optional_string_wrapper(value: dependency_6.google.protobuf.StringValue) {
            pb_1.Message.setWrapperField(this, 208, value);
        }
        get has_optional_string_wrapper() {
            return pb_1.Message.getField(this, 208) != null;
        }
        get optional_bytes_wrapper() {
            return pb_1.Message.getWrapperField(this, dependency_6.google.protobuf.BytesValue, 209) as dependency_6.google.protobuf.BytesValue;
        }
        set optional_bytes_wrapper(value: dependency_6.google.protobuf.BytesValue) {
            pb_1.Message.setWrapperField(this, 209, value);
        }
        get has_optional_bytes_wrapper() {
            return pb_1.Message.getField(this, 209) != null;
        }
        get repeated_bool_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.BoolValue, 211) as dependency_6.google.protobuf.BoolValue[];
        }
        set repeated_bool_wrapper(value: dependency_6.google.protobuf.BoolValue[]) {
            pb_1.Message.setRepeatedWrapperField(this, 211, value);
        }
        get repeated_int32_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.Int32Value, 212) as dependency_6.google.protobuf.Int32Value[];
        }
        set repeated_int32_wrapper(value: dependency_6.google.protobuf.Int32Value[]) {
            pb_1.Message.setRepeatedWrapperField(this, 212, value);
        }
        get repeated_int64_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.Int64Value, 213) as dependency_6.google.protobuf.Int64Value[];
        }
        set repeated_int64_wrapper(value: dependency_6.google.protobuf.Int64Value[]) {
            pb_1.Message.setRepeatedWrapperField(this, 213, value);
        }
        get repeated_uint32_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.UInt32Value, 214) as dependency_6.google.protobuf.UInt32Value[];
        }
        set repeated_uint32_wrapper(value: dependency_6.google.protobuf.UInt32Value[]) {
            pb_1.Message.setRepeatedWrapperField(this, 214, value);
        }
        get repeated_uint64_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.UInt64Value, 215) as dependency_6.google.protobuf.UInt64Value[];
        }
        set repeated_uint64_wrapper(value: dependency_6.google.protobuf.UInt64Value[]) {
            pb_1.Message.setRepeatedWrapperField(this, 215, value);
        }
        get repeated_float_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.FloatValue, 216) as dependency_6.google.protobuf.FloatValue[];
        }
        set repeated_float_wrapper(value: dependency_6.google.protobuf.FloatValue[]) {
            pb_1.Message.setRepeatedWrapperField(this, 216, value);
        }
        get repeated_double_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.DoubleValue, 217) as dependency_6.google.protobuf.DoubleValue[];
        }
        set repeated_double_wrapper(value: dependency_6.google.protobuf.DoubleValue[]) {
            pb_1.Message.setRepeatedWrapperField(this, 217, value);
        }
        get repeated_string_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.StringValue, 218) as dependency_6.google.protobuf.StringValue[];
        }
        set repeated_string_wrapper(value: dependency_6.google.protobuf.StringValue[]) {
            pb_1.Message.setRepeatedWrapperField(this, 218, value);
        }
        get repeated_bytes_wrapper() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_6.google.protobuf.BytesValue, 219) as dependency_6.google.protobuf.BytesValue[];
        }
        set repeated_bytes_wrapper(value: dependency_6.google.protobuf.BytesValue[]) {
            pb_1.Message.setRepeatedWrapperField(this, 219, value);
        }
        get optional_duration() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Duration, 301) as dependency_2.google.protobuf.Duration;
        }
        set optional_duration(value: dependency_2.google.protobuf.Duration) {
            pb_1.Message.setWrapperField(this, 301, value);
        }
        get has_optional_duration() {
            return pb_1.Message.getField(this, 301) != null;
        }
        get optional_timestamp() {
            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Timestamp, 302) as dependency_5.google.protobuf.Timestamp;
        }
        set optional_timestamp(value: dependency_5.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 302, value);
        }
        get has_optional_timestamp() {
            return pb_1.Message.getField(this, 302) != null;
        }
        get optional_field_mask() {
            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.FieldMask, 303) as dependency_3.google.protobuf.FieldMask;
        }
        set optional_field_mask(value: dependency_3.google.protobuf.FieldMask) {
            pb_1.Message.setWrapperField(this, 303, value);
        }
        get has_optional_field_mask() {
            return pb_1.Message.getField(this, 303) != null;
        }
        get optional_struct() {
            return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Struct, 304) as dependency_4.google.protobuf.Struct;
        }
        set optional_struct(value: dependency_4.google.protobuf.Struct) {
            pb_1.Message.setWrapperField(this, 304, value);
        }
        get has_optional_struct() {
            return pb_1.Message.getField(this, 304) != null;
        }
        get optional_any() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 305) as dependency_1.google.protobuf.Any;
        }
        set optional_any(value: dependency_1.google.protobuf.Any) {
            pb_1.Message.setWrapperField(this, 305, value);
        }
        get has_optional_any() {
            return pb_1.Message.getField(this, 305) != null;
        }
        get optional_value() {
            return pb_1.Message.getWrapperField(this, dependency_4.google.protobuf.Value, 306) as dependency_4.google.protobuf.Value;
        }
        set optional_value(value: dependency_4.google.protobuf.Value) {
            pb_1.Message.setWrapperField(this, 306, value);
        }
        get has_optional_value() {
            return pb_1.Message.getField(this, 306) != null;
        }
        get optional_null_value() {
            return pb_1.Message.getFieldWithDefault(this, 307, dependency_4.google.protobuf.NullValue.NULL_VALUE) as dependency_4.google.protobuf.NullValue;
        }
        set optional_null_value(value: dependency_4.google.protobuf.NullValue) {
            pb_1.Message.setField(this, 307, value);
        }
        get repeated_duration() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.google.protobuf.Duration, 311) as dependency_2.google.protobuf.Duration[];
        }
        set repeated_duration(value: dependency_2.google.protobuf.Duration[]) {
            pb_1.Message.setRepeatedWrapperField(this, 311, value);
        }
        get repeated_timestamp() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_5.google.protobuf.Timestamp, 312) as dependency_5.google.protobuf.Timestamp[];
        }
        set repeated_timestamp(value: dependency_5.google.protobuf.Timestamp[]) {
            pb_1.Message.setRepeatedWrapperField(this, 312, value);
        }
        get repeated_fieldmask() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.google.protobuf.FieldMask, 313) as dependency_3.google.protobuf.FieldMask[];
        }
        set repeated_fieldmask(value: dependency_3.google.protobuf.FieldMask[]) {
            pb_1.Message.setRepeatedWrapperField(this, 313, value);
        }
        get repeated_struct() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.google.protobuf.Struct, 324) as dependency_4.google.protobuf.Struct[];
        }
        set repeated_struct(value: dependency_4.google.protobuf.Struct[]) {
            pb_1.Message.setRepeatedWrapperField(this, 324, value);
        }
        get repeated_any() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.google.protobuf.Any, 315) as dependency_1.google.protobuf.Any[];
        }
        set repeated_any(value: dependency_1.google.protobuf.Any[]) {
            pb_1.Message.setRepeatedWrapperField(this, 315, value);
        }
        get repeated_value() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.google.protobuf.Value, 316) as dependency_4.google.protobuf.Value[];
        }
        set repeated_value(value: dependency_4.google.protobuf.Value[]) {
            pb_1.Message.setRepeatedWrapperField(this, 316, value);
        }
        get repeated_list_value() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.google.protobuf.ListValue, 317) as dependency_4.google.protobuf.ListValue[];
        }
        set repeated_list_value(value: dependency_4.google.protobuf.ListValue[]) {
            pb_1.Message.setRepeatedWrapperField(this, 317, value);
        }
        get fieldname1() {
            return pb_1.Message.getFieldWithDefault(this, 401, 0) as number;
        }
        set fieldname1(value: number) {
            pb_1.Message.setField(this, 401, value);
        }
        get field_name2() {
            return pb_1.Message.getFieldWithDefault(this, 402, 0) as number;
        }
        set field_name2(value: number) {
            pb_1.Message.setField(this, 402, value);
        }
        get _field_name3() {
            return pb_1.Message.getFieldWithDefault(this, 403, 0) as number;
        }
        set _field_name3(value: number) {
            pb_1.Message.setField(this, 403, value);
        }
        get field__name4_() {
            return pb_1.Message.getFieldWithDefault(this, 404, 0) as number;
        }
        set field__name4_(value: number) {
            pb_1.Message.setField(this, 404, value);
        }
        get field0name5() {
            return pb_1.Message.getFieldWithDefault(this, 405, 0) as number;
        }
        set field0name5(value: number) {
            pb_1.Message.setField(this, 405, value);
        }
        get field_0_name6() {
            return pb_1.Message.getFieldWithDefault(this, 406, 0) as number;
        }
        set field_0_name6(value: number) {
            pb_1.Message.setField(this, 406, value);
        }
        get fieldName7() {
            return pb_1.Message.getFieldWithDefault(this, 407, 0) as number;
        }
        set fieldName7(value: number) {
            pb_1.Message.setField(this, 407, value);
        }
        get FieldName8() {
            return pb_1.Message.getFieldWithDefault(this, 408, 0) as number;
        }
        set FieldName8(value: number) {
            pb_1.Message.setField(this, 408, value);
        }
        get field_Name9() {
            return pb_1.Message.getFieldWithDefault(this, 409, 0) as number;
        }
        set field_Name9(value: number) {
            pb_1.Message.setField(this, 409, value);
        }
        get Field_Name10() {
            return pb_1.Message.getFieldWithDefault(this, 410, 0) as number;
        }
        set Field_Name10(value: number) {
            pb_1.Message.setField(this, 410, value);
        }
        get FIELD_NAME11() {
            return pb_1.Message.getFieldWithDefault(this, 411, 0) as number;
        }
        set FIELD_NAME11(value: number) {
            pb_1.Message.setField(this, 411, value);
        }
        get FIELD_name12() {
            return pb_1.Message.getFieldWithDefault(this, 412, 0) as number;
        }
        set FIELD_name12(value: number) {
            pb_1.Message.setField(this, 412, value);
        }
        get __field_name13() {
            return pb_1.Message.getFieldWithDefault(this, 413, 0) as number;
        }
        set __field_name13(value: number) {
            pb_1.Message.setField(this, 413, value);
        }
        get __Field_name14() {
            return pb_1.Message.getFieldWithDefault(this, 414, 0) as number;
        }
        set __Field_name14(value: number) {
            pb_1.Message.setField(this, 414, value);
        }
        get field__name15() {
            return pb_1.Message.getFieldWithDefault(this, 415, 0) as number;
        }
        set field__name15(value: number) {
            pb_1.Message.setField(this, 415, value);
        }
        get field__Name16() {
            return pb_1.Message.getFieldWithDefault(this, 416, 0) as number;
        }
        set field__Name16(value: number) {
            pb_1.Message.setField(this, 416, value);
        }
        get field_name17__() {
            return pb_1.Message.getFieldWithDefault(this, 417, 0) as number;
        }
        set field_name17__(value: number) {
            pb_1.Message.setField(this, 417, value);
        }
        get Field_name18__() {
            return pb_1.Message.getFieldWithDefault(this, 418, 0) as number;
        }
        set Field_name18__(value: number) {
            pb_1.Message.setField(this, 418, value);
        }
        get oneof_field() {
            const cases: {
                [index: number]: "none" | "oneof_uint32" | "oneof_nested_message" | "oneof_string" | "oneof_bytes" | "oneof_bool" | "oneof_uint64" | "oneof_float" | "oneof_double" | "oneof_enum" | "oneof_null_value";
            } = {
                0: "none",
                111: "oneof_uint32",
                112: "oneof_nested_message",
                113: "oneof_string",
                114: "oneof_bytes",
                115: "oneof_bool",
                116: "oneof_uint64",
                117: "oneof_float",
                118: "oneof_double",
                119: "oneof_enum",
                120: "oneof_null_value"
            };
            return cases[pb_1.Message.computeOneofCase(this, [111, 112, 113, 114, 115, 116, 117, 118, 119, 120])];
        }
        static fromObject(data: {
            optional_int32?: number;
            optional_int64?: number;
            optional_uint32?: number;
            optional_uint64?: number;
            optional_sint32?: number;
            optional_sint64?: number;
            optional_fixed32?: number;
            optional_fixed64?: number;
            optional_sfixed32?: number;
            optional_sfixed64?: number;
            optional_float?: number;
            optional_double?: number;
            optional_bool?: boolean;
            optional_string?: string;
            optional_bytes?: Uint8Array;
            optional_nested_message?: ReturnType<typeof TestAllTypesProto3.NestedMessage.prototype.toObject>;
            optional_foreign_message?: ReturnType<typeof ForeignMessage.prototype.toObject>;
            optional_nested_enum?: TestAllTypesProto3.NestedEnum;
            optional_foreign_enum?: ForeignEnum;
            optional_aliased_enum?: TestAllTypesProto3.AliasedEnum;
            optional_string_piece?: string;
            optional_cord?: string;
            recursive_message?: ReturnType<typeof TestAllTypesProto3.prototype.toObject>;
            repeated_int32?: number[];
            repeated_int64?: number[];
            repeated_uint32?: number[];
            repeated_uint64?: number[];
            repeated_sint32?: number[];
            repeated_sint64?: number[];
            repeated_fixed32?: number[];
            repeated_fixed64?: number[];
            repeated_sfixed32?: number[];
            repeated_sfixed64?: number[];
            repeated_float?: number[];
            repeated_double?: number[];
            repeated_bool?: boolean[];
            repeated_string?: string[];
            repeated_bytes?: Uint8Array[];
            repeated_nested_message?: ReturnType<typeof TestAllTypesProto3.NestedMessage.prototype.toObject>[];
            repeated_foreign_message?: ReturnType<typeof ForeignMessage.prototype.toObject>[];
            repeated_nested_enum?: TestAllTypesProto3.NestedEnum[];
            repeated_foreign_enum?: ForeignEnum[];
            repeated_string_piece?: string[];
            repeated_cord?: string[];
            packed_int32?: number[];
            packed_int64?: number[];
            packed_uint32?: number[];
            packed_uint64?: number[];
            packed_sint32?: number[];
            packed_sint64?: number[];
            packed_fixed32?: number[];
            packed_fixed64?: number[];
            packed_sfixed32?: number[];
            packed_sfixed64?: number[];
            packed_float?: number[];
            packed_double?: number[];
            packed_bool?: boolean[];
            packed_nested_enum?: TestAllTypesProto3.NestedEnum[];
            unpacked_int32?: number[];
            unpacked_int64?: number[];
            unpacked_uint32?: number[];
            unpacked_uint64?: number[];
            unpacked_sint32?: number[];
            unpacked_sint64?: number[];
            unpacked_fixed32?: number[];
            unpacked_fixed64?: number[];
            unpacked_sfixed32?: number[];
            unpacked_sfixed64?: number[];
            unpacked_float?: number[];
            unpacked_double?: number[];
            unpacked_bool?: boolean[];
            unpacked_nested_enum?: TestAllTypesProto3.NestedEnum[];
            map_int32_int32?: {
                [key: number]: number;
            };
            map_int64_int64?: {
                [key: number]: number;
            };
            map_uint32_uint32?: {
                [key: number]: number;
            };
            map_uint64_uint64?: {
                [key: number]: number;
            };
            map_sint32_sint32?: {
                [key: number]: number;
            };
            map_sint64_sint64?: {
                [key: number]: number;
            };
            map_fixed32_fixed32?: {
                [key: number]: number;
            };
            map_fixed64_fixed64?: {
                [key: number]: number;
            };
            map_sfixed32_sfixed32?: {
                [key: number]: number;
            };
            map_sfixed64_sfixed64?: {
                [key: number]: number;
            };
            map_int32_float?: {
                [key: number]: number;
            };
            map_int32_double?: {
                [key: number]: number;
            };
            map_bool_bool?: {
                [key: boolean]: boolean;
            };
            map_string_string?: {
                [key: string]: string;
            };
            map_string_bytes?: {
                [key: string]: Uint8Array;
            };
            map_string_nested_message?: {
                [key: string]: ReturnType<typeof TestAllTypesProto3.NestedMessage.prototype.toObject>;
            };
            map_string_foreign_message?: {
                [key: string]: ReturnType<typeof ForeignMessage.prototype.toObject>;
            };
            map_string_nested_enum?: {
                [key: string]: TestAllTypesProto3.NestedEnum;
            };
            map_string_foreign_enum?: {
                [key: string]: ForeignEnum;
            };
            oneof_uint32?: number;
            oneof_nested_message?: ReturnType<typeof TestAllTypesProto3.NestedMessage.prototype.toObject>;
            oneof_string?: string;
            oneof_bytes?: Uint8Array;
            oneof_bool?: boolean;
            oneof_uint64?: number;
            oneof_float?: number;
            oneof_double?: number;
            oneof_enum?: TestAllTypesProto3.NestedEnum;
            oneof_null_value?: dependency_4.google.protobuf.NullValue;
            optional_bool_wrapper?: ReturnType<typeof dependency_6.google.protobuf.BoolValue.prototype.toObject>;
            optional_int32_wrapper?: ReturnType<typeof dependency_6.google.protobuf.Int32Value.prototype.toObject>;
            optional_int64_wrapper?: ReturnType<typeof dependency_6.google.protobuf.Int64Value.prototype.toObject>;
            optional_uint32_wrapper?: ReturnType<typeof dependency_6.google.protobuf.UInt32Value.prototype.toObject>;
            optional_uint64_wrapper?: ReturnType<typeof dependency_6.google.protobuf.UInt64Value.prototype.toObject>;
            optional_float_wrapper?: ReturnType<typeof dependency_6.google.protobuf.FloatValue.prototype.toObject>;
            optional_double_wrapper?: ReturnType<typeof dependency_6.google.protobuf.DoubleValue.prototype.toObject>;
            optional_string_wrapper?: ReturnType<typeof dependency_6.google.protobuf.StringValue.prototype.toObject>;
            optional_bytes_wrapper?: ReturnType<typeof dependency_6.google.protobuf.BytesValue.prototype.toObject>;
            repeated_bool_wrapper?: ReturnType<typeof dependency_6.google.protobuf.BoolValue.prototype.toObject>[];
            repeated_int32_wrapper?: ReturnType<typeof dependency_6.google.protobuf.Int32Value.prototype.toObject>[];
            repeated_int64_wrapper?: ReturnType<typeof dependency_6.google.protobuf.Int64Value.prototype.toObject>[];
            repeated_uint32_wrapper?: ReturnType<typeof dependency_6.google.protobuf.UInt32Value.prototype.toObject>[];
            repeated_uint64_wrapper?: ReturnType<typeof dependency_6.google.protobuf.UInt64Value.prototype.toObject>[];
            repeated_float_wrapper?: ReturnType<typeof dependency_6.google.protobuf.FloatValue.prototype.toObject>[];
            repeated_double_wrapper?: ReturnType<typeof dependency_6.google.protobuf.DoubleValue.prototype.toObject>[];
            repeated_string_wrapper?: ReturnType<typeof dependency_6.google.protobuf.StringValue.prototype.toObject>[];
            repeated_bytes_wrapper?: ReturnType<typeof dependency_6.google.protobuf.BytesValue.prototype.toObject>[];
            optional_duration?: ReturnType<typeof dependency_2.google.protobuf.Duration.prototype.toObject>;
            optional_timestamp?: ReturnType<typeof dependency_5.google.protobuf.Timestamp.prototype.toObject>;
            optional_field_mask?: ReturnType<typeof dependency_3.google.protobuf.FieldMask.prototype.toObject>;
            optional_struct?: ReturnType<typeof dependency_4.google.protobuf.Struct.prototype.toObject>;
            optional_any?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
            optional_value?: ReturnType<typeof dependency_4.google.protobuf.Value.prototype.toObject>;
            optional_null_value?: dependency_4.google.protobuf.NullValue;
            repeated_duration?: ReturnType<typeof dependency_2.google.protobuf.Duration.prototype.toObject>[];
            repeated_timestamp?: ReturnType<typeof dependency_5.google.protobuf.Timestamp.prototype.toObject>[];
            repeated_fieldmask?: ReturnType<typeof dependency_3.google.protobuf.FieldMask.prototype.toObject>[];
            repeated_struct?: ReturnType<typeof dependency_4.google.protobuf.Struct.prototype.toObject>[];
            repeated_any?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
            repeated_value?: ReturnType<typeof dependency_4.google.protobuf.Value.prototype.toObject>[];
            repeated_list_value?: ReturnType<typeof dependency_4.google.protobuf.ListValue.prototype.toObject>[];
            fieldname1?: number;
            field_name2?: number;
            _field_name3?: number;
            field__name4_?: number;
            field0name5?: number;
            field_0_name6?: number;
            fieldName7?: number;
            FieldName8?: number;
            field_Name9?: number;
            Field_Name10?: number;
            FIELD_NAME11?: number;
            FIELD_name12?: number;
            __field_name13?: number;
            __Field_name14?: number;
            field__name15?: number;
            field__Name16?: number;
            field_name17__?: number;
            Field_name18__?: number;
        }): TestAllTypesProto3 {
            const message = new TestAllTypesProto3({});
            if (data.optional_int32 != null) {
                message.optional_int32 = data.optional_int32;
            }
            if (data.optional_int64 != null) {
                message.optional_int64 = data.optional_int64;
            }
            if (data.optional_uint32 != null) {
                message.optional_uint32 = data.optional_uint32;
            }
            if (data.optional_uint64 != null) {
                message.optional_uint64 = data.optional_uint64;
            }
            if (data.optional_sint32 != null) {
                message.optional_sint32 = data.optional_sint32;
            }
            if (data.optional_sint64 != null) {
                message.optional_sint64 = data.optional_sint64;
            }
            if (data.optional_fixed32 != null) {
                message.optional_fixed32 = data.optional_fixed32;
            }
            if (data.optional_fixed64 != null) {
                message.optional_fixed64 = data.optional_fixed64;
            }
            if (data.optional_sfixed32 != null) {
                message.optional_sfixed32 = data.optional_sfixed32;
            }
            if (data.optional_sfixed64 != null) {
                message.optional_sfixed64 = data.optional_sfixed64;
            }
            if (data.optional_float != null) {
                message.optional_float = data.optional_float;
            }
            if (data.optional_double != null) {
                message.optional_double = data.optional_double;
            }
            if (data.optional_bool != null) {
                message.optional_bool = data.optional_bool;
            }
            if (data.optional_string != null) {
                message.optional_string = data.optional_string;
            }
            if (data.optional_bytes != null) {
                message.optional_bytes = data.optional_bytes;
            }
            if (data.optional_nested_message != null) {
                message.optional_nested_message = TestAllTypesProto3.NestedMessage.fromObject(data.optional_nested_message);
            }
            if (data.optional_foreign_message != null) {
                message.optional_foreign_message = ForeignMessage.fromObject(data.optional_foreign_message);
            }
            if (data.optional_nested_enum != null) {
                message.optional_nested_enum = data.optional_nested_enum;
            }
            if (data.optional_foreign_enum != null) {
                message.optional_foreign_enum = data.optional_foreign_enum;
            }
            if (data.optional_aliased_enum != null) {
                message.optional_aliased_enum = data.optional_aliased_enum;
            }
            if (data.optional_string_piece != null) {
                message.optional_string_piece = data.optional_string_piece;
            }
            if (data.optional_cord != null) {
                message.optional_cord = data.optional_cord;
            }
            if (data.recursive_message != null) {
                message.recursive_message = TestAllTypesProto3.fromObject(data.recursive_message);
            }
            if (data.repeated_int32 != null) {
                message.repeated_int32 = data.repeated_int32;
            }
            if (data.repeated_int64 != null) {
                message.repeated_int64 = data.repeated_int64;
            }
            if (data.repeated_uint32 != null) {
                message.repeated_uint32 = data.repeated_uint32;
            }
            if (data.repeated_uint64 != null) {
                message.repeated_uint64 = data.repeated_uint64;
            }
            if (data.repeated_sint32 != null) {
                message.repeated_sint32 = data.repeated_sint32;
            }
            if (data.repeated_sint64 != null) {
                message.repeated_sint64 = data.repeated_sint64;
            }
            if (data.repeated_fixed32 != null) {
                message.repeated_fixed32 = data.repeated_fixed32;
            }
            if (data.repeated_fixed64 != null) {
                message.repeated_fixed64 = data.repeated_fixed64;
            }
            if (data.repeated_sfixed32 != null) {
                message.repeated_sfixed32 = data.repeated_sfixed32;
            }
            if (data.repeated_sfixed64 != null) {
                message.repeated_sfixed64 = data.repeated_sfixed64;
            }
            if (data.repeated_float != null) {
                message.repeated_float = data.repeated_float;
            }
            if (data.repeated_double != null) {
                message.repeated_double = data.repeated_double;
            }
            if (data.repeated_bool != null) {
                message.repeated_bool = data.repeated_bool;
            }
            if (data.repeated_string != null) {
                message.repeated_string = data.repeated_string;
            }
            if (data.repeated_bytes != null) {
                message.repeated_bytes = data.repeated_bytes;
            }
            if (data.repeated_nested_message != null) {
                message.repeated_nested_message = data.repeated_nested_message.map(item => TestAllTypesProto3.NestedMessage.fromObject(item));
            }
            if (data.repeated_foreign_message != null) {
                message.repeated_foreign_message = data.repeated_foreign_message.map(item => ForeignMessage.fromObject(item));
            }
            if (data.repeated_nested_enum != null) {
                message.repeated_nested_enum = data.repeated_nested_enum;
            }
            if (data.repeated_foreign_enum != null) {
                message.repeated_foreign_enum = data.repeated_foreign_enum;
            }
            if (data.repeated_string_piece != null) {
                message.repeated_string_piece = data.repeated_string_piece;
            }
            if (data.repeated_cord != null) {
                message.repeated_cord = data.repeated_cord;
            }
            if (data.packed_int32 != null) {
                message.packed_int32 = data.packed_int32;
            }
            if (data.packed_int64 != null) {
                message.packed_int64 = data.packed_int64;
            }
            if (data.packed_uint32 != null) {
                message.packed_uint32 = data.packed_uint32;
            }
            if (data.packed_uint64 != null) {
                message.packed_uint64 = data.packed_uint64;
            }
            if (data.packed_sint32 != null) {
                message.packed_sint32 = data.packed_sint32;
            }
            if (data.packed_sint64 != null) {
                message.packed_sint64 = data.packed_sint64;
            }
            if (data.packed_fixed32 != null) {
                message.packed_fixed32 = data.packed_fixed32;
            }
            if (data.packed_fixed64 != null) {
                message.packed_fixed64 = data.packed_fixed64;
            }
            if (data.packed_sfixed32 != null) {
                message.packed_sfixed32 = data.packed_sfixed32;
            }
            if (data.packed_sfixed64 != null) {
                message.packed_sfixed64 = data.packed_sfixed64;
            }
            if (data.packed_float != null) {
                message.packed_float = data.packed_float;
            }
            if (data.packed_double != null) {
                message.packed_double = data.packed_double;
            }
            if (data.packed_bool != null) {
                message.packed_bool = data.packed_bool;
            }
            if (data.packed_nested_enum != null) {
                message.packed_nested_enum = data.packed_nested_enum;
            }
            if (data.unpacked_int32 != null) {
                message.unpacked_int32 = data.unpacked_int32;
            }
            if (data.unpacked_int64 != null) {
                message.unpacked_int64 = data.unpacked_int64;
            }
            if (data.unpacked_uint32 != null) {
                message.unpacked_uint32 = data.unpacked_uint32;
            }
            if (data.unpacked_uint64 != null) {
                message.unpacked_uint64 = data.unpacked_uint64;
            }
            if (data.unpacked_sint32 != null) {
                message.unpacked_sint32 = data.unpacked_sint32;
            }
            if (data.unpacked_sint64 != null) {
                message.unpacked_sint64 = data.unpacked_sint64;
            }
            if (data.unpacked_fixed32 != null) {
                message.unpacked_fixed32 = data.unpacked_fixed32;
            }
            if (data.unpacked_fixed64 != null) {
                message.unpacked_fixed64 = data.unpacked_fixed64;
            }
            if (data.unpacked_sfixed32 != null) {
                message.unpacked_sfixed32 = data.unpacked_sfixed32;
            }
            if (data.unpacked_sfixed64 != null) {
                message.unpacked_sfixed64 = data.unpacked_sfixed64;
            }
            if (data.unpacked_float != null) {
                message.unpacked_float = data.unpacked_float;
            }
            if (data.unpacked_double != null) {
                message.unpacked_double = data.unpacked_double;
            }
            if (data.unpacked_bool != null) {
                message.unpacked_bool = data.unpacked_bool;
            }
            if (data.unpacked_nested_enum != null) {
                message.unpacked_nested_enum = data.unpacked_nested_enum;
            }
            if (typeof data.map_int32_int32 == "object") {
                message.map_int32_int32 = new Map(Object.entries(data.map_int32_int32).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_int64_int64 == "object") {
                message.map_int64_int64 = new Map(Object.entries(data.map_int64_int64).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_uint32_uint32 == "object") {
                message.map_uint32_uint32 = new Map(Object.entries(data.map_uint32_uint32).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_uint64_uint64 == "object") {
                message.map_uint64_uint64 = new Map(Object.entries(data.map_uint64_uint64).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_sint32_sint32 == "object") {
                message.map_sint32_sint32 = new Map(Object.entries(data.map_sint32_sint32).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_sint64_sint64 == "object") {
                message.map_sint64_sint64 = new Map(Object.entries(data.map_sint64_sint64).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_fixed32_fixed32 == "object") {
                message.map_fixed32_fixed32 = new Map(Object.entries(data.map_fixed32_fixed32).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_fixed64_fixed64 == "object") {
                message.map_fixed64_fixed64 = new Map(Object.entries(data.map_fixed64_fixed64).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_sfixed32_sfixed32 == "object") {
                message.map_sfixed32_sfixed32 = new Map(Object.entries(data.map_sfixed32_sfixed32).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_sfixed64_sfixed64 == "object") {
                message.map_sfixed64_sfixed64 = new Map(Object.entries(data.map_sfixed64_sfixed64).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_int32_float == "object") {
                message.map_int32_float = new Map(Object.entries(data.map_int32_float).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_int32_double == "object") {
                message.map_int32_double = new Map(Object.entries(data.map_int32_double).map(([key, value]) => [Number(key), value]));
            }
            if (typeof data.map_bool_bool == "object") {
                message.map_bool_bool = new Map(Object.entries(data.map_bool_bool).map(([key, value]) => [Boolean(key), value]));
            }
            if (typeof data.map_string_string == "object") {
                message.map_string_string = new Map(Object.entries(data.map_string_string));
            }
            if (typeof data.map_string_bytes == "object") {
                message.map_string_bytes = new Map(Object.entries(data.map_string_bytes));
            }
            if (typeof data.map_string_nested_message == "object") {
                message.map_string_nested_message = new Map(Object.entries(data.map_string_nested_message).map(([key, value]) => [key, TestAllTypesProto3.NestedMessage.fromObject(value)]));
            }
            if (typeof data.map_string_foreign_message == "object") {
                message.map_string_foreign_message = new Map(Object.entries(data.map_string_foreign_message).map(([key, value]) => [key, ForeignMessage.fromObject(value)]));
            }
            if (typeof data.map_string_nested_enum == "object") {
                message.map_string_nested_enum = new Map(Object.entries(data.map_string_nested_enum));
            }
            if (typeof data.map_string_foreign_enum == "object") {
                message.map_string_foreign_enum = new Map(Object.entries(data.map_string_foreign_enum));
            }
            if (data.oneof_uint32 != null) {
                message.oneof_uint32 = data.oneof_uint32;
            }
            if (data.oneof_nested_message != null) {
                message.oneof_nested_message = TestAllTypesProto3.NestedMessage.fromObject(data.oneof_nested_message);
            }
            if (data.oneof_string != null) {
                message.oneof_string = data.oneof_string;
            }
            if (data.oneof_bytes != null) {
                message.oneof_bytes = data.oneof_bytes;
            }
            if (data.oneof_bool != null) {
                message.oneof_bool = data.oneof_bool;
            }
            if (data.oneof_uint64 != null) {
                message.oneof_uint64 = data.oneof_uint64;
            }
            if (data.oneof_float != null) {
                message.oneof_float = data.oneof_float;
            }
            if (data.oneof_double != null) {
                message.oneof_double = data.oneof_double;
            }
            if (data.oneof_enum != null) {
                message.oneof_enum = data.oneof_enum;
            }
            if (data.oneof_null_value != null) {
                message.oneof_null_value = data.oneof_null_value;
            }
            if (data.optional_bool_wrapper != null) {
                message.optional_bool_wrapper = dependency_6.google.protobuf.BoolValue.fromObject(data.optional_bool_wrapper);
            }
            if (data.optional_int32_wrapper != null) {
                message.optional_int32_wrapper = dependency_6.google.protobuf.Int32Value.fromObject(data.optional_int32_wrapper);
            }
            if (data.optional_int64_wrapper != null) {
                message.optional_int64_wrapper = dependency_6.google.protobuf.Int64Value.fromObject(data.optional_int64_wrapper);
            }
            if (data.optional_uint32_wrapper != null) {
                message.optional_uint32_wrapper = dependency_6.google.protobuf.UInt32Value.fromObject(data.optional_uint32_wrapper);
            }
            if (data.optional_uint64_wrapper != null) {
                message.optional_uint64_wrapper = dependency_6.google.protobuf.UInt64Value.fromObject(data.optional_uint64_wrapper);
            }
            if (data.optional_float_wrapper != null) {
                message.optional_float_wrapper = dependency_6.google.protobuf.FloatValue.fromObject(data.optional_float_wrapper);
            }
            if (data.optional_double_wrapper != null) {
                message.optional_double_wrapper = dependency_6.google.protobuf.DoubleValue.fromObject(data.optional_double_wrapper);
            }
            if (data.optional_string_wrapper != null) {
                message.optional_string_wrapper = dependency_6.google.protobuf.StringValue.fromObject(data.optional_string_wrapper);
            }
            if (data.optional_bytes_wrapper != null) {
                message.optional_bytes_wrapper = dependency_6.google.protobuf.BytesValue.fromObject(data.optional_bytes_wrapper);
            }
            if (data.repeated_bool_wrapper != null) {
                message.repeated_bool_wrapper = data.repeated_bool_wrapper.map(item => dependency_6.google.protobuf.BoolValue.fromObject(item));
            }
            if (data.repeated_int32_wrapper != null) {
                message.repeated_int32_wrapper = data.repeated_int32_wrapper.map(item => dependency_6.google.protobuf.Int32Value.fromObject(item));
            }
            if (data.repeated_int64_wrapper != null) {
                message.repeated_int64_wrapper = data.repeated_int64_wrapper.map(item => dependency_6.google.protobuf.Int64Value.fromObject(item));
            }
            if (data.repeated_uint32_wrapper != null) {
                message.repeated_uint32_wrapper = data.repeated_uint32_wrapper.map(item => dependency_6.google.protobuf.UInt32Value.fromObject(item));
            }
            if (data.repeated_uint64_wrapper != null) {
                message.repeated_uint64_wrapper = data.repeated_uint64_wrapper.map(item => dependency_6.google.protobuf.UInt64Value.fromObject(item));
            }
            if (data.repeated_float_wrapper != null) {
                message.repeated_float_wrapper = data.repeated_float_wrapper.map(item => dependency_6.google.protobuf.FloatValue.fromObject(item));
            }
            if (data.repeated_double_wrapper != null) {
                message.repeated_double_wrapper = data.repeated_double_wrapper.map(item => dependency_6.google.protobuf.DoubleValue.fromObject(item));
            }
            if (data.repeated_string_wrapper != null) {
                message.repeated_string_wrapper = data.repeated_string_wrapper.map(item => dependency_6.google.protobuf.StringValue.fromObject(item));
            }
            if (data.repeated_bytes_wrapper != null) {
                message.repeated_bytes_wrapper = data.repeated_bytes_wrapper.map(item => dependency_6.google.protobuf.BytesValue.fromObject(item));
            }
            if (data.optional_duration != null) {
                message.optional_duration = dependency_2.google.protobuf.Duration.fromObject(data.optional_duration);
            }
            if (data.optional_timestamp != null) {
                message.optional_timestamp = dependency_5.google.protobuf.Timestamp.fromObject(data.optional_timestamp);
            }
            if (data.optional_field_mask != null) {
                message.optional_field_mask = dependency_3.google.protobuf.FieldMask.fromObject(data.optional_field_mask);
            }
            if (data.optional_struct != null) {
                message.optional_struct = dependency_4.google.protobuf.Struct.fromObject(data.optional_struct);
            }
            if (data.optional_any != null) {
                message.optional_any = dependency_1.google.protobuf.Any.fromObject(data.optional_any);
            }
            if (data.optional_value != null) {
                message.optional_value = dependency_4.google.protobuf.Value.fromObject(data.optional_value);
            }
            if (data.optional_null_value != null) {
                message.optional_null_value = data.optional_null_value;
            }
            if (data.repeated_duration != null) {
                message.repeated_duration = data.repeated_duration.map(item => dependency_2.google.protobuf.Duration.fromObject(item));
            }
            if (data.repeated_timestamp != null) {
                message.repeated_timestamp = data.repeated_timestamp.map(item => dependency_5.google.protobuf.Timestamp.fromObject(item));
            }
            if (data.repeated_fieldmask != null) {
                message.repeated_fieldmask = data.repeated_fieldmask.map(item => dependency_3.google.protobuf.FieldMask.fromObject(item));
            }
            if (data.repeated_struct != null) {
                message.repeated_struct = data.repeated_struct.map(item => dependency_4.google.protobuf.Struct.fromObject(item));
            }
            if (data.repeated_any != null) {
                message.repeated_any = data.repeated_any.map(item => dependency_1.google.protobuf.Any.fromObject(item));
            }
            if (data.repeated_value != null) {
                message.repeated_value = data.repeated_value.map(item => dependency_4.google.protobuf.Value.fromObject(item));
            }
            if (data.repeated_list_value != null) {
                message.repeated_list_value = data.repeated_list_value.map(item => dependency_4.google.protobuf.ListValue.fromObject(item));
            }
            if (data.fieldname1 != null) {
                message.fieldname1 = data.fieldname1;
            }
            if (data.field_name2 != null) {
                message.field_name2 = data.field_name2;
            }
            if (data._field_name3 != null) {
                message._field_name3 = data._field_name3;
            }
            if (data.field__name4_ != null) {
                message.field__name4_ = data.field__name4_;
            }
            if (data.field0name5 != null) {
                message.field0name5 = data.field0name5;
            }
            if (data.field_0_name6 != null) {
                message.field_0_name6 = data.field_0_name6;
            }
            if (data.fieldName7 != null) {
                message.fieldName7 = data.fieldName7;
            }
            if (data.FieldName8 != null) {
                message.FieldName8 = data.FieldName8;
            }
            if (data.field_Name9 != null) {
                message.field_Name9 = data.field_Name9;
            }
            if (data.Field_Name10 != null) {
                message.Field_Name10 = data.Field_Name10;
            }
            if (data.FIELD_NAME11 != null) {
                message.FIELD_NAME11 = data.FIELD_NAME11;
            }
            if (data.FIELD_name12 != null) {
                message.FIELD_name12 = data.FIELD_name12;
            }
            if (data.__field_name13 != null) {
                message.__field_name13 = data.__field_name13;
            }
            if (data.__Field_name14 != null) {
                message.__Field_name14 = data.__Field_name14;
            }
            if (data.field__name15 != null) {
                message.field__name15 = data.field__name15;
            }
            if (data.field__Name16 != null) {
                message.field__Name16 = data.field__Name16;
            }
            if (data.field_name17__ != null) {
                message.field_name17__ = data.field_name17__;
            }
            if (data.Field_name18__ != null) {
                message.Field_name18__ = data.Field_name18__;
            }
            return message;
        }
        toObject() {
            const data: {
                optional_int32?: number;
                optional_int64?: number;
                optional_uint32?: number;
                optional_uint64?: number;
                optional_sint32?: number;
                optional_sint64?: number;
                optional_fixed32?: number;
                optional_fixed64?: number;
                optional_sfixed32?: number;
                optional_sfixed64?: number;
                optional_float?: number;
                optional_double?: number;
                optional_bool?: boolean;
                optional_string?: string;
                optional_bytes?: Uint8Array;
                optional_nested_message?: ReturnType<typeof TestAllTypesProto3.NestedMessage.prototype.toObject>;
                optional_foreign_message?: ReturnType<typeof ForeignMessage.prototype.toObject>;
                optional_nested_enum?: TestAllTypesProto3.NestedEnum;
                optional_foreign_enum?: ForeignEnum;
                optional_aliased_enum?: TestAllTypesProto3.AliasedEnum;
                optional_string_piece?: string;
                optional_cord?: string;
                recursive_message?: ReturnType<typeof TestAllTypesProto3.prototype.toObject>;
                repeated_int32?: number[];
                repeated_int64?: number[];
                repeated_uint32?: number[];
                repeated_uint64?: number[];
                repeated_sint32?: number[];
                repeated_sint64?: number[];
                repeated_fixed32?: number[];
                repeated_fixed64?: number[];
                repeated_sfixed32?: number[];
                repeated_sfixed64?: number[];
                repeated_float?: number[];
                repeated_double?: number[];
                repeated_bool?: boolean[];
                repeated_string?: string[];
                repeated_bytes?: Uint8Array[];
                repeated_nested_message?: ReturnType<typeof TestAllTypesProto3.NestedMessage.prototype.toObject>[];
                repeated_foreign_message?: ReturnType<typeof ForeignMessage.prototype.toObject>[];
                repeated_nested_enum?: TestAllTypesProto3.NestedEnum[];
                repeated_foreign_enum?: ForeignEnum[];
                repeated_string_piece?: string[];
                repeated_cord?: string[];
                packed_int32?: number[];
                packed_int64?: number[];
                packed_uint32?: number[];
                packed_uint64?: number[];
                packed_sint32?: number[];
                packed_sint64?: number[];
                packed_fixed32?: number[];
                packed_fixed64?: number[];
                packed_sfixed32?: number[];
                packed_sfixed64?: number[];
                packed_float?: number[];
                packed_double?: number[];
                packed_bool?: boolean[];
                packed_nested_enum?: TestAllTypesProto3.NestedEnum[];
                unpacked_int32?: number[];
                unpacked_int64?: number[];
                unpacked_uint32?: number[];
                unpacked_uint64?: number[];
                unpacked_sint32?: number[];
                unpacked_sint64?: number[];
                unpacked_fixed32?: number[];
                unpacked_fixed64?: number[];
                unpacked_sfixed32?: number[];
                unpacked_sfixed64?: number[];
                unpacked_float?: number[];
                unpacked_double?: number[];
                unpacked_bool?: boolean[];
                unpacked_nested_enum?: TestAllTypesProto3.NestedEnum[];
                map_int32_int32?: {
                    [key: number]: number;
                };
                map_int64_int64?: {
                    [key: number]: number;
                };
                map_uint32_uint32?: {
                    [key: number]: number;
                };
                map_uint64_uint64?: {
                    [key: number]: number;
                };
                map_sint32_sint32?: {
                    [key: number]: number;
                };
                map_sint64_sint64?: {
                    [key: number]: number;
                };
                map_fixed32_fixed32?: {
                    [key: number]: number;
                };
                map_fixed64_fixed64?: {
                    [key: number]: number;
                };
                map_sfixed32_sfixed32?: {
                    [key: number]: number;
                };
                map_sfixed64_sfixed64?: {
                    [key: number]: number;
                };
                map_int32_float?: {
                    [key: number]: number;
                };
                map_int32_double?: {
                    [key: number]: number;
                };
                map_bool_bool?: {
                    [key: boolean]: boolean;
                };
                map_string_string?: {
                    [key: string]: string;
                };
                map_string_bytes?: {
                    [key: string]: Uint8Array;
                };
                map_string_nested_message?: {
                    [key: string]: ReturnType<typeof TestAllTypesProto3.NestedMessage.prototype.toObject>;
                };
                map_string_foreign_message?: {
                    [key: string]: ReturnType<typeof ForeignMessage.prototype.toObject>;
                };
                map_string_nested_enum?: {
                    [key: string]: TestAllTypesProto3.NestedEnum;
                };
                map_string_foreign_enum?: {
                    [key: string]: ForeignEnum;
                };
                oneof_uint32?: number;
                oneof_nested_message?: ReturnType<typeof TestAllTypesProto3.NestedMessage.prototype.toObject>;
                oneof_string?: string;
                oneof_bytes?: Uint8Array;
                oneof_bool?: boolean;
                oneof_uint64?: number;
                oneof_float?: number;
                oneof_double?: number;
                oneof_enum?: TestAllTypesProto3.NestedEnum;
                oneof_null_value?: dependency_4.google.protobuf.NullValue;
                optional_bool_wrapper?: ReturnType<typeof dependency_6.google.protobuf.BoolValue.prototype.toObject>;
                optional_int32_wrapper?: ReturnType<typeof dependency_6.google.protobuf.Int32Value.prototype.toObject>;
                optional_int64_wrapper?: ReturnType<typeof dependency_6.google.protobuf.Int64Value.prototype.toObject>;
                optional_uint32_wrapper?: ReturnType<typeof dependency_6.google.protobuf.UInt32Value.prototype.toObject>;
                optional_uint64_wrapper?: ReturnType<typeof dependency_6.google.protobuf.UInt64Value.prototype.toObject>;
                optional_float_wrapper?: ReturnType<typeof dependency_6.google.protobuf.FloatValue.prototype.toObject>;
                optional_double_wrapper?: ReturnType<typeof dependency_6.google.protobuf.DoubleValue.prototype.toObject>;
                optional_string_wrapper?: ReturnType<typeof dependency_6.google.protobuf.StringValue.prototype.toObject>;
                optional_bytes_wrapper?: ReturnType<typeof dependency_6.google.protobuf.BytesValue.prototype.toObject>;
                repeated_bool_wrapper?: ReturnType<typeof dependency_6.google.protobuf.BoolValue.prototype.toObject>[];
                repeated_int32_wrapper?: ReturnType<typeof dependency_6.google.protobuf.Int32Value.prototype.toObject>[];
                repeated_int64_wrapper?: ReturnType<typeof dependency_6.google.protobuf.Int64Value.prototype.toObject>[];
                repeated_uint32_wrapper?: ReturnType<typeof dependency_6.google.protobuf.UInt32Value.prototype.toObject>[];
                repeated_uint64_wrapper?: ReturnType<typeof dependency_6.google.protobuf.UInt64Value.prototype.toObject>[];
                repeated_float_wrapper?: ReturnType<typeof dependency_6.google.protobuf.FloatValue.prototype.toObject>[];
                repeated_double_wrapper?: ReturnType<typeof dependency_6.google.protobuf.DoubleValue.prototype.toObject>[];
                repeated_string_wrapper?: ReturnType<typeof dependency_6.google.protobuf.StringValue.prototype.toObject>[];
                repeated_bytes_wrapper?: ReturnType<typeof dependency_6.google.protobuf.BytesValue.prototype.toObject>[];
                optional_duration?: ReturnType<typeof dependency_2.google.protobuf.Duration.prototype.toObject>;
                optional_timestamp?: ReturnType<typeof dependency_5.google.protobuf.Timestamp.prototype.toObject>;
                optional_field_mask?: ReturnType<typeof dependency_3.google.protobuf.FieldMask.prototype.toObject>;
                optional_struct?: ReturnType<typeof dependency_4.google.protobuf.Struct.prototype.toObject>;
                optional_any?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
                optional_value?: ReturnType<typeof dependency_4.google.protobuf.Value.prototype.toObject>;
                optional_null_value?: dependency_4.google.protobuf.NullValue;
                repeated_duration?: ReturnType<typeof dependency_2.google.protobuf.Duration.prototype.toObject>[];
                repeated_timestamp?: ReturnType<typeof dependency_5.google.protobuf.Timestamp.prototype.toObject>[];
                repeated_fieldmask?: ReturnType<typeof dependency_3.google.protobuf.FieldMask.prototype.toObject>[];
                repeated_struct?: ReturnType<typeof dependency_4.google.protobuf.Struct.prototype.toObject>[];
                repeated_any?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
                repeated_value?: ReturnType<typeof dependency_4.google.protobuf.Value.prototype.toObject>[];
                repeated_list_value?: ReturnType<typeof dependency_4.google.protobuf.ListValue.prototype.toObject>[];
                fieldname1?: number;
                field_name2?: number;
                _field_name3?: number;
                field__name4_?: number;
                field0name5?: number;
                field_0_name6?: number;
                fieldName7?: number;
                FieldName8?: number;
                field_Name9?: number;
                Field_Name10?: number;
                FIELD_NAME11?: number;
                FIELD_name12?: number;
                __field_name13?: number;
                __Field_name14?: number;
                field__name15?: number;
                field__Name16?: number;
                field_name17__?: number;
                Field_name18__?: number;
            } = {};
            if (this.optional_int32 != null) {
                data.optional_int32 = this.optional_int32;
            }
            if (this.optional_int64 != null) {
                data.optional_int64 = this.optional_int64;
            }
            if (this.optional_uint32 != null) {
                data.optional_uint32 = this.optional_uint32;
            }
            if (this.optional_uint64 != null) {
                data.optional_uint64 = this.optional_uint64;
            }
            if (this.optional_sint32 != null) {
                data.optional_sint32 = this.optional_sint32;
            }
            if (this.optional_sint64 != null) {
                data.optional_sint64 = this.optional_sint64;
            }
            if (this.optional_fixed32 != null) {
                data.optional_fixed32 = this.optional_fixed32;
            }
            if (this.optional_fixed64 != null) {
                data.optional_fixed64 = this.optional_fixed64;
            }
            if (this.optional_sfixed32 != null) {
                data.optional_sfixed32 = this.optional_sfixed32;
            }
            if (this.optional_sfixed64 != null) {
                data.optional_sfixed64 = this.optional_sfixed64;
            }
            if (this.optional_float != null) {
                data.optional_float = this.optional_float;
            }
            if (this.optional_double != null) {
                data.optional_double = this.optional_double;
            }
            if (this.optional_bool != null) {
                data.optional_bool = this.optional_bool;
            }
            if (this.optional_string != null) {
                data.optional_string = this.optional_string;
            }
            if (this.optional_bytes != null) {
                data.optional_bytes = this.optional_bytes;
            }
            if (this.optional_nested_message != null) {
                data.optional_nested_message = this.optional_nested_message.toObject();
            }
            if (this.optional_foreign_message != null) {
                data.optional_foreign_message = this.optional_foreign_message.toObject();
            }
            if (this.optional_nested_enum != null) {
                data.optional_nested_enum = this.optional_nested_enum;
            }
            if (this.optional_foreign_enum != null) {
                data.optional_foreign_enum = this.optional_foreign_enum;
            }
            if (this.optional_aliased_enum != null) {
                data.optional_aliased_enum = this.optional_aliased_enum;
            }
            if (this.optional_string_piece != null) {
                data.optional_string_piece = this.optional_string_piece;
            }
            if (this.optional_cord != null) {
                data.optional_cord = this.optional_cord;
            }
            if (this.recursive_message != null) {
                data.recursive_message = this.recursive_message.toObject();
            }
            if (this.repeated_int32 != null) {
                data.repeated_int32 = this.repeated_int32;
            }
            if (this.repeated_int64 != null) {
                data.repeated_int64 = this.repeated_int64;
            }
            if (this.repeated_uint32 != null) {
                data.repeated_uint32 = this.repeated_uint32;
            }
            if (this.repeated_uint64 != null) {
                data.repeated_uint64 = this.repeated_uint64;
            }
            if (this.repeated_sint32 != null) {
                data.repeated_sint32 = this.repeated_sint32;
            }
            if (this.repeated_sint64 != null) {
                data.repeated_sint64 = this.repeated_sint64;
            }
            if (this.repeated_fixed32 != null) {
                data.repeated_fixed32 = this.repeated_fixed32;
            }
            if (this.repeated_fixed64 != null) {
                data.repeated_fixed64 = this.repeated_fixed64;
            }
            if (this.repeated_sfixed32 != null) {
                data.repeated_sfixed32 = this.repeated_sfixed32;
            }
            if (this.repeated_sfixed64 != null) {
                data.repeated_sfixed64 = this.repeated_sfixed64;
            }
            if (this.repeated_float != null) {
                data.repeated_float = this.repeated_float;
            }
            if (this.repeated_double != null) {
                data.repeated_double = this.repeated_double;
            }
            if (this.repeated_bool != null) {
                data.repeated_bool = this.repeated_bool;
            }
            if (this.repeated_string != null) {
                data.repeated_string = this.repeated_string;
            }
            if (this.repeated_bytes != null) {
                data.repeated_bytes = this.repeated_bytes;
            }
            if (this.repeated_nested_message != null) {
                data.repeated_nested_message = this.repeated_nested_message.map((item: TestAllTypesProto3.NestedMessage) => item.toObject());
            }
            if (this.repeated_foreign_message != null) {
                data.repeated_foreign_message = this.repeated_foreign_message.map((item: ForeignMessage) => item.toObject());
            }
            if (this.repeated_nested_enum != null) {
                data.repeated_nested_enum = this.repeated_nested_enum;
            }
            if (this.repeated_foreign_enum != null) {
                data.repeated_foreign_enum = this.repeated_foreign_enum;
            }
            if (this.repeated_string_piece != null) {
                data.repeated_string_piece = this.repeated_string_piece;
            }
            if (this.repeated_cord != null) {
                data.repeated_cord = this.repeated_cord;
            }
            if (this.packed_int32 != null) {
                data.packed_int32 = this.packed_int32;
            }
            if (this.packed_int64 != null) {
                data.packed_int64 = this.packed_int64;
            }
            if (this.packed_uint32 != null) {
                data.packed_uint32 = this.packed_uint32;
            }
            if (this.packed_uint64 != null) {
                data.packed_uint64 = this.packed_uint64;
            }
            if (this.packed_sint32 != null) {
                data.packed_sint32 = this.packed_sint32;
            }
            if (this.packed_sint64 != null) {
                data.packed_sint64 = this.packed_sint64;
            }
            if (this.packed_fixed32 != null) {
                data.packed_fixed32 = this.packed_fixed32;
            }
            if (this.packed_fixed64 != null) {
                data.packed_fixed64 = this.packed_fixed64;
            }
            if (this.packed_sfixed32 != null) {
                data.packed_sfixed32 = this.packed_sfixed32;
            }
            if (this.packed_sfixed64 != null) {
                data.packed_sfixed64 = this.packed_sfixed64;
            }
            if (this.packed_float != null) {
                data.packed_float = this.packed_float;
            }
            if (this.packed_double != null) {
                data.packed_double = this.packed_double;
            }
            if (this.packed_bool != null) {
                data.packed_bool = this.packed_bool;
            }
            if (this.packed_nested_enum != null) {
                data.packed_nested_enum = this.packed_nested_enum;
            }
            if (this.unpacked_int32 != null) {
                data.unpacked_int32 = this.unpacked_int32;
            }
            if (this.unpacked_int64 != null) {
                data.unpacked_int64 = this.unpacked_int64;
            }
            if (this.unpacked_uint32 != null) {
                data.unpacked_uint32 = this.unpacked_uint32;
            }
            if (this.unpacked_uint64 != null) {
                data.unpacked_uint64 = this.unpacked_uint64;
            }
            if (this.unpacked_sint32 != null) {
                data.unpacked_sint32 = this.unpacked_sint32;
            }
            if (this.unpacked_sint64 != null) {
                data.unpacked_sint64 = this.unpacked_sint64;
            }
            if (this.unpacked_fixed32 != null) {
                data.unpacked_fixed32 = this.unpacked_fixed32;
            }
            if (this.unpacked_fixed64 != null) {
                data.unpacked_fixed64 = this.unpacked_fixed64;
            }
            if (this.unpacked_sfixed32 != null) {
                data.unpacked_sfixed32 = this.unpacked_sfixed32;
            }
            if (this.unpacked_sfixed64 != null) {
                data.unpacked_sfixed64 = this.unpacked_sfixed64;
            }
            if (this.unpacked_float != null) {
                data.unpacked_float = this.unpacked_float;
            }
            if (this.unpacked_double != null) {
                data.unpacked_double = this.unpacked_double;
            }
            if (this.unpacked_bool != null) {
                data.unpacked_bool = this.unpacked_bool;
            }
            if (this.unpacked_nested_enum != null) {
                data.unpacked_nested_enum = this.unpacked_nested_enum;
            }
            if (this.map_int32_int32 != null) {
                data.map_int32_int32 = (Object.fromEntries)(this.map_int32_int32);
            }
            if (this.map_int64_int64 != null) {
                data.map_int64_int64 = (Object.fromEntries)(this.map_int64_int64);
            }
            if (this.map_uint32_uint32 != null) {
                data.map_uint32_uint32 = (Object.fromEntries)(this.map_uint32_uint32);
            }
            if (this.map_uint64_uint64 != null) {
                data.map_uint64_uint64 = (Object.fromEntries)(this.map_uint64_uint64);
            }
            if (this.map_sint32_sint32 != null) {
                data.map_sint32_sint32 = (Object.fromEntries)(this.map_sint32_sint32);
            }
            if (this.map_sint64_sint64 != null) {
                data.map_sint64_sint64 = (Object.fromEntries)(this.map_sint64_sint64);
            }
            if (this.map_fixed32_fixed32 != null) {
                data.map_fixed32_fixed32 = (Object.fromEntries)(this.map_fixed32_fixed32);
            }
            if (this.map_fixed64_fixed64 != null) {
                data.map_fixed64_fixed64 = (Object.fromEntries)(this.map_fixed64_fixed64);
            }
            if (this.map_sfixed32_sfixed32 != null) {
                data.map_sfixed32_sfixed32 = (Object.fromEntries)(this.map_sfixed32_sfixed32);
            }
            if (this.map_sfixed64_sfixed64 != null) {
                data.map_sfixed64_sfixed64 = (Object.fromEntries)(this.map_sfixed64_sfixed64);
            }
            if (this.map_int32_float != null) {
                data.map_int32_float = (Object.fromEntries)(this.map_int32_float);
            }
            if (this.map_int32_double != null) {
                data.map_int32_double = (Object.fromEntries)(this.map_int32_double);
            }
            if (this.map_bool_bool != null) {
                data.map_bool_bool = (Object.fromEntries)(this.map_bool_bool);
            }
            if (this.map_string_string != null) {
                data.map_string_string = (Object.fromEntries)(this.map_string_string);
            }
            if (this.map_string_bytes != null) {
                data.map_string_bytes = (Object.fromEntries)(this.map_string_bytes);
            }
            if (this.map_string_nested_message != null) {
                data.map_string_nested_message = (Object.fromEntries)((Array.from)(this.map_string_nested_message).map(([key, value]) => [key, value.toObject()]));
            }
            if (this.map_string_foreign_message != null) {
                data.map_string_foreign_message = (Object.fromEntries)((Array.from)(this.map_string_foreign_message).map(([key, value]) => [key, value.toObject()]));
            }
            if (this.map_string_nested_enum != null) {
                data.map_string_nested_enum = (Object.fromEntries)(this.map_string_nested_enum);
            }
            if (this.map_string_foreign_enum != null) {
                data.map_string_foreign_enum = (Object.fromEntries)(this.map_string_foreign_enum);
            }
            if (this.oneof_uint32 != null) {
                data.oneof_uint32 = this.oneof_uint32;
            }
            if (this.oneof_nested_message != null) {
                data.oneof_nested_message = this.oneof_nested_message.toObject();
            }
            if (this.oneof_string != null) {
                data.oneof_string = this.oneof_string;
            }
            if (this.oneof_bytes != null) {
                data.oneof_bytes = this.oneof_bytes;
            }
            if (this.oneof_bool != null) {
                data.oneof_bool = this.oneof_bool;
            }
            if (this.oneof_uint64 != null) {
                data.oneof_uint64 = this.oneof_uint64;
            }
            if (this.oneof_float != null) {
                data.oneof_float = this.oneof_float;
            }
            if (this.oneof_double != null) {
                data.oneof_double = this.oneof_double;
            }
            if (this.oneof_enum != null) {
                data.oneof_enum = this.oneof_enum;
            }
            if (this.oneof_null_value != null) {
                data.oneof_null_value = this.oneof_null_value;
            }
            if (this.optional_bool_wrapper != null) {
                data.optional_bool_wrapper = this.optional_bool_wrapper.toObject();
            }
            if (this.optional_int32_wrapper != null) {
                data.optional_int32_wrapper = this.optional_int32_wrapper.toObject();
            }
            if (this.optional_int64_wrapper != null) {
                data.optional_int64_wrapper = this.optional_int64_wrapper.toObject();
            }
            if (this.optional_uint32_wrapper != null) {
                data.optional_uint32_wrapper = this.optional_uint32_wrapper.toObject();
            }
            if (this.optional_uint64_wrapper != null) {
                data.optional_uint64_wrapper = this.optional_uint64_wrapper.toObject();
            }
            if (this.optional_float_wrapper != null) {
                data.optional_float_wrapper = this.optional_float_wrapper.toObject();
            }
            if (this.optional_double_wrapper != null) {
                data.optional_double_wrapper = this.optional_double_wrapper.toObject();
            }
            if (this.optional_string_wrapper != null) {
                data.optional_string_wrapper = this.optional_string_wrapper.toObject();
            }
            if (this.optional_bytes_wrapper != null) {
                data.optional_bytes_wrapper = this.optional_bytes_wrapper.toObject();
            }
            if (this.repeated_bool_wrapper != null) {
                data.repeated_bool_wrapper = this.repeated_bool_wrapper.map((item: dependency_6.google.protobuf.BoolValue) => item.toObject());
            }
            if (this.repeated_int32_wrapper != null) {
                data.repeated_int32_wrapper = this.repeated_int32_wrapper.map((item: dependency_6.google.protobuf.Int32Value) => item.toObject());
            }
            if (this.repeated_int64_wrapper != null) {
                data.repeated_int64_wrapper = this.repeated_int64_wrapper.map((item: dependency_6.google.protobuf.Int64Value) => item.toObject());
            }
            if (this.repeated_uint32_wrapper != null) {
                data.repeated_uint32_wrapper = this.repeated_uint32_wrapper.map((item: dependency_6.google.protobuf.UInt32Value) => item.toObject());
            }
            if (this.repeated_uint64_wrapper != null) {
                data.repeated_uint64_wrapper = this.repeated_uint64_wrapper.map((item: dependency_6.google.protobuf.UInt64Value) => item.toObject());
            }
            if (this.repeated_float_wrapper != null) {
                data.repeated_float_wrapper = this.repeated_float_wrapper.map((item: dependency_6.google.protobuf.FloatValue) => item.toObject());
            }
            if (this.repeated_double_wrapper != null) {
                data.repeated_double_wrapper = this.repeated_double_wrapper.map((item: dependency_6.google.protobuf.DoubleValue) => item.toObject());
            }
            if (this.repeated_string_wrapper != null) {
                data.repeated_string_wrapper = this.repeated_string_wrapper.map((item: dependency_6.google.protobuf.StringValue) => item.toObject());
            }
            if (this.repeated_bytes_wrapper != null) {
                data.repeated_bytes_wrapper = this.repeated_bytes_wrapper.map((item: dependency_6.google.protobuf.BytesValue) => item.toObject());
            }
            if (this.optional_duration != null) {
                data.optional_duration = this.optional_duration.toObject();
            }
            if (this.optional_timestamp != null) {
                data.optional_timestamp = this.optional_timestamp.toObject();
            }
            if (this.optional_field_mask != null) {
                data.optional_field_mask = this.optional_field_mask.toObject();
            }
            if (this.optional_struct != null) {
                data.optional_struct = this.optional_struct.toObject();
            }
            if (this.optional_any != null) {
                data.optional_any = this.optional_any.toObject();
            }
            if (this.optional_value != null) {
                data.optional_value = this.optional_value.toObject();
            }
            if (this.optional_null_value != null) {
                data.optional_null_value = this.optional_null_value;
            }
            if (this.repeated_duration != null) {
                data.repeated_duration = this.repeated_duration.map((item: dependency_2.google.protobuf.Duration) => item.toObject());
            }
            if (this.repeated_timestamp != null) {
                data.repeated_timestamp = this.repeated_timestamp.map((item: dependency_5.google.protobuf.Timestamp) => item.toObject());
            }
            if (this.repeated_fieldmask != null) {
                data.repeated_fieldmask = this.repeated_fieldmask.map((item: dependency_3.google.protobuf.FieldMask) => item.toObject());
            }
            if (this.repeated_struct != null) {
                data.repeated_struct = this.repeated_struct.map((item: dependency_4.google.protobuf.Struct) => item.toObject());
            }
            if (this.repeated_any != null) {
                data.repeated_any = this.repeated_any.map((item: dependency_1.google.protobuf.Any) => item.toObject());
            }
            if (this.repeated_value != null) {
                data.repeated_value = this.repeated_value.map((item: dependency_4.google.protobuf.Value) => item.toObject());
            }
            if (this.repeated_list_value != null) {
                data.repeated_list_value = this.repeated_list_value.map((item: dependency_4.google.protobuf.ListValue) => item.toObject());
            }
            if (this.fieldname1 != null) {
                data.fieldname1 = this.fieldname1;
            }
            if (this.field_name2 != null) {
                data.field_name2 = this.field_name2;
            }
            if (this._field_name3 != null) {
                data._field_name3 = this._field_name3;
            }
            if (this.field__name4_ != null) {
                data.field__name4_ = this.field__name4_;
            }
            if (this.field0name5 != null) {
                data.field0name5 = this.field0name5;
            }
            if (this.field_0_name6 != null) {
                data.field_0_name6 = this.field_0_name6;
            }
            if (this.fieldName7 != null) {
                data.fieldName7 = this.fieldName7;
            }
            if (this.FieldName8 != null) {
                data.FieldName8 = this.FieldName8;
            }
            if (this.field_Name9 != null) {
                data.field_Name9 = this.field_Name9;
            }
            if (this.Field_Name10 != null) {
                data.Field_Name10 = this.Field_Name10;
            }
            if (this.FIELD_NAME11 != null) {
                data.FIELD_NAME11 = this.FIELD_NAME11;
            }
            if (this.FIELD_name12 != null) {
                data.FIELD_name12 = this.FIELD_name12;
            }
            if (this.__field_name13 != null) {
                data.__field_name13 = this.__field_name13;
            }
            if (this.__Field_name14 != null) {
                data.__Field_name14 = this.__Field_name14;
            }
            if (this.field__name15 != null) {
                data.field__name15 = this.field__name15;
            }
            if (this.field__Name16 != null) {
                data.field__Name16 = this.field__Name16;
            }
            if (this.field_name17__ != null) {
                data.field_name17__ = this.field_name17__;
            }
            if (this.Field_name18__ != null) {
                data.Field_name18__ = this.Field_name18__;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.optional_int32 != 0)
                writer.writeInt32(1, this.optional_int32);
            if (this.optional_int64 != 0)
                writer.writeInt64(2, this.optional_int64);
            if (this.optional_uint32 != 0)
                writer.writeUint32(3, this.optional_uint32);
            if (this.optional_uint64 != 0)
                writer.writeUint64(4, this.optional_uint64);
            if (this.optional_sint32 != 0)
                writer.writeSint32(5, this.optional_sint32);
            if (this.optional_sint64 != 0)
                writer.writeSint64(6, this.optional_sint64);
            if (this.optional_fixed32 != 0)
                writer.writeFixed32(7, this.optional_fixed32);
            if (this.optional_fixed64 != 0)
                writer.writeFixed64(8, this.optional_fixed64);
            if (this.optional_sfixed32 != 0)
                writer.writeSfixed32(9, this.optional_sfixed32);
            if (this.optional_sfixed64 != 0)
                writer.writeSfixed64(10, this.optional_sfixed64);
            if (this.optional_float != 0)
                writer.writeFloat(11, this.optional_float);
            if (this.optional_double != 0)
                writer.writeDouble(12, this.optional_double);
            if (this.optional_bool != false)
                writer.writeBool(13, this.optional_bool);
            if (this.optional_string.length)
                writer.writeString(14, this.optional_string);
            if (this.optional_bytes.length)
                writer.writeBytes(15, this.optional_bytes);
            if (this.has_optional_nested_message)
                writer.writeMessage(18, this.optional_nested_message, () => this.optional_nested_message.serialize(writer));
            if (this.has_optional_foreign_message)
                writer.writeMessage(19, this.optional_foreign_message, () => this.optional_foreign_message.serialize(writer));
            if (this.optional_nested_enum != TestAllTypesProto3.NestedEnum.FOO)
                writer.writeEnum(21, this.optional_nested_enum);
            if (this.optional_foreign_enum != ForeignEnum.FOREIGN_FOO)
                writer.writeEnum(22, this.optional_foreign_enum);
            if (this.optional_aliased_enum != TestAllTypesProto3.AliasedEnum.ALIAS_FOO)
                writer.writeEnum(23, this.optional_aliased_enum);
            if (this.optional_string_piece.length)
                writer.writeString(24, this.optional_string_piece);
            if (this.optional_cord.length)
                writer.writeString(25, this.optional_cord);
            if (this.has_recursive_message)
                writer.writeMessage(27, this.recursive_message, () => this.recursive_message.serialize(writer));
            if (this.repeated_int32.length)
                writer.writePackedInt32(31, this.repeated_int32);
            if (this.repeated_int64.length)
                writer.writePackedInt64(32, this.repeated_int64);
            if (this.repeated_uint32.length)
                writer.writePackedUint32(33, this.repeated_uint32);
            if (this.repeated_uint64.length)
                writer.writePackedUint64(34, this.repeated_uint64);
            if (this.repeated_sint32.length)
                writer.writePackedSint32(35, this.repeated_sint32);
            if (this.repeated_sint64.length)
                writer.writePackedSint64(36, this.repeated_sint64);
            if (this.repeated_fixed32.length)
                writer.writePackedFixed32(37, this.repeated_fixed32);
            if (this.repeated_fixed64.length)
                writer.writePackedFixed64(38, this.repeated_fixed64);
            if (this.repeated_sfixed32.length)
                writer.writePackedSfixed32(39, this.repeated_sfixed32);
            if (this.repeated_sfixed64.length)
                writer.writePackedSfixed64(40, this.repeated_sfixed64);
            if (this.repeated_float.length)
                writer.writePackedFloat(41, this.repeated_float);
            if (this.repeated_double.length)
                writer.writePackedDouble(42, this.repeated_double);
            if (this.repeated_bool.length)
                writer.writePackedBool(43, this.repeated_bool);
            if (this.repeated_string.length)
                writer.writeRepeatedString(44, this.repeated_string);
            if (this.repeated_bytes.length)
                writer.writeRepeatedBytes(45, this.repeated_bytes);
            if (this.repeated_nested_message.length)
                writer.writeRepeatedMessage(48, this.repeated_nested_message, (item: TestAllTypesProto3.NestedMessage) => item.serialize(writer));
            if (this.repeated_foreign_message.length)
                writer.writeRepeatedMessage(49, this.repeated_foreign_message, (item: ForeignMessage) => item.serialize(writer));
            if (this.repeated_nested_enum.length)
                writer.writePackedEnum(51, this.repeated_nested_enum);
            if (this.repeated_foreign_enum.length)
                writer.writePackedEnum(52, this.repeated_foreign_enum);
            if (this.repeated_string_piece.length)
                writer.writeRepeatedString(54, this.repeated_string_piece);
            if (this.repeated_cord.length)
                writer.writeRepeatedString(55, this.repeated_cord);
            if (this.packed_int32.length)
                writer.writePackedInt32(75, this.packed_int32);
            if (this.packed_int64.length)
                writer.writePackedInt64(76, this.packed_int64);
            if (this.packed_uint32.length)
                writer.writePackedUint32(77, this.packed_uint32);
            if (this.packed_uint64.length)
                writer.writePackedUint64(78, this.packed_uint64);
            if (this.packed_sint32.length)
                writer.writePackedSint32(79, this.packed_sint32);
            if (this.packed_sint64.length)
                writer.writePackedSint64(80, this.packed_sint64);
            if (this.packed_fixed32.length)
                writer.writePackedFixed32(81, this.packed_fixed32);
            if (this.packed_fixed64.length)
                writer.writePackedFixed64(82, this.packed_fixed64);
            if (this.packed_sfixed32.length)
                writer.writePackedSfixed32(83, this.packed_sfixed32);
            if (this.packed_sfixed64.length)
                writer.writePackedSfixed64(84, this.packed_sfixed64);
            if (this.packed_float.length)
                writer.writePackedFloat(85, this.packed_float);
            if (this.packed_double.length)
                writer.writePackedDouble(86, this.packed_double);
            if (this.packed_bool.length)
                writer.writePackedBool(87, this.packed_bool);
            if (this.packed_nested_enum.length)
                writer.writePackedEnum(88, this.packed_nested_enum);
            if (this.unpacked_int32.length)
                writer.writeRepeatedInt32(89, this.unpacked_int32);
            if (this.unpacked_int64.length)
                writer.writeRepeatedInt64(90, this.unpacked_int64);
            if (this.unpacked_uint32.length)
                writer.writeRepeatedUint32(91, this.unpacked_uint32);
            if (this.unpacked_uint64.length)
                writer.writeRepeatedUint64(92, this.unpacked_uint64);
            if (this.unpacked_sint32.length)
                writer.writeRepeatedSint32(93, this.unpacked_sint32);
            if (this.unpacked_sint64.length)
                writer.writeRepeatedSint64(94, this.unpacked_sint64);
            if (this.unpacked_fixed32.length)
                writer.writeRepeatedFixed32(95, this.unpacked_fixed32);
            if (this.unpacked_fixed64.length)
                writer.writeRepeatedFixed64(96, this.unpacked_fixed64);
            if (this.unpacked_sfixed32.length)
                writer.writeRepeatedSfixed32(97, this.unpacked_sfixed32);
            if (this.unpacked_sfixed64.length)
                writer.writeRepeatedSfixed64(98, this.unpacked_sfixed64);
            if (this.unpacked_float.length)
                writer.writeRepeatedFloat(99, this.unpacked_float);
            if (this.unpacked_double.length)
                writer.writeRepeatedDouble(100, this.unpacked_double);
            if (this.unpacked_bool.length)
                writer.writeRepeatedBool(101, this.unpacked_bool);
            if (this.unpacked_nested_enum.length)
                writer.writeRepeatedEnum(102, this.unpacked_nested_enum);
            for (const [key, value] of this.map_int32_int32) {
                writer.writeMessage(56, this.map_int32_int32, () => {
                    writer.writeInt32(1, key);
                    writer.writeInt32(2, value);
                });
            }
            for (const [key, value] of this.map_int64_int64) {
                writer.writeMessage(57, this.map_int64_int64, () => {
                    writer.writeInt64(1, key);
                    writer.writeInt64(2, value);
                });
            }
            for (const [key, value] of this.map_uint32_uint32) {
                writer.writeMessage(58, this.map_uint32_uint32, () => {
                    writer.writeUint32(1, key);
                    writer.writeUint32(2, value);
                });
            }
            for (const [key, value] of this.map_uint64_uint64) {
                writer.writeMessage(59, this.map_uint64_uint64, () => {
                    writer.writeUint64(1, key);
                    writer.writeUint64(2, value);
                });
            }
            for (const [key, value] of this.map_sint32_sint32) {
                writer.writeMessage(60, this.map_sint32_sint32, () => {
                    writer.writeSint32(1, key);
                    writer.writeSint32(2, value);
                });
            }
            for (const [key, value] of this.map_sint64_sint64) {
                writer.writeMessage(61, this.map_sint64_sint64, () => {
                    writer.writeSint64(1, key);
                    writer.writeSint64(2, value);
                });
            }
            for (const [key, value] of this.map_fixed32_fixed32) {
                writer.writeMessage(62, this.map_fixed32_fixed32, () => {
                    writer.writeFixed32(1, key);
                    writer.writeFixed32(2, value);
                });
            }
            for (const [key, value] of this.map_fixed64_fixed64) {
                writer.writeMessage(63, this.map_fixed64_fixed64, () => {
                    writer.writeFixed64(1, key);
                    writer.writeFixed64(2, value);
                });
            }
            for (const [key, value] of this.map_sfixed32_sfixed32) {
                writer.writeMessage(64, this.map_sfixed32_sfixed32, () => {
                    writer.writeSfixed32(1, key);
                    writer.writeSfixed32(2, value);
                });
            }
            for (const [key, value] of this.map_sfixed64_sfixed64) {
                writer.writeMessage(65, this.map_sfixed64_sfixed64, () => {
                    writer.writeSfixed64(1, key);
                    writer.writeSfixed64(2, value);
                });
            }
            for (const [key, value] of this.map_int32_float) {
                writer.writeMessage(66, this.map_int32_float, () => {
                    writer.writeInt32(1, key);
                    writer.writeFloat(2, value);
                });
            }
            for (const [key, value] of this.map_int32_double) {
                writer.writeMessage(67, this.map_int32_double, () => {
                    writer.writeInt32(1, key);
                    writer.writeDouble(2, value);
                });
            }
            for (const [key, value] of this.map_bool_bool) {
                writer.writeMessage(68, this.map_bool_bool, () => {
                    writer.writeBool(1, key);
                    writer.writeBool(2, value);
                });
            }
            for (const [key, value] of this.map_string_string) {
                writer.writeMessage(69, this.map_string_string, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            for (const [key, value] of this.map_string_bytes) {
                writer.writeMessage(70, this.map_string_bytes, () => {
                    writer.writeString(1, key);
                    writer.writeBytes(2, value);
                });
            }
            for (const [key, value] of this.map_string_nested_message) {
                writer.writeMessage(71, this.map_string_nested_message, () => {
                    writer.writeString(1, key);
                    writer.writeMessage(2, value, () => value.serialize(writer));
                });
            }
            for (const [key, value] of this.map_string_foreign_message) {
                writer.writeMessage(72, this.map_string_foreign_message, () => {
                    writer.writeString(1, key);
                    writer.writeMessage(2, value, () => value.serialize(writer));
                });
            }
            for (const [key, value] of this.map_string_nested_enum) {
                writer.writeMessage(73, this.map_string_nested_enum, () => {
                    writer.writeString(1, key);
                    writer.writeEnum(2, value);
                });
            }
            for (const [key, value] of this.map_string_foreign_enum) {
                writer.writeMessage(74, this.map_string_foreign_enum, () => {
                    writer.writeString(1, key);
                    writer.writeEnum(2, value);
                });
            }
            if (this.has_oneof_uint32)
                writer.writeUint32(111, this.oneof_uint32);
            if (this.has_oneof_nested_message)
                writer.writeMessage(112, this.oneof_nested_message, () => this.oneof_nested_message.serialize(writer));
            if (this.has_oneof_string)
                writer.writeString(113, this.oneof_string);
            if (this.has_oneof_bytes)
                writer.writeBytes(114, this.oneof_bytes);
            if (this.has_oneof_bool)
                writer.writeBool(115, this.oneof_bool);
            if (this.has_oneof_uint64)
                writer.writeUint64(116, this.oneof_uint64);
            if (this.has_oneof_float)
                writer.writeFloat(117, this.oneof_float);
            if (this.has_oneof_double)
                writer.writeDouble(118, this.oneof_double);
            if (this.has_oneof_enum)
                writer.writeEnum(119, this.oneof_enum);
            if (this.has_oneof_null_value)
                writer.writeEnum(120, this.oneof_null_value);
            if (this.has_optional_bool_wrapper)
                writer.writeMessage(201, this.optional_bool_wrapper, () => this.optional_bool_wrapper.serialize(writer));
            if (this.has_optional_int32_wrapper)
                writer.writeMessage(202, this.optional_int32_wrapper, () => this.optional_int32_wrapper.serialize(writer));
            if (this.has_optional_int64_wrapper)
                writer.writeMessage(203, this.optional_int64_wrapper, () => this.optional_int64_wrapper.serialize(writer));
            if (this.has_optional_uint32_wrapper)
                writer.writeMessage(204, this.optional_uint32_wrapper, () => this.optional_uint32_wrapper.serialize(writer));
            if (this.has_optional_uint64_wrapper)
                writer.writeMessage(205, this.optional_uint64_wrapper, () => this.optional_uint64_wrapper.serialize(writer));
            if (this.has_optional_float_wrapper)
                writer.writeMessage(206, this.optional_float_wrapper, () => this.optional_float_wrapper.serialize(writer));
            if (this.has_optional_double_wrapper)
                writer.writeMessage(207, this.optional_double_wrapper, () => this.optional_double_wrapper.serialize(writer));
            if (this.has_optional_string_wrapper)
                writer.writeMessage(208, this.optional_string_wrapper, () => this.optional_string_wrapper.serialize(writer));
            if (this.has_optional_bytes_wrapper)
                writer.writeMessage(209, this.optional_bytes_wrapper, () => this.optional_bytes_wrapper.serialize(writer));
            if (this.repeated_bool_wrapper.length)
                writer.writeRepeatedMessage(211, this.repeated_bool_wrapper, (item: dependency_6.google.protobuf.BoolValue) => item.serialize(writer));
            if (this.repeated_int32_wrapper.length)
                writer.writeRepeatedMessage(212, this.repeated_int32_wrapper, (item: dependency_6.google.protobuf.Int32Value) => item.serialize(writer));
            if (this.repeated_int64_wrapper.length)
                writer.writeRepeatedMessage(213, this.repeated_int64_wrapper, (item: dependency_6.google.protobuf.Int64Value) => item.serialize(writer));
            if (this.repeated_uint32_wrapper.length)
                writer.writeRepeatedMessage(214, this.repeated_uint32_wrapper, (item: dependency_6.google.protobuf.UInt32Value) => item.serialize(writer));
            if (this.repeated_uint64_wrapper.length)
                writer.writeRepeatedMessage(215, this.repeated_uint64_wrapper, (item: dependency_6.google.protobuf.UInt64Value) => item.serialize(writer));
            if (this.repeated_float_wrapper.length)
                writer.writeRepeatedMessage(216, this.repeated_float_wrapper, (item: dependency_6.google.protobuf.FloatValue) => item.serialize(writer));
            if (this.repeated_double_wrapper.length)
                writer.writeRepeatedMessage(217, this.repeated_double_wrapper, (item: dependency_6.google.protobuf.DoubleValue) => item.serialize(writer));
            if (this.repeated_string_wrapper.length)
                writer.writeRepeatedMessage(218, this.repeated_string_wrapper, (item: dependency_6.google.protobuf.StringValue) => item.serialize(writer));
            if (this.repeated_bytes_wrapper.length)
                writer.writeRepeatedMessage(219, this.repeated_bytes_wrapper, (item: dependency_6.google.protobuf.BytesValue) => item.serialize(writer));
            if (this.has_optional_duration)
                writer.writeMessage(301, this.optional_duration, () => this.optional_duration.serialize(writer));
            if (this.has_optional_timestamp)
                writer.writeMessage(302, this.optional_timestamp, () => this.optional_timestamp.serialize(writer));
            if (this.has_optional_field_mask)
                writer.writeMessage(303, this.optional_field_mask, () => this.optional_field_mask.serialize(writer));
            if (this.has_optional_struct)
                writer.writeMessage(304, this.optional_struct, () => this.optional_struct.serialize(writer));
            if (this.has_optional_any)
                writer.writeMessage(305, this.optional_any, () => this.optional_any.serialize(writer));
            if (this.has_optional_value)
                writer.writeMessage(306, this.optional_value, () => this.optional_value.serialize(writer));
            if (this.optional_null_value != dependency_4.google.protobuf.NullValue.NULL_VALUE)
                writer.writeEnum(307, this.optional_null_value);
            if (this.repeated_duration.length)
                writer.writeRepeatedMessage(311, this.repeated_duration, (item: dependency_2.google.protobuf.Duration) => item.serialize(writer));
            if (this.repeated_timestamp.length)
                writer.writeRepeatedMessage(312, this.repeated_timestamp, (item: dependency_5.google.protobuf.Timestamp) => item.serialize(writer));
            if (this.repeated_fieldmask.length)
                writer.writeRepeatedMessage(313, this.repeated_fieldmask, (item: dependency_3.google.protobuf.FieldMask) => item.serialize(writer));
            if (this.repeated_struct.length)
                writer.writeRepeatedMessage(324, this.repeated_struct, (item: dependency_4.google.protobuf.Struct) => item.serialize(writer));
            if (this.repeated_any.length)
                writer.writeRepeatedMessage(315, this.repeated_any, (item: dependency_1.google.protobuf.Any) => item.serialize(writer));
            if (this.repeated_value.length)
                writer.writeRepeatedMessage(316, this.repeated_value, (item: dependency_4.google.protobuf.Value) => item.serialize(writer));
            if (this.repeated_list_value.length)
                writer.writeRepeatedMessage(317, this.repeated_list_value, (item: dependency_4.google.protobuf.ListValue) => item.serialize(writer));
            if (this.fieldname1 != 0)
                writer.writeInt32(401, this.fieldname1);
            if (this.field_name2 != 0)
                writer.writeInt32(402, this.field_name2);
            if (this._field_name3 != 0)
                writer.writeInt32(403, this._field_name3);
            if (this.field__name4_ != 0)
                writer.writeInt32(404, this.field__name4_);
            if (this.field0name5 != 0)
                writer.writeInt32(405, this.field0name5);
            if (this.field_0_name6 != 0)
                writer.writeInt32(406, this.field_0_name6);
            if (this.fieldName7 != 0)
                writer.writeInt32(407, this.fieldName7);
            if (this.FieldName8 != 0)
                writer.writeInt32(408, this.FieldName8);
            if (this.field_Name9 != 0)
                writer.writeInt32(409, this.field_Name9);
            if (this.Field_Name10 != 0)
                writer.writeInt32(410, this.Field_Name10);
            if (this.FIELD_NAME11 != 0)
                writer.writeInt32(411, this.FIELD_NAME11);
            if (this.FIELD_name12 != 0)
                writer.writeInt32(412, this.FIELD_name12);
            if (this.__field_name13 != 0)
                writer.writeInt32(413, this.__field_name13);
            if (this.__Field_name14 != 0)
                writer.writeInt32(414, this.__Field_name14);
            if (this.field__name15 != 0)
                writer.writeInt32(415, this.field__name15);
            if (this.field__Name16 != 0)
                writer.writeInt32(416, this.field__Name16);
            if (this.field_name17__ != 0)
                writer.writeInt32(417, this.field_name17__);
            if (this.Field_name18__ != 0)
                writer.writeInt32(418, this.Field_name18__);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TestAllTypesProto3 {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TestAllTypesProto3();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.optional_int32 = reader.readInt32();
                        break;
                    case 2:
                        message.optional_int64 = reader.readInt64();
                        break;
                    case 3:
                        message.optional_uint32 = reader.readUint32();
                        break;
                    case 4:
                        message.optional_uint64 = reader.readUint64();
                        break;
                    case 5:
                        message.optional_sint32 = reader.readSint32();
                        break;
                    case 6:
                        message.optional_sint64 = reader.readSint64();
                        break;
                    case 7:
                        message.optional_fixed32 = reader.readFixed32();
                        break;
                    case 8:
                        message.optional_fixed64 = reader.readFixed64();
                        break;
                    case 9:
                        message.optional_sfixed32 = reader.readSfixed32();
                        break;
                    case 10:
                        message.optional_sfixed64 = reader.readSfixed64();
                        break;
                    case 11:
                        message.optional_float = reader.readFloat();
                        break;
                    case 12:
                        message.optional_double = reader.readDouble();
                        break;
                    case 13:
                        message.optional_bool = reader.readBool();
                        break;
                    case 14:
                        message.optional_string = reader.readString();
                        break;
                    case 15:
                        message.optional_bytes = reader.readBytes();
                        break;
                    case 18:
                        reader.readMessage(message.optional_nested_message, () => message.optional_nested_message = TestAllTypesProto3.NestedMessage.deserialize(reader));
                        break;
                    case 19:
                        reader.readMessage(message.optional_foreign_message, () => message.optional_foreign_message = ForeignMessage.deserialize(reader));
                        break;
                    case 21:
                        message.optional_nested_enum = reader.readEnum();
                        break;
                    case 22:
                        message.optional_foreign_enum = reader.readEnum();
                        break;
                    case 23:
                        message.optional_aliased_enum = reader.readEnum();
                        break;
                    case 24:
                        message.optional_string_piece = reader.readString();
                        break;
                    case 25:
                        message.optional_cord = reader.readString();
                        break;
                    case 27:
                        reader.readMessage(message.recursive_message, () => message.recursive_message = TestAllTypesProto3.deserialize(reader));
                        break;
                    case 31:
                        message.repeated_int32 = reader.readPackedInt32();
                        break;
                    case 32:
                        message.repeated_int64 = reader.readPackedInt64();
                        break;
                    case 33:
                        message.repeated_uint32 = reader.readPackedUint32();
                        break;
                    case 34:
                        message.repeated_uint64 = reader.readPackedUint64();
                        break;
                    case 35:
                        message.repeated_sint32 = reader.readPackedSint32();
                        break;
                    case 36:
                        message.repeated_sint64 = reader.readPackedSint64();
                        break;
                    case 37:
                        message.repeated_fixed32 = reader.readPackedFixed32();
                        break;
                    case 38:
                        message.repeated_fixed64 = reader.readPackedFixed64();
                        break;
                    case 39:
                        message.repeated_sfixed32 = reader.readPackedSfixed32();
                        break;
                    case 40:
                        message.repeated_sfixed64 = reader.readPackedSfixed64();
                        break;
                    case 41:
                        message.repeated_float = reader.readPackedFloat();
                        break;
                    case 42:
                        message.repeated_double = reader.readPackedDouble();
                        break;
                    case 43:
                        message.repeated_bool = reader.readPackedBool();
                        break;
                    case 44:
                        pb_1.Message.addToRepeatedField(message, 44, reader.readString());
                        break;
                    case 45:
                        pb_1.Message.addToRepeatedField(message, 45, reader.readBytes());
                        break;
                    case 48:
                        reader.readMessage(message.repeated_nested_message, () => pb_1.Message.addToRepeatedWrapperField(message, 48, TestAllTypesProto3.NestedMessage.deserialize(reader), TestAllTypesProto3.NestedMessage));
                        break;
                    case 49:
                        reader.readMessage(message.repeated_foreign_message, () => pb_1.Message.addToRepeatedWrapperField(message, 49, ForeignMessage.deserialize(reader), ForeignMessage));
                        break;
                    case 51:
                        message.repeated_nested_enum = reader.readPackedEnum();
                        break;
                    case 52:
                        message.repeated_foreign_enum = reader.readPackedEnum();
                        break;
                    case 54:
                        pb_1.Message.addToRepeatedField(message, 54, reader.readString());
                        break;
                    case 55:
                        pb_1.Message.addToRepeatedField(message, 55, reader.readString());
                        break;
                    case 75:
                        message.packed_int32 = reader.readPackedInt32();
                        break;
                    case 76:
                        message.packed_int64 = reader.readPackedInt64();
                        break;
                    case 77:
                        message.packed_uint32 = reader.readPackedUint32();
                        break;
                    case 78:
                        message.packed_uint64 = reader.readPackedUint64();
                        break;
                    case 79:
                        message.packed_sint32 = reader.readPackedSint32();
                        break;
                    case 80:
                        message.packed_sint64 = reader.readPackedSint64();
                        break;
                    case 81:
                        message.packed_fixed32 = reader.readPackedFixed32();
                        break;
                    case 82:
                        message.packed_fixed64 = reader.readPackedFixed64();
                        break;
                    case 83:
                        message.packed_sfixed32 = reader.readPackedSfixed32();
                        break;
                    case 84:
                        message.packed_sfixed64 = reader.readPackedSfixed64();
                        break;
                    case 85:
                        message.packed_float = reader.readPackedFloat();
                        break;
                    case 86:
                        message.packed_double = reader.readPackedDouble();
                        break;
                    case 87:
                        message.packed_bool = reader.readPackedBool();
                        break;
                    case 88:
                        message.packed_nested_enum = reader.readPackedEnum();
                        break;
                    case 89:
                        pb_1.Message.addToRepeatedField(message, 89, reader.readInt32());
                        break;
                    case 90:
                        pb_1.Message.addToRepeatedField(message, 90, reader.readInt64());
                        break;
                    case 91:
                        pb_1.Message.addToRepeatedField(message, 91, reader.readUint32());
                        break;
                    case 92:
                        pb_1.Message.addToRepeatedField(message, 92, reader.readUint64());
                        break;
                    case 93:
                        pb_1.Message.addToRepeatedField(message, 93, reader.readSint32());
                        break;
                    case 94:
                        pb_1.Message.addToRepeatedField(message, 94, reader.readSint64());
                        break;
                    case 95:
                        pb_1.Message.addToRepeatedField(message, 95, reader.readFixed32());
                        break;
                    case 96:
                        pb_1.Message.addToRepeatedField(message, 96, reader.readFixed64());
                        break;
                    case 97:
                        pb_1.Message.addToRepeatedField(message, 97, reader.readSfixed32());
                        break;
                    case 98:
                        pb_1.Message.addToRepeatedField(message, 98, reader.readSfixed64());
                        break;
                    case 99:
                        pb_1.Message.addToRepeatedField(message, 99, reader.readFloat());
                        break;
                    case 100:
                        pb_1.Message.addToRepeatedField(message, 100, reader.readDouble());
                        break;
                    case 101:
                        pb_1.Message.addToRepeatedField(message, 101, reader.readBool());
                        break;
                    case 102:
                        pb_1.Message.addToRepeatedField(message, 102, reader.readEnum());
                        break;
                    case 56:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_int32_int32 as any, reader, reader.readInt32, reader.readInt32));
                        break;
                    case 57:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_int64_int64 as any, reader, reader.readInt64, reader.readInt64));
                        break;
                    case 58:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_uint32_uint32 as any, reader, reader.readUint32, reader.readUint32));
                        break;
                    case 59:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_uint64_uint64 as any, reader, reader.readUint64, reader.readUint64));
                        break;
                    case 60:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_sint32_sint32 as any, reader, reader.readSint32, reader.readSint32));
                        break;
                    case 61:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_sint64_sint64 as any, reader, reader.readSint64, reader.readSint64));
                        break;
                    case 62:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_fixed32_fixed32 as any, reader, reader.readFixed32, reader.readFixed32));
                        break;
                    case 63:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_fixed64_fixed64 as any, reader, reader.readFixed64, reader.readFixed64));
                        break;
                    case 64:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_sfixed32_sfixed32 as any, reader, reader.readSfixed32, reader.readSfixed32));
                        break;
                    case 65:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_sfixed64_sfixed64 as any, reader, reader.readSfixed64, reader.readSfixed64));
                        break;
                    case 66:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_int32_float as any, reader, reader.readInt32, reader.readFloat));
                        break;
                    case 67:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_int32_double as any, reader, reader.readInt32, reader.readDouble));
                        break;
                    case 68:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_bool_bool as any, reader, reader.readBool, reader.readBool));
                        break;
                    case 69:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_string_string as any, reader, reader.readString, reader.readString));
                        break;
                    case 70:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_string_bytes as any, reader, reader.readString, reader.readBytes));
                        break;
                    case 71:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_string_nested_message as any, reader, reader.readString, () => {
                            let value;
                            reader.readMessage(message, () => value = TestAllTypesProto3.NestedMessage.deserialize(reader));
                            return value;
                        }));
                        break;
                    case 72:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_string_foreign_message as any, reader, reader.readString, () => {
                            let value;
                            reader.readMessage(message, () => value = ForeignMessage.deserialize(reader));
                            return value;
                        }));
                        break;
                    case 73:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_string_nested_enum as any, reader, reader.readString, reader.readEnum));
                        break;
                    case 74:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.map_string_foreign_enum as any, reader, reader.readString, reader.readEnum));
                        break;
                    case 111:
                        message.oneof_uint32 = reader.readUint32();
                        break;
                    case 112:
                        reader.readMessage(message.oneof_nested_message, () => message.oneof_nested_message = TestAllTypesProto3.NestedMessage.deserialize(reader));
                        break;
                    case 113:
                        message.oneof_string = reader.readString();
                        break;
                    case 114:
                        message.oneof_bytes = reader.readBytes();
                        break;
                    case 115:
                        message.oneof_bool = reader.readBool();
                        break;
                    case 116:
                        message.oneof_uint64 = reader.readUint64();
                        break;
                    case 117:
                        message.oneof_float = reader.readFloat();
                        break;
                    case 118:
                        message.oneof_double = reader.readDouble();
                        break;
                    case 119:
                        message.oneof_enum = reader.readEnum();
                        break;
                    case 120:
                        message.oneof_null_value = reader.readEnum();
                        break;
                    case 201:
                        reader.readMessage(message.optional_bool_wrapper, () => message.optional_bool_wrapper = dependency_6.google.protobuf.BoolValue.deserialize(reader));
                        break;
                    case 202:
                        reader.readMessage(message.optional_int32_wrapper, () => message.optional_int32_wrapper = dependency_6.google.protobuf.Int32Value.deserialize(reader));
                        break;
                    case 203:
                        reader.readMessage(message.optional_int64_wrapper, () => message.optional_int64_wrapper = dependency_6.google.protobuf.Int64Value.deserialize(reader));
                        break;
                    case 204:
                        reader.readMessage(message.optional_uint32_wrapper, () => message.optional_uint32_wrapper = dependency_6.google.protobuf.UInt32Value.deserialize(reader));
                        break;
                    case 205:
                        reader.readMessage(message.optional_uint64_wrapper, () => message.optional_uint64_wrapper = dependency_6.google.protobuf.UInt64Value.deserialize(reader));
                        break;
                    case 206:
                        reader.readMessage(message.optional_float_wrapper, () => message.optional_float_wrapper = dependency_6.google.protobuf.FloatValue.deserialize(reader));
                        break;
                    case 207:
                        reader.readMessage(message.optional_double_wrapper, () => message.optional_double_wrapper = dependency_6.google.protobuf.DoubleValue.deserialize(reader));
                        break;
                    case 208:
                        reader.readMessage(message.optional_string_wrapper, () => message.optional_string_wrapper = dependency_6.google.protobuf.StringValue.deserialize(reader));
                        break;
                    case 209:
                        reader.readMessage(message.optional_bytes_wrapper, () => message.optional_bytes_wrapper = dependency_6.google.protobuf.BytesValue.deserialize(reader));
                        break;
                    case 211:
                        reader.readMessage(message.repeated_bool_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 211, dependency_6.google.protobuf.BoolValue.deserialize(reader), dependency_6.google.protobuf.BoolValue));
                        break;
                    case 212:
                        reader.readMessage(message.repeated_int32_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 212, dependency_6.google.protobuf.Int32Value.deserialize(reader), dependency_6.google.protobuf.Int32Value));
                        break;
                    case 213:
                        reader.readMessage(message.repeated_int64_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 213, dependency_6.google.protobuf.Int64Value.deserialize(reader), dependency_6.google.protobuf.Int64Value));
                        break;
                    case 214:
                        reader.readMessage(message.repeated_uint32_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 214, dependency_6.google.protobuf.UInt32Value.deserialize(reader), dependency_6.google.protobuf.UInt32Value));
                        break;
                    case 215:
                        reader.readMessage(message.repeated_uint64_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 215, dependency_6.google.protobuf.UInt64Value.deserialize(reader), dependency_6.google.protobuf.UInt64Value));
                        break;
                    case 216:
                        reader.readMessage(message.repeated_float_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 216, dependency_6.google.protobuf.FloatValue.deserialize(reader), dependency_6.google.protobuf.FloatValue));
                        break;
                    case 217:
                        reader.readMessage(message.repeated_double_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 217, dependency_6.google.protobuf.DoubleValue.deserialize(reader), dependency_6.google.protobuf.DoubleValue));
                        break;
                    case 218:
                        reader.readMessage(message.repeated_string_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 218, dependency_6.google.protobuf.StringValue.deserialize(reader), dependency_6.google.protobuf.StringValue));
                        break;
                    case 219:
                        reader.readMessage(message.repeated_bytes_wrapper, () => pb_1.Message.addToRepeatedWrapperField(message, 219, dependency_6.google.protobuf.BytesValue.deserialize(reader), dependency_6.google.protobuf.BytesValue));
                        break;
                    case 301:
                        reader.readMessage(message.optional_duration, () => message.optional_duration = dependency_2.google.protobuf.Duration.deserialize(reader));
                        break;
                    case 302:
                        reader.readMessage(message.optional_timestamp, () => message.optional_timestamp = dependency_5.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 303:
                        reader.readMessage(message.optional_field_mask, () => message.optional_field_mask = dependency_3.google.protobuf.FieldMask.deserialize(reader));
                        break;
                    case 304:
                        reader.readMessage(message.optional_struct, () => message.optional_struct = dependency_4.google.protobuf.Struct.deserialize(reader));
                        break;
                    case 305:
                        reader.readMessage(message.optional_any, () => message.optional_any = dependency_1.google.protobuf.Any.deserialize(reader));
                        break;
                    case 306:
                        reader.readMessage(message.optional_value, () => message.optional_value = dependency_4.google.protobuf.Value.deserialize(reader));
                        break;
                    case 307:
                        message.optional_null_value = reader.readEnum();
                        break;
                    case 311:
                        reader.readMessage(message.repeated_duration, () => pb_1.Message.addToRepeatedWrapperField(message, 311, dependency_2.google.protobuf.Duration.deserialize(reader), dependency_2.google.protobuf.Duration));
                        break;
                    case 312:
                        reader.readMessage(message.repeated_timestamp, () => pb_1.Message.addToRepeatedWrapperField(message, 312, dependency_5.google.protobuf.Timestamp.deserialize(reader), dependency_5.google.protobuf.Timestamp));
                        break;
                    case 313:
                        reader.readMessage(message.repeated_fieldmask, () => pb_1.Message.addToRepeatedWrapperField(message, 313, dependency_3.google.protobuf.FieldMask.deserialize(reader), dependency_3.google.protobuf.FieldMask));
                        break;
                    case 324:
                        reader.readMessage(message.repeated_struct, () => pb_1.Message.addToRepeatedWrapperField(message, 324, dependency_4.google.protobuf.Struct.deserialize(reader), dependency_4.google.protobuf.Struct));
                        break;
                    case 315:
                        reader.readMessage(message.repeated_any, () => pb_1.Message.addToRepeatedWrapperField(message, 315, dependency_1.google.protobuf.Any.deserialize(reader), dependency_1.google.protobuf.Any));
                        break;
                    case 316:
                        reader.readMessage(message.repeated_value, () => pb_1.Message.addToRepeatedWrapperField(message, 316, dependency_4.google.protobuf.Value.deserialize(reader), dependency_4.google.protobuf.Value));
                        break;
                    case 317:
                        reader.readMessage(message.repeated_list_value, () => pb_1.Message.addToRepeatedWrapperField(message, 317, dependency_4.google.protobuf.ListValue.deserialize(reader), dependency_4.google.protobuf.ListValue));
                        break;
                    case 401:
                        message.fieldname1 = reader.readInt32();
                        break;
                    case 402:
                        message.field_name2 = reader.readInt32();
                        break;
                    case 403:
                        message._field_name3 = reader.readInt32();
                        break;
                    case 404:
                        message.field__name4_ = reader.readInt32();
                        break;
                    case 405:
                        message.field0name5 = reader.readInt32();
                        break;
                    case 406:
                        message.field_0_name6 = reader.readInt32();
                        break;
                    case 407:
                        message.fieldName7 = reader.readInt32();
                        break;
                    case 408:
                        message.FieldName8 = reader.readInt32();
                        break;
                    case 409:
                        message.field_Name9 = reader.readInt32();
                        break;
                    case 410:
                        message.Field_Name10 = reader.readInt32();
                        break;
                    case 411:
                        message.FIELD_NAME11 = reader.readInt32();
                        break;
                    case 412:
                        message.FIELD_name12 = reader.readInt32();
                        break;
                    case 413:
                        message.__field_name13 = reader.readInt32();
                        break;
                    case 414:
                        message.__Field_name14 = reader.readInt32();
                        break;
                    case 415:
                        message.field__name15 = reader.readInt32();
                        break;
                    case 416:
                        message.field__Name16 = reader.readInt32();
                        break;
                    case 417:
                        message.field_name17__ = reader.readInt32();
                        break;
                    case 418:
                        message.Field_name18__ = reader.readInt32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TestAllTypesProto3 {
            return TestAllTypesProto3.deserialize(bytes);
        }
    }
    export namespace TestAllTypesProto3 {
        export enum NestedEnum {
            FOO = 0,
            BAR = 1,
            BAZ = 2,
            NEG = -1
        }
        export enum AliasedEnum {
            ALIAS_FOO = 0,
            ALIAS_BAR = 1,
            ALIAS_BAZ = 2,
            MOO = 2,
            moo = 2,
            bAz = 2
        }
        export class NestedMessage extends pb_1.Message {
            #one_of_decls: number[][] = [];
            constructor(data?: any[] | {
                a?: number;
                corecursive?: TestAllTypesProto3;
            }) {
                super();
                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
                if (!Array.isArray(data) && typeof data == "object") {
                    if ("a" in data && data.a != undefined) {
                        this.a = data.a;
                    }
                    if ("corecursive" in data && data.corecursive != undefined) {
                        this.corecursive = data.corecursive;
                    }
                }
            }
            get a() {
                return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
            }
            set a(value: number) {
                pb_1.Message.setField(this, 1, value);
            }
            get corecursive() {
                return pb_1.Message.getWrapperField(this, TestAllTypesProto3, 2) as TestAllTypesProto3;
            }
            set corecursive(value: TestAllTypesProto3) {
                pb_1.Message.setWrapperField(this, 2, value);
            }
            get has_corecursive() {
                return pb_1.Message.getField(this, 2) != null;
            }
            static fromObject(data: {
                a?: number;
                corecursive?: ReturnType<typeof TestAllTypesProto3.prototype.toObject>;
            }): NestedMessage {
                const message = new NestedMessage({});
                if (data.a != null) {
                    message.a = data.a;
                }
                if (data.corecursive != null) {
                    message.corecursive = TestAllTypesProto3.fromObject(data.corecursive);
                }
                return message;
            }
            toObject() {
                const data: {
                    a?: number;
                    corecursive?: ReturnType<typeof TestAllTypesProto3.prototype.toObject>;
                } = {};
                if (this.a != null) {
                    data.a = this.a;
                }
                if (this.corecursive != null) {
                    data.corecursive = this.corecursive.toObject();
                }
                return data;
            }
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
                const writer = w || new pb_1.BinaryWriter();
                if (this.a != 0)
                    writer.writeInt32(1, this.a);
                if (this.has_corecursive)
                    writer.writeMessage(2, this.corecursive, () => this.corecursive.serialize(writer));
                if (!w)
                    return writer.getResultBuffer();
            }
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): NestedMessage {
                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new NestedMessage();
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            message.a = reader.readInt32();
                            break;
                        case 2:
                            reader.readMessage(message.corecursive, () => message.corecursive = TestAllTypesProto3.deserialize(reader));
                            break;
                        default: reader.skipField();
                    }
                }
                return message;
            }
            serializeBinary(): Uint8Array {
                return this.serialize();
            }
            static deserializeBinary(bytes: Uint8Array): NestedMessage {
                return NestedMessage.deserialize(bytes);
            }
        }
    }
    export class ForeignMessage extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            c?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("c" in data && data.c != undefined) {
                    this.c = data.c;
                }
            }
        }
        get c() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set c(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            c?: number;
        }): ForeignMessage {
            const message = new ForeignMessage({});
            if (data.c != null) {
                message.c = data.c;
            }
            return message;
        }
        toObject() {
            const data: {
                c?: number;
            } = {};
            if (this.c != null) {
                data.c = this.c;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.c != 0)
                writer.writeInt32(1, this.c);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ForeignMessage {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ForeignMessage();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.c = reader.readInt32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ForeignMessage {
            return ForeignMessage.deserialize(bytes);
        }
    }
    export class NullHypothesisProto3 extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): NullHypothesisProto3 {
            const message = new NullHypothesisProto3({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): NullHypothesisProto3 {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new NullHypothesisProto3();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): NullHypothesisProto3 {
            return NullHypothesisProto3.deserialize(bytes);
        }
    }
    export class EnumOnlyProto3 extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): EnumOnlyProto3 {
            const message = new EnumOnlyProto3({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EnumOnlyProto3 {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EnumOnlyProto3();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): EnumOnlyProto3 {
            return EnumOnlyProto3.deserialize(bytes);
        }
    }
    export namespace EnumOnlyProto3 {
        export enum Bool {
            kFalse = 0,
            kTrue = 1
        }
    }
}

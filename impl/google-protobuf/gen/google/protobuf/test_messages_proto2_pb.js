// source: google/protobuf/test_messages_proto2.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.protobuf_test_messages.proto2.EnumOnlyProto2', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.EnumOnlyProto2.Bool', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.ForeignEnumProto2', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.ForeignMessageProto2', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.NullHypothesisProto2', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.OneStringProto2', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.ProtoWithKeywords', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.TestAllTypesProto2', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.TestAllTypesProto2.OneofFieldCase', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.UnknownToTestAllTypes', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup', null, global);
goog.exportSymbol('proto.protobuf_test_messages.proto2.extensionInt32', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 419, proto.protobuf_test_messages.proto2.TestAllTypesProto2.repeatedFields_, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_);
};
goog.inherits(proto.protobuf_test_messages.proto2.TestAllTypesProto2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.displayName = 'proto.protobuf_test_messages.proto2.TestAllTypesProto2';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.displayName = 'proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.displayName = 'proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.displayName = 'proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.displayName = 'proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.displayName = 'proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.ForeignMessageProto2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.ForeignMessageProto2.displayName = 'proto.protobuf_test_messages.proto2.ForeignMessageProto2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.repeatedFields_, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.UnknownToTestAllTypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.displayName = 'proto.protobuf_test_messages.proto2.UnknownToTestAllTypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.displayName = 'proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.NullHypothesisProto2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.NullHypothesisProto2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.NullHypothesisProto2.displayName = 'proto.protobuf_test_messages.proto2.NullHypothesisProto2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.EnumOnlyProto2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.EnumOnlyProto2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.EnumOnlyProto2.displayName = 'proto.protobuf_test_messages.proto2.EnumOnlyProto2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.OneStringProto2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.OneStringProto2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.OneStringProto2.displayName = 'proto.protobuf_test_messages.proto2.OneStringProto2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf_test_messages.proto2.ProtoWithKeywords.repeatedFields_, null);
};
goog.inherits(proto.protobuf_test_messages.proto2.ProtoWithKeywords, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf_test_messages.proto2.ProtoWithKeywords.displayName = 'proto.protobuf_test_messages.proto2.ProtoWithKeywords';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.repeatedFields_ = [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,51,52,54,55,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_ = [[111,112,113,114,115,116,117,118,119]];

/**
 * @enum {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.OneofFieldCase = {
  ONEOF_FIELD_NOT_SET: 0,
  ONEOF_UINT32: 111,
  ONEOF_NESTED_MESSAGE: 112,
  ONEOF_STRING: 113,
  ONEOF_BYTES: 114,
  ONEOF_BOOL: 115,
  ONEOF_UINT64: 116,
  ONEOF_FLOAT: 117,
  ONEOF_DOUBLE: 118,
  ONEOF_ENUM: 119
};

/**
 * @return {proto.protobuf_test_messages.proto2.TestAllTypesProto2.OneofFieldCase}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofFieldCase = function() {
  return /** @type {proto.protobuf_test_messages.proto2.TestAllTypesProto2.OneofFieldCase} */(jspb.Message.computeOneofCase(this, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalInt32: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    optionalInt64: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    optionalUint32: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    optionalUint64: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    optionalSint32: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    optionalSint64: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    optionalFixed32: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    optionalFixed64: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    optionalSfixed32: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    optionalSfixed64: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    optionalFloat: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    optionalDouble: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    optionalBool: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    optionalString: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    optionalBytes: msg.getOptionalBytes_asB64(),
    optionalNestedMessage: (f = msg.getOptionalNestedMessage()) && proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.toObject(includeInstance, f),
    optionalForeignMessage: (f = msg.getOptionalForeignMessage()) && proto.protobuf_test_messages.proto2.ForeignMessageProto2.toObject(includeInstance, f),
    optionalNestedEnum: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    optionalForeignEnum: (f = jspb.Message.getField(msg, 22)) == null ? undefined : f,
    optionalStringPiece: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
    optionalCord: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    recursiveMessage: (f = msg.getRecursiveMessage()) && proto.protobuf_test_messages.proto2.TestAllTypesProto2.toObject(includeInstance, f),
    repeatedInt32List: (f = jspb.Message.getRepeatedField(msg, 31)) == null ? undefined : f,
    repeatedInt64List: (f = jspb.Message.getRepeatedField(msg, 32)) == null ? undefined : f,
    repeatedUint32List: (f = jspb.Message.getRepeatedField(msg, 33)) == null ? undefined : f,
    repeatedUint64List: (f = jspb.Message.getRepeatedField(msg, 34)) == null ? undefined : f,
    repeatedSint32List: (f = jspb.Message.getRepeatedField(msg, 35)) == null ? undefined : f,
    repeatedSint64List: (f = jspb.Message.getRepeatedField(msg, 36)) == null ? undefined : f,
    repeatedFixed32List: (f = jspb.Message.getRepeatedField(msg, 37)) == null ? undefined : f,
    repeatedFixed64List: (f = jspb.Message.getRepeatedField(msg, 38)) == null ? undefined : f,
    repeatedSfixed32List: (f = jspb.Message.getRepeatedField(msg, 39)) == null ? undefined : f,
    repeatedSfixed64List: (f = jspb.Message.getRepeatedField(msg, 40)) == null ? undefined : f,
    repeatedFloatList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 41)) == null ? undefined : f,
    repeatedDoubleList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 42)) == null ? undefined : f,
    repeatedBoolList: (f = jspb.Message.getRepeatedBooleanField(msg, 43)) == null ? undefined : f,
    repeatedStringList: (f = jspb.Message.getRepeatedField(msg, 44)) == null ? undefined : f,
    repeatedBytesList: msg.getRepeatedBytesList_asB64(),
    repeatedNestedMessageList: jspb.Message.toObjectList(msg.getRepeatedNestedMessageList(),
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.toObject, includeInstance),
    repeatedForeignMessageList: jspb.Message.toObjectList(msg.getRepeatedForeignMessageList(),
    proto.protobuf_test_messages.proto2.ForeignMessageProto2.toObject, includeInstance),
    repeatedNestedEnumList: (f = jspb.Message.getRepeatedField(msg, 51)) == null ? undefined : f,
    repeatedForeignEnumList: (f = jspb.Message.getRepeatedField(msg, 52)) == null ? undefined : f,
    repeatedStringPieceList: (f = jspb.Message.getRepeatedField(msg, 54)) == null ? undefined : f,
    repeatedCordList: (f = jspb.Message.getRepeatedField(msg, 55)) == null ? undefined : f,
    packedInt32List: (f = jspb.Message.getRepeatedField(msg, 75)) == null ? undefined : f,
    packedInt64List: (f = jspb.Message.getRepeatedField(msg, 76)) == null ? undefined : f,
    packedUint32List: (f = jspb.Message.getRepeatedField(msg, 77)) == null ? undefined : f,
    packedUint64List: (f = jspb.Message.getRepeatedField(msg, 78)) == null ? undefined : f,
    packedSint32List: (f = jspb.Message.getRepeatedField(msg, 79)) == null ? undefined : f,
    packedSint64List: (f = jspb.Message.getRepeatedField(msg, 80)) == null ? undefined : f,
    packedFixed32List: (f = jspb.Message.getRepeatedField(msg, 81)) == null ? undefined : f,
    packedFixed64List: (f = jspb.Message.getRepeatedField(msg, 82)) == null ? undefined : f,
    packedSfixed32List: (f = jspb.Message.getRepeatedField(msg, 83)) == null ? undefined : f,
    packedSfixed64List: (f = jspb.Message.getRepeatedField(msg, 84)) == null ? undefined : f,
    packedFloatList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 85)) == null ? undefined : f,
    packedDoubleList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 86)) == null ? undefined : f,
    packedBoolList: (f = jspb.Message.getRepeatedBooleanField(msg, 87)) == null ? undefined : f,
    packedNestedEnumList: (f = jspb.Message.getRepeatedField(msg, 88)) == null ? undefined : f,
    unpackedInt32List: (f = jspb.Message.getRepeatedField(msg, 89)) == null ? undefined : f,
    unpackedInt64List: (f = jspb.Message.getRepeatedField(msg, 90)) == null ? undefined : f,
    unpackedUint32List: (f = jspb.Message.getRepeatedField(msg, 91)) == null ? undefined : f,
    unpackedUint64List: (f = jspb.Message.getRepeatedField(msg, 92)) == null ? undefined : f,
    unpackedSint32List: (f = jspb.Message.getRepeatedField(msg, 93)) == null ? undefined : f,
    unpackedSint64List: (f = jspb.Message.getRepeatedField(msg, 94)) == null ? undefined : f,
    unpackedFixed32List: (f = jspb.Message.getRepeatedField(msg, 95)) == null ? undefined : f,
    unpackedFixed64List: (f = jspb.Message.getRepeatedField(msg, 96)) == null ? undefined : f,
    unpackedSfixed32List: (f = jspb.Message.getRepeatedField(msg, 97)) == null ? undefined : f,
    unpackedSfixed64List: (f = jspb.Message.getRepeatedField(msg, 98)) == null ? undefined : f,
    unpackedFloatList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 99)) == null ? undefined : f,
    unpackedDoubleList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 100)) == null ? undefined : f,
    unpackedBoolList: (f = jspb.Message.getRepeatedBooleanField(msg, 101)) == null ? undefined : f,
    unpackedNestedEnumList: (f = jspb.Message.getRepeatedField(msg, 102)) == null ? undefined : f,
    mapInt32Int32Map: (f = msg.getMapInt32Int32Map()) ? f.toObject(includeInstance, undefined) : [],
    mapInt64Int64Map: (f = msg.getMapInt64Int64Map()) ? f.toObject(includeInstance, undefined) : [],
    mapUint32Uint32Map: (f = msg.getMapUint32Uint32Map()) ? f.toObject(includeInstance, undefined) : [],
    mapUint64Uint64Map: (f = msg.getMapUint64Uint64Map()) ? f.toObject(includeInstance, undefined) : [],
    mapSint32Sint32Map: (f = msg.getMapSint32Sint32Map()) ? f.toObject(includeInstance, undefined) : [],
    mapSint64Sint64Map: (f = msg.getMapSint64Sint64Map()) ? f.toObject(includeInstance, undefined) : [],
    mapFixed32Fixed32Map: (f = msg.getMapFixed32Fixed32Map()) ? f.toObject(includeInstance, undefined) : [],
    mapFixed64Fixed64Map: (f = msg.getMapFixed64Fixed64Map()) ? f.toObject(includeInstance, undefined) : [],
    mapSfixed32Sfixed32Map: (f = msg.getMapSfixed32Sfixed32Map()) ? f.toObject(includeInstance, undefined) : [],
    mapSfixed64Sfixed64Map: (f = msg.getMapSfixed64Sfixed64Map()) ? f.toObject(includeInstance, undefined) : [],
    mapInt32FloatMap: (f = msg.getMapInt32FloatMap()) ? f.toObject(includeInstance, undefined) : [],
    mapInt32DoubleMap: (f = msg.getMapInt32DoubleMap()) ? f.toObject(includeInstance, undefined) : [],
    mapBoolBoolMap: (f = msg.getMapBoolBoolMap()) ? f.toObject(includeInstance, undefined) : [],
    mapStringStringMap: (f = msg.getMapStringStringMap()) ? f.toObject(includeInstance, undefined) : [],
    mapStringBytesMap: (f = msg.getMapStringBytesMap()) ? f.toObject(includeInstance, undefined) : [],
    mapStringNestedMessageMap: (f = msg.getMapStringNestedMessageMap()) ? f.toObject(includeInstance, proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.toObject) : [],
    mapStringForeignMessageMap: (f = msg.getMapStringForeignMessageMap()) ? f.toObject(includeInstance, proto.protobuf_test_messages.proto2.ForeignMessageProto2.toObject) : [],
    mapStringNestedEnumMap: (f = msg.getMapStringNestedEnumMap()) ? f.toObject(includeInstance, undefined) : [],
    mapStringForeignEnumMap: (f = msg.getMapStringForeignEnumMap()) ? f.toObject(includeInstance, undefined) : [],
    oneofUint32: (f = jspb.Message.getField(msg, 111)) == null ? undefined : f,
    oneofNestedMessage: (f = msg.getOneofNestedMessage()) && proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.toObject(includeInstance, f),
    oneofString: (f = jspb.Message.getField(msg, 113)) == null ? undefined : f,
    oneofBytes: msg.getOneofBytes_asB64(),
    oneofBool: (f = jspb.Message.getBooleanField(msg, 115)) == null ? undefined : f,
    oneofUint64: (f = jspb.Message.getField(msg, 116)) == null ? undefined : f,
    oneofFloat: (f = jspb.Message.getOptionalFloatingPointField(msg, 117)) == null ? undefined : f,
    oneofDouble: (f = jspb.Message.getOptionalFloatingPointField(msg, 118)) == null ? undefined : f,
    oneofEnum: (f = jspb.Message.getField(msg, 119)) == null ? undefined : f,
    data: (f = msg.getData()) && proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.toObject(includeInstance, f),
    defaultInt32: jspb.Message.getFieldWithDefault(msg, 241, -123456789),
    defaultInt64: jspb.Message.getFieldWithDefault(msg, 242, -9123456789123456789),
    defaultUint32: jspb.Message.getFieldWithDefault(msg, 243, 2123456789),
    defaultUint64: jspb.Message.getFieldWithDefault(msg, 244, -8323287284586094827),
    defaultSint32: jspb.Message.getFieldWithDefault(msg, 245, -123456789),
    defaultSint64: jspb.Message.getFieldWithDefault(msg, 246, -9123456789123456789),
    defaultFixed32: jspb.Message.getFieldWithDefault(msg, 247, 2123456789),
    defaultFixed64: jspb.Message.getFieldWithDefault(msg, 248, -8323287284586094827),
    defaultSfixed32: jspb.Message.getFieldWithDefault(msg, 249, -123456789),
    defaultSfixed64: jspb.Message.getFieldWithDefault(msg, 250, -9123456789123456789),
    defaultFloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 251, 9.0E9),
    defaultDouble: jspb.Message.getFloatingPointFieldWithDefault(msg, 252, 7.0E22),
    defaultBool: jspb.Message.getBooleanFieldWithDefault(msg, 253, true),
    defaultString: jspb.Message.getFieldWithDefault(msg, 254, "Rosebud"),
    defaultBytes: msg.getDefaultBytes_asB64(),
    fieldname1: (f = jspb.Message.getField(msg, 401)) == null ? undefined : f,
    fieldName2: (f = jspb.Message.getField(msg, 402)) == null ? undefined : f,
    fieldName3: (f = jspb.Message.getField(msg, 403)) == null ? undefined : f,
    fieldName4: (f = jspb.Message.getField(msg, 404)) == null ? undefined : f,
    field0name5: (f = jspb.Message.getField(msg, 405)) == null ? undefined : f,
    field0Name6: (f = jspb.Message.getField(msg, 406)) == null ? undefined : f,
    fieldname7: (f = jspb.Message.getField(msg, 407)) == null ? undefined : f,
    fieldname8: (f = jspb.Message.getField(msg, 408)) == null ? undefined : f,
    fieldName9: (f = jspb.Message.getField(msg, 409)) == null ? undefined : f,
    fieldName10: (f = jspb.Message.getField(msg, 410)) == null ? undefined : f,
    fieldName11: (f = jspb.Message.getField(msg, 411)) == null ? undefined : f,
    fieldName12: (f = jspb.Message.getField(msg, 412)) == null ? undefined : f,
    fieldName13: (f = jspb.Message.getField(msg, 413)) == null ? undefined : f,
    fieldName14: (f = jspb.Message.getField(msg, 414)) == null ? undefined : f,
    fieldName15: (f = jspb.Message.getField(msg, 415)) == null ? undefined : f,
    fieldName16: (f = jspb.Message.getField(msg, 416)) == null ? undefined : f,
    fieldName17: (f = jspb.Message.getField(msg, 417)) == null ? undefined : f,
    fieldName18: (f = jspb.Message.getField(msg, 418)) == null ? undefined : f
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.extensions, proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.TestAllTypesProto2;
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOptionalInt32(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOptionalInt64(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOptionalUint32(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOptionalUint64(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setOptionalSint32(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setOptionalSint64(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setOptionalFixed32(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setOptionalFixed64(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setOptionalSfixed32(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setOptionalSfixed64(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOptionalFloat(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOptionalDouble(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOptionalBool(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalString(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOptionalBytes(value);
      break;
    case 18:
      var value = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage;
      reader.readMessage(value,proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.deserializeBinaryFromReader);
      msg.setOptionalNestedMessage(value);
      break;
    case 19:
      var value = new proto.protobuf_test_messages.proto2.ForeignMessageProto2;
      reader.readMessage(value,proto.protobuf_test_messages.proto2.ForeignMessageProto2.deserializeBinaryFromReader);
      msg.setOptionalForeignMessage(value);
      break;
    case 21:
      var value = /** @type {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} */ (reader.readEnum());
      msg.setOptionalNestedEnum(value);
      break;
    case 22:
      var value = /** @type {!proto.protobuf_test_messages.proto2.ForeignEnumProto2} */ (reader.readEnum());
      msg.setOptionalForeignEnum(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalStringPiece(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalCord(value);
      break;
    case 27:
      var value = new proto.protobuf_test_messages.proto2.TestAllTypesProto2;
      reader.readMessage(value,proto.protobuf_test_messages.proto2.TestAllTypesProto2.deserializeBinaryFromReader);
      msg.setRecursiveMessage(value);
      break;
    case 31:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedInt32(values[i]);
      }
      break;
    case 32:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedInt64(values[i]);
      }
      break;
    case 33:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedUint32(values[i]);
      }
      break;
    case 34:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedUint64(values[i]);
      }
      break;
    case 35:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedSint32(values[i]);
      }
      break;
    case 36:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedSint64(values[i]);
      }
      break;
    case 37:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFixed32(values[i]);
      }
      break;
    case 38:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFixed64(values[i]);
      }
      break;
    case 39:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed32() : [reader.readSfixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedSfixed32(values[i]);
      }
      break;
    case 40:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed64() : [reader.readSfixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedSfixed64(values[i]);
      }
      break;
    case 41:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedFloat(values[i]);
      }
      break;
    case 42:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedDouble(values[i]);
      }
      break;
    case 43:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedBool(values[i]);
      }
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedString(value);
      break;
    case 45:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addRepeatedBytes(value);
      break;
    case 48:
      var value = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage;
      reader.readMessage(value,proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.deserializeBinaryFromReader);
      msg.addRepeatedNestedMessage(value);
      break;
    case 49:
      var value = new proto.protobuf_test_messages.proto2.ForeignMessageProto2;
      reader.readMessage(value,proto.protobuf_test_messages.proto2.ForeignMessageProto2.deserializeBinaryFromReader);
      msg.addRepeatedForeignMessage(value);
      break;
    case 51:
      var values = /** @type {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedNestedEnum(values[i]);
      }
      break;
    case 52:
      var values = /** @type {!Array<!proto.protobuf_test_messages.proto2.ForeignEnumProto2>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedForeignEnum(values[i]);
      }
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedStringPiece(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.addRepeatedCord(value);
      break;
    case 75:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedInt32(values[i]);
      }
      break;
    case 76:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedInt64(values[i]);
      }
      break;
    case 77:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedUint32(values[i]);
      }
      break;
    case 78:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedUint64(values[i]);
      }
      break;
    case 79:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSint32(values[i]);
      }
      break;
    case 80:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSint64(values[i]);
      }
      break;
    case 81:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedFixed32(values[i]);
      }
      break;
    case 82:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedFixed64(values[i]);
      }
      break;
    case 83:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed32() : [reader.readSfixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSfixed32(values[i]);
      }
      break;
    case 84:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed64() : [reader.readSfixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedSfixed64(values[i]);
      }
      break;
    case 85:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedFloat(values[i]);
      }
      break;
    case 86:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedDouble(values[i]);
      }
      break;
    case 87:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedBool(values[i]);
      }
      break;
    case 88:
      var values = /** @type {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPackedNestedEnum(values[i]);
      }
      break;
    case 89:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedInt32(values[i]);
      }
      break;
    case 90:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedInt64(values[i]);
      }
      break;
    case 91:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedUint32(values[i]);
      }
      break;
    case 92:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedUint64(values[i]);
      }
      break;
    case 93:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedSint32(values[i]);
      }
      break;
    case 94:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedSint64(values[i]);
      }
      break;
    case 95:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed32() : [reader.readFixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedFixed32(values[i]);
      }
      break;
    case 96:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFixed64() : [reader.readFixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedFixed64(values[i]);
      }
      break;
    case 97:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed32() : [reader.readSfixed32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedSfixed32(values[i]);
      }
      break;
    case 98:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSfixed64() : [reader.readSfixed64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedSfixed64(values[i]);
      }
      break;
    case 99:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedFloat(values[i]);
      }
      break;
    case 100:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedDouble(values[i]);
      }
      break;
    case 101:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedBool(values[i]);
      }
      break;
    case 102:
      var values = /** @type {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnpackedNestedEnum(values[i]);
      }
      break;
    case 56:
      var value = msg.getMapInt32Int32Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 57:
      var value = msg.getMapInt64Int64Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);
         });
      break;
    case 58:
      var value = msg.getMapUint32Uint32Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32, null, 0, 0);
         });
      break;
    case 59:
      var value = msg.getMapUint64Uint64Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readUint64, null, 0, 0);
         });
      break;
    case 60:
      var value = msg.getMapSint32Sint32Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readSint32, jspb.BinaryReader.prototype.readSint32, null, 0, 0);
         });
      break;
    case 61:
      var value = msg.getMapSint64Sint64Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readSint64, jspb.BinaryReader.prototype.readSint64, null, 0, 0);
         });
      break;
    case 62:
      var value = msg.getMapFixed32Fixed32Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readFixed32, jspb.BinaryReader.prototype.readFixed32, null, 0, 0);
         });
      break;
    case 63:
      var value = msg.getMapFixed64Fixed64Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readFixed64, jspb.BinaryReader.prototype.readFixed64, null, 0, 0);
         });
      break;
    case 64:
      var value = msg.getMapSfixed32Sfixed32Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readSfixed32, jspb.BinaryReader.prototype.readSfixed32, null, 0, 0);
         });
      break;
    case 65:
      var value = msg.getMapSfixed64Sfixed64Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readSfixed64, jspb.BinaryReader.prototype.readSfixed64, null, 0, 0);
         });
      break;
    case 66:
      var value = msg.getMapInt32FloatMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readFloat, null, 0, 0.0);
         });
      break;
    case 67:
      var value = msg.getMapInt32DoubleMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readDouble, null, 0, 0.0);
         });
      break;
    case 68:
      var value = msg.getMapBoolBoolMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readBool, jspb.BinaryReader.prototype.readBool, null, false, false);
         });
      break;
    case 69:
      var value = msg.getMapStringStringMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 70:
      var value = msg.getMapStringBytesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    case 71:
      var value = msg.getMapStringNestedMessageMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.deserializeBinaryFromReader, "", new proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage());
         });
      break;
    case 72:
      var value = msg.getMapStringForeignMessageMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.protobuf_test_messages.proto2.ForeignMessageProto2.deserializeBinaryFromReader, "", new proto.protobuf_test_messages.proto2.ForeignMessageProto2());
         });
      break;
    case 73:
      var value = msg.getMapStringNestedEnumMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readEnum, null, "", 0);
         });
      break;
    case 74:
      var value = msg.getMapStringForeignEnumMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readEnum, null, "", 0);
         });
      break;
    case 111:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOneofUint32(value);
      break;
    case 112:
      var value = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage;
      reader.readMessage(value,proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.deserializeBinaryFromReader);
      msg.setOneofNestedMessage(value);
      break;
    case 113:
      var value = /** @type {string} */ (reader.readString());
      msg.setOneofString(value);
      break;
    case 114:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOneofBytes(value);
      break;
    case 115:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOneofBool(value);
      break;
    case 116:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOneofUint64(value);
      break;
    case 117:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOneofFloat(value);
      break;
    case 118:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneofDouble(value);
      break;
    case 119:
      var value = /** @type {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} */ (reader.readEnum());
      msg.setOneofEnum(value);
      break;
    case 201:
      var value = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data;
      reader.readGroup(201, value,proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 241:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDefaultInt32(value);
      break;
    case 242:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDefaultInt64(value);
      break;
    case 243:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultUint32(value);
      break;
    case 244:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDefaultUint64(value);
      break;
    case 245:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setDefaultSint32(value);
      break;
    case 246:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setDefaultSint64(value);
      break;
    case 247:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setDefaultFixed32(value);
      break;
    case 248:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setDefaultFixed64(value);
      break;
    case 249:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setDefaultSfixed32(value);
      break;
    case 250:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setDefaultSfixed64(value);
      break;
    case 251:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDefaultFloat(value);
      break;
    case 252:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDefaultDouble(value);
      break;
    case 253:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultBool(value);
      break;
    case 254:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultString(value);
      break;
    case 255:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDefaultBytes(value);
      break;
    case 401:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldname1(value);
      break;
    case 402:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName2(value);
      break;
    case 403:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName3(value);
      break;
    case 404:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName4(value);
      break;
    case 405:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField0name5(value);
      break;
    case 406:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField0Name6(value);
      break;
    case 407:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldname7(value);
      break;
    case 408:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldname8(value);
      break;
    case 409:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName9(value);
      break;
    case 410:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName10(value);
      break;
    case 411:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName11(value);
      break;
    case 412:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName12(value);
      break;
    case 413:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName13(value);
      break;
    case 414:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName14(value);
      break;
    case 415:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName15(value);
      break;
    case 416:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName16(value);
      break;
    case 417:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName17(value);
      break;
    case 418:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldName18(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_test_messages.proto2.TestAllTypesProto2.extensionsBinary,
        proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getExtension,
        proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeSint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeSint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFixed32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFixed64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeSfixed32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeSfixed64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = message.getOptionalNestedMessage();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.serializeBinaryToWriter
    );
  }
  f = message.getOptionalForeignMessage();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.protobuf_test_messages.proto2.ForeignMessageProto2.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeEnum(
      21,
      f
    );
  }
  f = /** @type {!proto.protobuf_test_messages.proto2.ForeignEnumProto2} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getRecursiveMessage();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedInt32List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      31,
      f
    );
  }
  f = message.getRepeatedInt64List();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      32,
      f
    );
  }
  f = message.getRepeatedUint32List();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      33,
      f
    );
  }
  f = message.getRepeatedUint64List();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      34,
      f
    );
  }
  f = message.getRepeatedSint32List();
  if (f.length > 0) {
    writer.writeRepeatedSint32(
      35,
      f
    );
  }
  f = message.getRepeatedSint64List();
  if (f.length > 0) {
    writer.writeRepeatedSint64(
      36,
      f
    );
  }
  f = message.getRepeatedFixed32List();
  if (f.length > 0) {
    writer.writeRepeatedFixed32(
      37,
      f
    );
  }
  f = message.getRepeatedFixed64List();
  if (f.length > 0) {
    writer.writeRepeatedFixed64(
      38,
      f
    );
  }
  f = message.getRepeatedSfixed32List();
  if (f.length > 0) {
    writer.writeRepeatedSfixed32(
      39,
      f
    );
  }
  f = message.getRepeatedSfixed64List();
  if (f.length > 0) {
    writer.writeRepeatedSfixed64(
      40,
      f
    );
  }
  f = message.getRepeatedFloatList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      41,
      f
    );
  }
  f = message.getRepeatedDoubleList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      42,
      f
    );
  }
  f = message.getRepeatedBoolList();
  if (f.length > 0) {
    writer.writeRepeatedBool(
      43,
      f
    );
  }
  f = message.getRepeatedStringList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      44,
      f
    );
  }
  f = message.getRepeatedBytesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      45,
      f
    );
  }
  f = message.getRepeatedNestedMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      48,
      f,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedForeignMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      49,
      f,
      proto.protobuf_test_messages.proto2.ForeignMessageProto2.serializeBinaryToWriter
    );
  }
  f = message.getRepeatedNestedEnumList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      51,
      f
    );
  }
  f = message.getRepeatedForeignEnumList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      52,
      f
    );
  }
  f = message.getRepeatedStringPieceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      54,
      f
    );
  }
  f = message.getRepeatedCordList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      55,
      f
    );
  }
  f = message.getPackedInt32List();
  if (f.length > 0) {
    writer.writePackedInt32(
      75,
      f
    );
  }
  f = message.getPackedInt64List();
  if (f.length > 0) {
    writer.writePackedInt64(
      76,
      f
    );
  }
  f = message.getPackedUint32List();
  if (f.length > 0) {
    writer.writePackedUint32(
      77,
      f
    );
  }
  f = message.getPackedUint64List();
  if (f.length > 0) {
    writer.writePackedUint64(
      78,
      f
    );
  }
  f = message.getPackedSint32List();
  if (f.length > 0) {
    writer.writePackedSint32(
      79,
      f
    );
  }
  f = message.getPackedSint64List();
  if (f.length > 0) {
    writer.writePackedSint64(
      80,
      f
    );
  }
  f = message.getPackedFixed32List();
  if (f.length > 0) {
    writer.writePackedFixed32(
      81,
      f
    );
  }
  f = message.getPackedFixed64List();
  if (f.length > 0) {
    writer.writePackedFixed64(
      82,
      f
    );
  }
  f = message.getPackedSfixed32List();
  if (f.length > 0) {
    writer.writePackedSfixed32(
      83,
      f
    );
  }
  f = message.getPackedSfixed64List();
  if (f.length > 0) {
    writer.writePackedSfixed64(
      84,
      f
    );
  }
  f = message.getPackedFloatList();
  if (f.length > 0) {
    writer.writePackedFloat(
      85,
      f
    );
  }
  f = message.getPackedDoubleList();
  if (f.length > 0) {
    writer.writePackedDouble(
      86,
      f
    );
  }
  f = message.getPackedBoolList();
  if (f.length > 0) {
    writer.writePackedBool(
      87,
      f
    );
  }
  f = message.getPackedNestedEnumList();
  if (f.length > 0) {
    writer.writePackedEnum(
      88,
      f
    );
  }
  f = message.getUnpackedInt32List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      89,
      f
    );
  }
  f = message.getUnpackedInt64List();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      90,
      f
    );
  }
  f = message.getUnpackedUint32List();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      91,
      f
    );
  }
  f = message.getUnpackedUint64List();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      92,
      f
    );
  }
  f = message.getUnpackedSint32List();
  if (f.length > 0) {
    writer.writeRepeatedSint32(
      93,
      f
    );
  }
  f = message.getUnpackedSint64List();
  if (f.length > 0) {
    writer.writeRepeatedSint64(
      94,
      f
    );
  }
  f = message.getUnpackedFixed32List();
  if (f.length > 0) {
    writer.writeRepeatedFixed32(
      95,
      f
    );
  }
  f = message.getUnpackedFixed64List();
  if (f.length > 0) {
    writer.writeRepeatedFixed64(
      96,
      f
    );
  }
  f = message.getUnpackedSfixed32List();
  if (f.length > 0) {
    writer.writeRepeatedSfixed32(
      97,
      f
    );
  }
  f = message.getUnpackedSfixed64List();
  if (f.length > 0) {
    writer.writeRepeatedSfixed64(
      98,
      f
    );
  }
  f = message.getUnpackedFloatList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      99,
      f
    );
  }
  f = message.getUnpackedDoubleList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      100,
      f
    );
  }
  f = message.getUnpackedBoolList();
  if (f.length > 0) {
    writer.writeRepeatedBool(
      101,
      f
    );
  }
  f = message.getUnpackedNestedEnumList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      102,
      f
    );
  }
  f = message.getMapInt32Int32Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(56, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getMapInt64Int64Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(57, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);
  }
  f = message.getMapUint32Uint32Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(58, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = message.getMapUint64Uint64Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(59, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeUint64);
  }
  f = message.getMapSint32Sint32Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(60, writer, jspb.BinaryWriter.prototype.writeSint32, jspb.BinaryWriter.prototype.writeSint32);
  }
  f = message.getMapSint64Sint64Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(61, writer, jspb.BinaryWriter.prototype.writeSint64, jspb.BinaryWriter.prototype.writeSint64);
  }
  f = message.getMapFixed32Fixed32Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(62, writer, jspb.BinaryWriter.prototype.writeFixed32, jspb.BinaryWriter.prototype.writeFixed32);
  }
  f = message.getMapFixed64Fixed64Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(63, writer, jspb.BinaryWriter.prototype.writeFixed64, jspb.BinaryWriter.prototype.writeFixed64);
  }
  f = message.getMapSfixed32Sfixed32Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(64, writer, jspb.BinaryWriter.prototype.writeSfixed32, jspb.BinaryWriter.prototype.writeSfixed32);
  }
  f = message.getMapSfixed64Sfixed64Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(65, writer, jspb.BinaryWriter.prototype.writeSfixed64, jspb.BinaryWriter.prototype.writeSfixed64);
  }
  f = message.getMapInt32FloatMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(66, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeFloat);
  }
  f = message.getMapInt32DoubleMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(67, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeDouble);
  }
  f = message.getMapBoolBoolMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(68, writer, jspb.BinaryWriter.prototype.writeBool, jspb.BinaryWriter.prototype.writeBool);
  }
  f = message.getMapStringStringMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(69, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMapStringBytesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(70, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
  f = message.getMapStringNestedMessageMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(71, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.serializeBinaryToWriter);
  }
  f = message.getMapStringForeignMessageMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(72, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.protobuf_test_messages.proto2.ForeignMessageProto2.serializeBinaryToWriter);
  }
  f = message.getMapStringNestedEnumMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(73, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = message.getMapStringForeignEnumMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(74, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 111));
  if (f != null) {
    writer.writeUint32(
      111,
      f
    );
  }
  f = message.getOneofNestedMessage();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 113));
  if (f != null) {
    writer.writeString(
      113,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 114));
  if (f != null) {
    writer.writeBytes(
      114,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 115));
  if (f != null) {
    writer.writeBool(
      115,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 116));
  if (f != null) {
    writer.writeUint64(
      116,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 117));
  if (f != null) {
    writer.writeFloat(
      117,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 118));
  if (f != null) {
    writer.writeDouble(
      118,
      f
    );
  }
  f = /** @type {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} */ (jspb.Message.getField(message, 119));
  if (f != null) {
    writer.writeEnum(
      119,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeGroup(
      201,
      f,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 241));
  if (f != null) {
    writer.writeInt32(
      241,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 242));
  if (f != null) {
    writer.writeInt64(
      242,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 243));
  if (f != null) {
    writer.writeUint32(
      243,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 244));
  if (f != null) {
    writer.writeUint64(
      244,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 245));
  if (f != null) {
    writer.writeSint32(
      245,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 246));
  if (f != null) {
    writer.writeSint64(
      246,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 247));
  if (f != null) {
    writer.writeFixed32(
      247,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 248));
  if (f != null) {
    writer.writeFixed64(
      248,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 249));
  if (f != null) {
    writer.writeSfixed32(
      249,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 250));
  if (f != null) {
    writer.writeSfixed64(
      250,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 251));
  if (f != null) {
    writer.writeFloat(
      251,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 252));
  if (f != null) {
    writer.writeDouble(
      252,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 253));
  if (f != null) {
    writer.writeBool(
      253,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 254));
  if (f != null) {
    writer.writeString(
      254,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 255));
  if (f != null) {
    writer.writeBytes(
      255,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 401));
  if (f != null) {
    writer.writeInt32(
      401,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 402));
  if (f != null) {
    writer.writeInt32(
      402,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 403));
  if (f != null) {
    writer.writeInt32(
      403,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 404));
  if (f != null) {
    writer.writeInt32(
      404,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 405));
  if (f != null) {
    writer.writeInt32(
      405,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 406));
  if (f != null) {
    writer.writeInt32(
      406,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 407));
  if (f != null) {
    writer.writeInt32(
      407,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 408));
  if (f != null) {
    writer.writeInt32(
      408,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 409));
  if (f != null) {
    writer.writeInt32(
      409,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 410));
  if (f != null) {
    writer.writeInt32(
      410,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 411));
  if (f != null) {
    writer.writeInt32(
      411,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 412));
  if (f != null) {
    writer.writeInt32(
      412,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 413));
  if (f != null) {
    writer.writeInt32(
      413,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 414));
  if (f != null) {
    writer.writeInt32(
      414,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 415));
  if (f != null) {
    writer.writeInt32(
      415,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 416));
  if (f != null) {
    writer.writeInt32(
      416,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 417));
  if (f != null) {
    writer.writeInt32(
      417,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 418));
  if (f != null) {
    writer.writeInt32(
      418,
      f
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.extensionsBinary, proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getExtension);
};


/**
 * @enum {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum = {
  FOO: 0,
  BAR: 1,
  BAZ: 2,
  NEG: -1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    corecursive: (f = msg.getCorecursive()) && proto.protobuf_test_messages.proto2.TestAllTypesProto2.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage;
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    case 2:
      var value = new proto.protobuf_test_messages.proto2.TestAllTypesProto2;
      reader.readMessage(value,proto.protobuf_test_messages.proto2.TestAllTypesProto2.deserializeBinaryFromReader);
      msg.setCorecursive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCorecursive();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.setA = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.clearA = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.hasA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestAllTypesProto2 corecursive = 2;
 * @return {?proto.protobuf_test_messages.proto2.TestAllTypesProto2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.getCorecursive = function() {
  return /** @type{?proto.protobuf_test_messages.proto2.TestAllTypesProto2} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_test_messages.proto2.TestAllTypesProto2, 2));
};


/**
 * @param {?proto.protobuf_test_messages.proto2.TestAllTypesProto2|undefined} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} returns this
*/
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.setCorecursive = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.clearCorecursive = function() {
  return this.setCorecursive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage.prototype.hasCorecursive = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupInt32: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    groupUint32: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data;
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 202:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupInt32(value);
      break;
    case 203:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGroupUint32(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      202,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      203,
      f
    );
  }
};


/**
 * optional int32 group_int32 = 202;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.getGroupInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.setGroupInt32 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.clearGroupInt32 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.hasGroupInt32 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 group_uint32 = 203;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.getGroupUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.setGroupUint32 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.clearGroupUint32 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data.prototype.hasGroupUint32 = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensions, proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect;
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensionsBinary,
        proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.prototype.getExtension,
        proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensionsBinary, proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.toObject = function(includeInstance, msg) {
  var f, obj = {
    str: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1;
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.messageSetExtension = new jspb.ExtensionFieldInfo(
    1547769,
    {messageSetExtension: 0},
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.toObject),
    0);

proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensionsBinary[1547769] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.serializeBinaryToWriter,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensions[1547769] = proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.messageSetExtension;

/**
 * optional string str = 25;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.prototype.getStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.prototype.setStr = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.prototype.clearStr = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.prototype.hasStr = function() {
  return jspb.Message.getField(this, 25) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.messageSetExtension = new jspb.ExtensionFieldInfo(
    1547769,
    {messageSetExtension: 0},
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.toObject),
    0);

proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensionsBinary[1547769] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.serializeBinaryToWriter,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensions[1547769] = proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension1.messageSetExtension;




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.toObject = function(includeInstance, msg) {
  var f, obj = {
    i: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2;
  return proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setI(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.messageSetExtension = new jspb.ExtensionFieldInfo(
    4135312,
    {messageSetExtension: 0},
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.toObject),
    0);

proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensionsBinary[4135312] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.serializeBinaryToWriter,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensions[4135312] = proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.messageSetExtension;

/**
 * optional int32 i = 9;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.prototype.getI = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.prototype.setI = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.prototype.clearI = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.prototype.hasI = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageSetExtension`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.messageSetExtension = new jspb.ExtensionFieldInfo(
    4135312,
    {messageSetExtension: 0},
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.toObject),
    0);

proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensionsBinary[4135312] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.messageSetExtension,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessageSet,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.serializeBinaryToWriter,
    proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrect.extensions[4135312] = proto.protobuf_test_messages.proto2.TestAllTypesProto2.MessageSetCorrectExtension2.messageSetExtension;

/**
 * optional int32 optional_int32 = 1;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalInt32 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalInt32 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalInt32 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 optional_int64 = 2;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalInt64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalInt64 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalInt64 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalInt64 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 optional_uint32 = 3;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalUint32 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalUint32 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalUint32 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 optional_uint64 = 4;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalUint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalUint64 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalUint64 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalUint64 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional sint32 optional_sint32 = 5;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalSint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalSint32 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalSint32 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalSint32 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional sint64 optional_sint64 = 6;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalSint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalSint64 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalSint64 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalSint64 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional fixed32 optional_fixed32 = 7;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalFixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalFixed32 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalFixed32 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalFixed32 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional fixed64 optional_fixed64 = 8;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalFixed64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalFixed64 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalFixed64 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalFixed64 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional sfixed32 optional_sfixed32 = 9;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalSfixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalSfixed32 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalSfixed32 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalSfixed32 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional sfixed64 optional_sfixed64 = 10;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalSfixed64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalSfixed64 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalSfixed64 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalSfixed64 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float optional_float = 11;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalFloat = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalFloat = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalFloat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double optional_double = 12;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalDouble = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalDouble = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalDouble = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool optional_bool = 13;
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalBool = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalBool = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalBool = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string optional_string = 14;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalString = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalString = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalString = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bytes optional_bytes = 15;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes optional_bytes = 15;
 * This is a type-conversion wrapper around `getOptionalBytes()`
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOptionalBytes()));
};


/**
 * optional bytes optional_bytes = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOptionalBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOptionalBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalBytes = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalBytes = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalBytes = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional NestedMessage optional_nested_message = 18;
 * @return {?proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalNestedMessage = function() {
  return /** @type{?proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage, 18));
};


/**
 * @param {?proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage|undefined} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
*/
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalNestedMessage = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalNestedMessage = function() {
  return this.setOptionalNestedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalNestedMessage = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ForeignMessageProto2 optional_foreign_message = 19;
 * @return {?proto.protobuf_test_messages.proto2.ForeignMessageProto2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalForeignMessage = function() {
  return /** @type{?proto.protobuf_test_messages.proto2.ForeignMessageProto2} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_test_messages.proto2.ForeignMessageProto2, 19));
};


/**
 * @param {?proto.protobuf_test_messages.proto2.ForeignMessageProto2|undefined} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
*/
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalForeignMessage = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalForeignMessage = function() {
  return this.setOptionalForeignMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalForeignMessage = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional NestedEnum optional_nested_enum = 21;
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalNestedEnum = function() {
  return /** @type {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalNestedEnum = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalNestedEnum = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalNestedEnum = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional ForeignEnumProto2 optional_foreign_enum = 22;
 * @return {!proto.protobuf_test_messages.proto2.ForeignEnumProto2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalForeignEnum = function() {
  return /** @type {!proto.protobuf_test_messages.proto2.ForeignEnumProto2} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {!proto.protobuf_test_messages.proto2.ForeignEnumProto2} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalForeignEnum = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalForeignEnum = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalForeignEnum = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string optional_string_piece = 24;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalStringPiece = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalStringPiece = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalStringPiece = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalStringPiece = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string optional_cord = 25;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOptionalCord = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOptionalCord = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOptionalCord = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOptionalCord = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional TestAllTypesProto2 recursive_message = 27;
 * @return {?proto.protobuf_test_messages.proto2.TestAllTypesProto2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRecursiveMessage = function() {
  return /** @type{?proto.protobuf_test_messages.proto2.TestAllTypesProto2} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_test_messages.proto2.TestAllTypesProto2, 27));
};


/**
 * @param {?proto.protobuf_test_messages.proto2.TestAllTypesProto2|undefined} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
*/
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRecursiveMessage = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRecursiveMessage = function() {
  return this.setRecursiveMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasRecursiveMessage = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * repeated int32 repeated_int32 = 31;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 31));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedInt32List = function(value) {
  return jspb.Message.setField(this, 31, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 31, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedInt32List = function() {
  return this.setRepeatedInt32List([]);
};


/**
 * repeated int64 repeated_int64 = 32;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedInt64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 32));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedInt64List = function(value) {
  return jspb.Message.setField(this, 32, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedInt64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 32, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedInt64List = function() {
  return this.setRepeatedInt64List([]);
};


/**
 * repeated uint32 repeated_uint32 = 33;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedUint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 33));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedUint32List = function(value) {
  return jspb.Message.setField(this, 33, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedUint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 33, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedUint32List = function() {
  return this.setRepeatedUint32List([]);
};


/**
 * repeated uint64 repeated_uint64 = 34;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedUint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 34));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedUint64List = function(value) {
  return jspb.Message.setField(this, 34, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedUint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 34, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedUint64List = function() {
  return this.setRepeatedUint64List([]);
};


/**
 * repeated sint32 repeated_sint32 = 35;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedSint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 35));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedSint32List = function(value) {
  return jspb.Message.setField(this, 35, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedSint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 35, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedSint32List = function() {
  return this.setRepeatedSint32List([]);
};


/**
 * repeated sint64 repeated_sint64 = 36;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedSint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 36));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedSint64List = function(value) {
  return jspb.Message.setField(this, 36, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedSint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 36, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedSint64List = function() {
  return this.setRepeatedSint64List([]);
};


/**
 * repeated fixed32 repeated_fixed32 = 37;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedFixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 37));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedFixed32List = function(value) {
  return jspb.Message.setField(this, 37, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedFixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 37, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedFixed32List = function() {
  return this.setRepeatedFixed32List([]);
};


/**
 * repeated fixed64 repeated_fixed64 = 38;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedFixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 38));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedFixed64List = function(value) {
  return jspb.Message.setField(this, 38, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedFixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 38, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedFixed64List = function() {
  return this.setRepeatedFixed64List([]);
};


/**
 * repeated sfixed32 repeated_sfixed32 = 39;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedSfixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 39));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedSfixed32List = function(value) {
  return jspb.Message.setField(this, 39, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedSfixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 39, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedSfixed32List = function() {
  return this.setRepeatedSfixed32List([]);
};


/**
 * repeated sfixed64 repeated_sfixed64 = 40;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedSfixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 40));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedSfixed64List = function(value) {
  return jspb.Message.setField(this, 40, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedSfixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 40, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedSfixed64List = function() {
  return this.setRepeatedSfixed64List([]);
};


/**
 * repeated float repeated_float = 41;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedFloatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 41));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedFloatList = function(value) {
  return jspb.Message.setField(this, 41, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedFloat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 41, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedFloatList = function() {
  return this.setRepeatedFloatList([]);
};


/**
 * repeated double repeated_double = 42;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedDoubleList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 42));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedDoubleList = function(value) {
  return jspb.Message.setField(this, 42, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedDouble = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 42, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedDoubleList = function() {
  return this.setRepeatedDoubleList([]);
};


/**
 * repeated bool repeated_bool = 43;
 * @return {!Array<boolean>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedBoolList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 43));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedBoolList = function(value) {
  return jspb.Message.setField(this, 43, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedBool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 43, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedBoolList = function() {
  return this.setRepeatedBoolList([]);
};


/**
 * repeated string repeated_string = 44;
 * @return {!Array<string>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedStringList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 44));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedStringList = function(value) {
  return jspb.Message.setField(this, 44, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedString = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 44, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedStringList = function() {
  return this.setRepeatedStringList([]);
};


/**
 * repeated bytes repeated_bytes = 45;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedBytesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 45));
};


/**
 * repeated bytes repeated_bytes = 45;
 * This is a type-conversion wrapper around `getRepeatedBytesList()`
 * @return {!Array<string>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedBytesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getRepeatedBytesList()));
};


/**
 * repeated bytes repeated_bytes = 45;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRepeatedBytesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedBytesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getRepeatedBytesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedBytesList = function(value) {
  return jspb.Message.setField(this, 45, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedBytes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 45, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedBytesList = function() {
  return this.setRepeatedBytesList([]);
};


/**
 * repeated NestedMessage repeated_nested_message = 48;
 * @return {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedNestedMessageList = function() {
  return /** @type{!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage, 48));
};


/**
 * @param {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
*/
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedNestedMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 48, value);
};


/**
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedNestedMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 48, opt_value, proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedNestedMessageList = function() {
  return this.setRepeatedNestedMessageList([]);
};


/**
 * repeated ForeignMessageProto2 repeated_foreign_message = 49;
 * @return {!Array<!proto.protobuf_test_messages.proto2.ForeignMessageProto2>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedForeignMessageList = function() {
  return /** @type{!Array<!proto.protobuf_test_messages.proto2.ForeignMessageProto2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf_test_messages.proto2.ForeignMessageProto2, 49));
};


/**
 * @param {!Array<!proto.protobuf_test_messages.proto2.ForeignMessageProto2>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
*/
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedForeignMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 49, value);
};


/**
 * @param {!proto.protobuf_test_messages.proto2.ForeignMessageProto2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.ForeignMessageProto2}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedForeignMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 49, opt_value, proto.protobuf_test_messages.proto2.ForeignMessageProto2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedForeignMessageList = function() {
  return this.setRepeatedForeignMessageList([]);
};


/**
 * repeated NestedEnum repeated_nested_enum = 51;
 * @return {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedNestedEnumList = function() {
  return /** @type {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} */ (jspb.Message.getRepeatedField(this, 51));
};


/**
 * @param {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedNestedEnumList = function(value) {
  return jspb.Message.setField(this, 51, value || []);
};


/**
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedNestedEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 51, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedNestedEnumList = function() {
  return this.setRepeatedNestedEnumList([]);
};


/**
 * repeated ForeignEnumProto2 repeated_foreign_enum = 52;
 * @return {!Array<!proto.protobuf_test_messages.proto2.ForeignEnumProto2>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedForeignEnumList = function() {
  return /** @type {!Array<!proto.protobuf_test_messages.proto2.ForeignEnumProto2>} */ (jspb.Message.getRepeatedField(this, 52));
};


/**
 * @param {!Array<!proto.protobuf_test_messages.proto2.ForeignEnumProto2>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedForeignEnumList = function(value) {
  return jspb.Message.setField(this, 52, value || []);
};


/**
 * @param {!proto.protobuf_test_messages.proto2.ForeignEnumProto2} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedForeignEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 52, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedForeignEnumList = function() {
  return this.setRepeatedForeignEnumList([]);
};


/**
 * repeated string repeated_string_piece = 54;
 * @return {!Array<string>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedStringPieceList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 54));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedStringPieceList = function(value) {
  return jspb.Message.setField(this, 54, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedStringPiece = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 54, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedStringPieceList = function() {
  return this.setRepeatedStringPieceList([]);
};


/**
 * repeated string repeated_cord = 55;
 * @return {!Array<string>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getRepeatedCordList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 55));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setRepeatedCordList = function(value) {
  return jspb.Message.setField(this, 55, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addRepeatedCord = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 55, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearRepeatedCordList = function() {
  return this.setRepeatedCordList([]);
};


/**
 * repeated int32 packed_int32 = 75;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 75));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedInt32List = function(value) {
  return jspb.Message.setField(this, 75, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 75, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedInt32List = function() {
  return this.setPackedInt32List([]);
};


/**
 * repeated int64 packed_int64 = 76;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedInt64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 76));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedInt64List = function(value) {
  return jspb.Message.setField(this, 76, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedInt64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 76, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedInt64List = function() {
  return this.setPackedInt64List([]);
};


/**
 * repeated uint32 packed_uint32 = 77;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedUint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 77));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedUint32List = function(value) {
  return jspb.Message.setField(this, 77, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedUint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 77, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedUint32List = function() {
  return this.setPackedUint32List([]);
};


/**
 * repeated uint64 packed_uint64 = 78;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedUint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 78));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedUint64List = function(value) {
  return jspb.Message.setField(this, 78, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedUint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 78, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedUint64List = function() {
  return this.setPackedUint64List([]);
};


/**
 * repeated sint32 packed_sint32 = 79;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedSint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 79));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedSint32List = function(value) {
  return jspb.Message.setField(this, 79, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedSint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 79, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedSint32List = function() {
  return this.setPackedSint32List([]);
};


/**
 * repeated sint64 packed_sint64 = 80;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedSint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 80));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedSint64List = function(value) {
  return jspb.Message.setField(this, 80, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedSint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 80, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedSint64List = function() {
  return this.setPackedSint64List([]);
};


/**
 * repeated fixed32 packed_fixed32 = 81;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedFixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 81));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedFixed32List = function(value) {
  return jspb.Message.setField(this, 81, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedFixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 81, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedFixed32List = function() {
  return this.setPackedFixed32List([]);
};


/**
 * repeated fixed64 packed_fixed64 = 82;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedFixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 82));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedFixed64List = function(value) {
  return jspb.Message.setField(this, 82, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedFixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 82, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedFixed64List = function() {
  return this.setPackedFixed64List([]);
};


/**
 * repeated sfixed32 packed_sfixed32 = 83;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedSfixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 83));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedSfixed32List = function(value) {
  return jspb.Message.setField(this, 83, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedSfixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 83, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedSfixed32List = function() {
  return this.setPackedSfixed32List([]);
};


/**
 * repeated sfixed64 packed_sfixed64 = 84;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedSfixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 84));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedSfixed64List = function(value) {
  return jspb.Message.setField(this, 84, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedSfixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 84, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedSfixed64List = function() {
  return this.setPackedSfixed64List([]);
};


/**
 * repeated float packed_float = 85;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedFloatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 85));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedFloatList = function(value) {
  return jspb.Message.setField(this, 85, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedFloat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 85, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedFloatList = function() {
  return this.setPackedFloatList([]);
};


/**
 * repeated double packed_double = 86;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedDoubleList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 86));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedDoubleList = function(value) {
  return jspb.Message.setField(this, 86, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedDouble = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 86, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedDoubleList = function() {
  return this.setPackedDoubleList([]);
};


/**
 * repeated bool packed_bool = 87;
 * @return {!Array<boolean>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedBoolList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 87));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedBoolList = function(value) {
  return jspb.Message.setField(this, 87, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedBool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 87, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedBoolList = function() {
  return this.setPackedBoolList([]);
};


/**
 * repeated NestedEnum packed_nested_enum = 88;
 * @return {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getPackedNestedEnumList = function() {
  return /** @type {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} */ (jspb.Message.getRepeatedField(this, 88));
};


/**
 * @param {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setPackedNestedEnumList = function(value) {
  return jspb.Message.setField(this, 88, value || []);
};


/**
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addPackedNestedEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 88, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearPackedNestedEnumList = function() {
  return this.setPackedNestedEnumList([]);
};


/**
 * repeated int32 unpacked_int32 = 89;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 89));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedInt32List = function(value) {
  return jspb.Message.setField(this, 89, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 89, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedInt32List = function() {
  return this.setUnpackedInt32List([]);
};


/**
 * repeated int64 unpacked_int64 = 90;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedInt64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 90));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedInt64List = function(value) {
  return jspb.Message.setField(this, 90, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedInt64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 90, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedInt64List = function() {
  return this.setUnpackedInt64List([]);
};


/**
 * repeated uint32 unpacked_uint32 = 91;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedUint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 91));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedUint32List = function(value) {
  return jspb.Message.setField(this, 91, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedUint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 91, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedUint32List = function() {
  return this.setUnpackedUint32List([]);
};


/**
 * repeated uint64 unpacked_uint64 = 92;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedUint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 92));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedUint64List = function(value) {
  return jspb.Message.setField(this, 92, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedUint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 92, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedUint64List = function() {
  return this.setUnpackedUint64List([]);
};


/**
 * repeated sint32 unpacked_sint32 = 93;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedSint32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 93));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedSint32List = function(value) {
  return jspb.Message.setField(this, 93, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedSint32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 93, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedSint32List = function() {
  return this.setUnpackedSint32List([]);
};


/**
 * repeated sint64 unpacked_sint64 = 94;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedSint64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 94));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedSint64List = function(value) {
  return jspb.Message.setField(this, 94, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedSint64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 94, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedSint64List = function() {
  return this.setUnpackedSint64List([]);
};


/**
 * repeated fixed32 unpacked_fixed32 = 95;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedFixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 95));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedFixed32List = function(value) {
  return jspb.Message.setField(this, 95, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedFixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 95, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedFixed32List = function() {
  return this.setUnpackedFixed32List([]);
};


/**
 * repeated fixed64 unpacked_fixed64 = 96;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedFixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 96));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedFixed64List = function(value) {
  return jspb.Message.setField(this, 96, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedFixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 96, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedFixed64List = function() {
  return this.setUnpackedFixed64List([]);
};


/**
 * repeated sfixed32 unpacked_sfixed32 = 97;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedSfixed32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 97));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedSfixed32List = function(value) {
  return jspb.Message.setField(this, 97, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedSfixed32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 97, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedSfixed32List = function() {
  return this.setUnpackedSfixed32List([]);
};


/**
 * repeated sfixed64 unpacked_sfixed64 = 98;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedSfixed64List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 98));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedSfixed64List = function(value) {
  return jspb.Message.setField(this, 98, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedSfixed64 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 98, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedSfixed64List = function() {
  return this.setUnpackedSfixed64List([]);
};


/**
 * repeated float unpacked_float = 99;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedFloatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 99));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedFloatList = function(value) {
  return jspb.Message.setField(this, 99, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedFloat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 99, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedFloatList = function() {
  return this.setUnpackedFloatList([]);
};


/**
 * repeated double unpacked_double = 100;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedDoubleList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 100));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedDoubleList = function(value) {
  return jspb.Message.setField(this, 100, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedDouble = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 100, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedDoubleList = function() {
  return this.setUnpackedDoubleList([]);
};


/**
 * repeated bool unpacked_bool = 101;
 * @return {!Array<boolean>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedBoolList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 101));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedBoolList = function(value) {
  return jspb.Message.setField(this, 101, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedBool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 101, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedBoolList = function() {
  return this.setUnpackedBoolList([]);
};


/**
 * repeated NestedEnum unpacked_nested_enum = 102;
 * @return {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getUnpackedNestedEnumList = function() {
  return /** @type {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} */ (jspb.Message.getRepeatedField(this, 102));
};


/**
 * @param {!Array<!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setUnpackedNestedEnumList = function(value) {
  return jspb.Message.setField(this, 102, value || []);
};


/**
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.addUnpackedNestedEnum = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 102, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearUnpackedNestedEnumList = function() {
  return this.setUnpackedNestedEnumList([]);
};


/**
 * map<int32, int32> map_int32_int32 = 56;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapInt32Int32Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 56, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapInt32Int32Map = function() {
  this.getMapInt32Int32Map().clear();
  return this;
};


/**
 * map<int64, int64> map_int64_int64 = 57;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapInt64Int64Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 57, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapInt64Int64Map = function() {
  this.getMapInt64Int64Map().clear();
  return this;
};


/**
 * map<uint32, uint32> map_uint32_uint32 = 58;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapUint32Uint32Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 58, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapUint32Uint32Map = function() {
  this.getMapUint32Uint32Map().clear();
  return this;
};


/**
 * map<uint64, uint64> map_uint64_uint64 = 59;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapUint64Uint64Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 59, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapUint64Uint64Map = function() {
  this.getMapUint64Uint64Map().clear();
  return this;
};


/**
 * map<sint32, sint32> map_sint32_sint32 = 60;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapSint32Sint32Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 60, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapSint32Sint32Map = function() {
  this.getMapSint32Sint32Map().clear();
  return this;
};


/**
 * map<sint64, sint64> map_sint64_sint64 = 61;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapSint64Sint64Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 61, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapSint64Sint64Map = function() {
  this.getMapSint64Sint64Map().clear();
  return this;
};


/**
 * map<fixed32, fixed32> map_fixed32_fixed32 = 62;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapFixed32Fixed32Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 62, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapFixed32Fixed32Map = function() {
  this.getMapFixed32Fixed32Map().clear();
  return this;
};


/**
 * map<fixed64, fixed64> map_fixed64_fixed64 = 63;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapFixed64Fixed64Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 63, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapFixed64Fixed64Map = function() {
  this.getMapFixed64Fixed64Map().clear();
  return this;
};


/**
 * map<sfixed32, sfixed32> map_sfixed32_sfixed32 = 64;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapSfixed32Sfixed32Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 64, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapSfixed32Sfixed32Map = function() {
  this.getMapSfixed32Sfixed32Map().clear();
  return this;
};


/**
 * map<sfixed64, sfixed64> map_sfixed64_sfixed64 = 65;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapSfixed64Sfixed64Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 65, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapSfixed64Sfixed64Map = function() {
  this.getMapSfixed64Sfixed64Map().clear();
  return this;
};


/**
 * map<int32, float> map_int32_float = 66;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapInt32FloatMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 66, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapInt32FloatMap = function() {
  this.getMapInt32FloatMap().clear();
  return this;
};


/**
 * map<int32, double> map_int32_double = 67;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapInt32DoubleMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 67, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapInt32DoubleMap = function() {
  this.getMapInt32DoubleMap().clear();
  return this;
};


/**
 * map<bool, bool> map_bool_bool = 68;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<boolean,boolean>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapBoolBoolMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<boolean,boolean>} */ (
      jspb.Message.getMapField(this, 68, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapBoolBoolMap = function() {
  this.getMapBoolBoolMap().clear();
  return this;
};


/**
 * map<string, string> map_string_string = 69;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapStringStringMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 69, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapStringStringMap = function() {
  this.getMapStringStringMap().clear();
  return this;
};


/**
 * map<string, bytes> map_string_bytes = 70;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapStringBytesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 70, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapStringBytesMap = function() {
  this.getMapStringBytesMap().clear();
  return this;
};


/**
 * map<string, NestedMessage> map_string_nested_message = 71;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapStringNestedMessageMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage>} */ (
      jspb.Message.getMapField(this, 71, opt_noLazyCreate,
      proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapStringNestedMessageMap = function() {
  this.getMapStringNestedMessageMap().clear();
  return this;
};


/**
 * map<string, ForeignMessageProto2> map_string_foreign_message = 72;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.protobuf_test_messages.proto2.ForeignMessageProto2>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapStringForeignMessageMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.protobuf_test_messages.proto2.ForeignMessageProto2>} */ (
      jspb.Message.getMapField(this, 72, opt_noLazyCreate,
      proto.protobuf_test_messages.proto2.ForeignMessageProto2));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapStringForeignMessageMap = function() {
  this.getMapStringForeignMessageMap().clear();
  return this;
};


/**
 * map<string, NestedEnum> map_string_nested_enum = 73;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapStringNestedEnumMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum>} */ (
      jspb.Message.getMapField(this, 73, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapStringNestedEnumMap = function() {
  this.getMapStringNestedEnumMap().clear();
  return this;
};


/**
 * map<string, ForeignEnumProto2> map_string_foreign_enum = 74;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.protobuf_test_messages.proto2.ForeignEnumProto2>}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getMapStringForeignEnumMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.protobuf_test_messages.proto2.ForeignEnumProto2>} */ (
      jspb.Message.getMapField(this, 74, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearMapStringForeignEnumMap = function() {
  this.getMapStringForeignEnumMap().clear();
  return this;
};


/**
 * optional uint32 oneof_uint32 = 111;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 111, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofUint32 = function(value) {
  return jspb.Message.setOneofField(this, 111, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofUint32 = function() {
  return jspb.Message.setOneofField(this, 111, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofUint32 = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional NestedMessage oneof_nested_message = 112;
 * @return {?proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofNestedMessage = function() {
  return /** @type{?proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage, 112));
};


/**
 * @param {?proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedMessage|undefined} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
*/
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofNestedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 112, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofNestedMessage = function() {
  return this.setOneofNestedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofNestedMessage = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional string oneof_string = 113;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 113, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofString = function(value) {
  return jspb.Message.setOneofField(this, 113, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofString = function() {
  return jspb.Message.setOneofField(this, 113, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofString = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional bytes oneof_bytes = 114;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 114, ""));
};


/**
 * optional bytes oneof_bytes = 114;
 * This is a type-conversion wrapper around `getOneofBytes()`
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOneofBytes()));
};


/**
 * optional bytes oneof_bytes = 114;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOneofBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOneofBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofBytes = function(value) {
  return jspb.Message.setOneofField(this, 114, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofBytes = function() {
  return jspb.Message.setOneofField(this, 114, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofBytes = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional bool oneof_bool = 115;
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 115, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofBool = function(value) {
  return jspb.Message.setOneofField(this, 115, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofBool = function() {
  return jspb.Message.setOneofField(this, 115, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofBool = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional uint64 oneof_uint64 = 116;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofUint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 116, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofUint64 = function(value) {
  return jspb.Message.setOneofField(this, 116, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofUint64 = function() {
  return jspb.Message.setOneofField(this, 116, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofUint64 = function() {
  return jspb.Message.getField(this, 116) != null;
};


/**
 * optional float oneof_float = 117;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 117, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofFloat = function(value) {
  return jspb.Message.setOneofField(this, 117, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofFloat = function() {
  return jspb.Message.setOneofField(this, 117, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofFloat = function() {
  return jspb.Message.getField(this, 117) != null;
};


/**
 * optional double oneof_double = 118;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 118, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofDouble = function(value) {
  return jspb.Message.setOneofField(this, 118, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofDouble = function() {
  return jspb.Message.setOneofField(this, 118, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofDouble = function() {
  return jspb.Message.getField(this, 118) != null;
};


/**
 * optional NestedEnum oneof_enum = 119;
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getOneofEnum = function() {
  return /** @type {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} */ (jspb.Message.getFieldWithDefault(this, 119, 0));
};


/**
 * @param {!proto.protobuf_test_messages.proto2.TestAllTypesProto2.NestedEnum} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setOneofEnum = function(value) {
  return jspb.Message.setOneofField(this, 119, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearOneofEnum = function() {
  return jspb.Message.setOneofField(this, 119, proto.protobuf_test_messages.proto2.TestAllTypesProto2.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasOneofEnum = function() {
  return jspb.Message.getField(this, 119) != null;
};


/**
 * optional group Data = 201;
 * @return {?proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getData = function() {
  return /** @type{?proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data, 201));
};


/**
 * @param {?proto.protobuf_test_messages.proto2.TestAllTypesProto2.Data|undefined} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
*/
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 201, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasData = function() {
  return jspb.Message.getField(this, 201) != null;
};


/**
 * optional int32 default_int32 = 241;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 241, -123456789));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultInt32 = function(value) {
  return jspb.Message.setField(this, 241, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultInt32 = function() {
  return jspb.Message.setField(this, 241, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultInt32 = function() {
  return jspb.Message.getField(this, 241) != null;
};


/**
 * optional int64 default_int64 = 242;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultInt64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 242, -9123456789123456789));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultInt64 = function(value) {
  return jspb.Message.setField(this, 242, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultInt64 = function() {
  return jspb.Message.setField(this, 242, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultInt64 = function() {
  return jspb.Message.getField(this, 242) != null;
};


/**
 * optional uint32 default_uint32 = 243;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultUint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 243, 2123456789));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultUint32 = function(value) {
  return jspb.Message.setField(this, 243, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultUint32 = function() {
  return jspb.Message.setField(this, 243, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultUint32 = function() {
  return jspb.Message.getField(this, 243) != null;
};


/**
 * optional uint64 default_uint64 = 244;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultUint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 244, -8323287284586094827));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultUint64 = function(value) {
  return jspb.Message.setField(this, 244, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultUint64 = function() {
  return jspb.Message.setField(this, 244, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultUint64 = function() {
  return jspb.Message.getField(this, 244) != null;
};


/**
 * optional sint32 default_sint32 = 245;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultSint32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 245, -123456789));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultSint32 = function(value) {
  return jspb.Message.setField(this, 245, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultSint32 = function() {
  return jspb.Message.setField(this, 245, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultSint32 = function() {
  return jspb.Message.getField(this, 245) != null;
};


/**
 * optional sint64 default_sint64 = 246;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultSint64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 246, -9123456789123456789));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultSint64 = function(value) {
  return jspb.Message.setField(this, 246, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultSint64 = function() {
  return jspb.Message.setField(this, 246, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultSint64 = function() {
  return jspb.Message.getField(this, 246) != null;
};


/**
 * optional fixed32 default_fixed32 = 247;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultFixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 247, 2123456789));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultFixed32 = function(value) {
  return jspb.Message.setField(this, 247, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultFixed32 = function() {
  return jspb.Message.setField(this, 247, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultFixed32 = function() {
  return jspb.Message.getField(this, 247) != null;
};


/**
 * optional fixed64 default_fixed64 = 248;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultFixed64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 248, -8323287284586094827));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultFixed64 = function(value) {
  return jspb.Message.setField(this, 248, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultFixed64 = function() {
  return jspb.Message.setField(this, 248, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultFixed64 = function() {
  return jspb.Message.getField(this, 248) != null;
};


/**
 * optional sfixed32 default_sfixed32 = 249;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultSfixed32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 249, -123456789));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultSfixed32 = function(value) {
  return jspb.Message.setField(this, 249, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultSfixed32 = function() {
  return jspb.Message.setField(this, 249, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultSfixed32 = function() {
  return jspb.Message.getField(this, 249) != null;
};


/**
 * optional sfixed64 default_sfixed64 = 250;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultSfixed64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 250, -9123456789123456789));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultSfixed64 = function(value) {
  return jspb.Message.setField(this, 250, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultSfixed64 = function() {
  return jspb.Message.setField(this, 250, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultSfixed64 = function() {
  return jspb.Message.getField(this, 250) != null;
};


/**
 * optional float default_float = 251;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 251, 9.0E9));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultFloat = function(value) {
  return jspb.Message.setField(this, 251, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultFloat = function() {
  return jspb.Message.setField(this, 251, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultFloat = function() {
  return jspb.Message.getField(this, 251) != null;
};


/**
 * optional double default_double = 252;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 252, 7.0E22));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultDouble = function(value) {
  return jspb.Message.setField(this, 252, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultDouble = function() {
  return jspb.Message.setField(this, 252, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultDouble = function() {
  return jspb.Message.getField(this, 252) != null;
};


/**
 * optional bool default_bool = 253;
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 253, true));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultBool = function(value) {
  return jspb.Message.setField(this, 253, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultBool = function() {
  return jspb.Message.setField(this, 253, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultBool = function() {
  return jspb.Message.getField(this, 253) != null;
};


/**
 * optional string default_string = 254;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 254, "Rosebud"));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultString = function(value) {
  return jspb.Message.setField(this, 254, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultString = function() {
  return jspb.Message.setField(this, 254, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultString = function() {
  return jspb.Message.getField(this, 254) != null;
};


/**
 * optional bytes default_bytes = 255;
 * @return {!(string|Uint8Array)}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 255, "am9zaHVh"));
};


/**
 * optional bytes default_bytes = 255;
 * This is a type-conversion wrapper around `getDefaultBytes()`
 * @return {string}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDefaultBytes()));
};


/**
 * optional bytes default_bytes = 255;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDefaultBytes()`
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getDefaultBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDefaultBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setDefaultBytes = function(value) {
  return jspb.Message.setField(this, 255, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearDefaultBytes = function() {
  return jspb.Message.setField(this, 255, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasDefaultBytes = function() {
  return jspb.Message.getField(this, 255) != null;
};


/**
 * optional int32 fieldname1 = 401;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldname1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 401, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldname1 = function(value) {
  return jspb.Message.setField(this, 401, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldname1 = function() {
  return jspb.Message.setField(this, 401, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldname1 = function() {
  return jspb.Message.getField(this, 401) != null;
};


/**
 * optional int32 field_name2 = 402;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 402, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName2 = function(value) {
  return jspb.Message.setField(this, 402, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName2 = function() {
  return jspb.Message.setField(this, 402, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName2 = function() {
  return jspb.Message.getField(this, 402) != null;
};


/**
 * optional int32 _field_name3 = 403;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 403, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName3 = function(value) {
  return jspb.Message.setField(this, 403, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName3 = function() {
  return jspb.Message.setField(this, 403, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName3 = function() {
  return jspb.Message.getField(this, 403) != null;
};


/**
 * optional int32 field__name4_ = 404;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName4 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 404, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName4 = function(value) {
  return jspb.Message.setField(this, 404, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName4 = function() {
  return jspb.Message.setField(this, 404, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName4 = function() {
  return jspb.Message.getField(this, 404) != null;
};


/**
 * optional int32 field0name5 = 405;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getField0name5 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 405, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setField0name5 = function(value) {
  return jspb.Message.setField(this, 405, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearField0name5 = function() {
  return jspb.Message.setField(this, 405, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasField0name5 = function() {
  return jspb.Message.getField(this, 405) != null;
};


/**
 * optional int32 field_0_name6 = 406;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getField0Name6 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 406, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setField0Name6 = function(value) {
  return jspb.Message.setField(this, 406, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearField0Name6 = function() {
  return jspb.Message.setField(this, 406, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasField0Name6 = function() {
  return jspb.Message.getField(this, 406) != null;
};


/**
 * optional int32 fieldName7 = 407;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldname7 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 407, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldname7 = function(value) {
  return jspb.Message.setField(this, 407, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldname7 = function() {
  return jspb.Message.setField(this, 407, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldname7 = function() {
  return jspb.Message.getField(this, 407) != null;
};


/**
 * optional int32 FieldName8 = 408;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldname8 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 408, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldname8 = function(value) {
  return jspb.Message.setField(this, 408, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldname8 = function() {
  return jspb.Message.setField(this, 408, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldname8 = function() {
  return jspb.Message.getField(this, 408) != null;
};


/**
 * optional int32 field_Name9 = 409;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName9 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 409, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName9 = function(value) {
  return jspb.Message.setField(this, 409, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName9 = function() {
  return jspb.Message.setField(this, 409, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName9 = function() {
  return jspb.Message.getField(this, 409) != null;
};


/**
 * optional int32 Field_Name10 = 410;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName10 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 410, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName10 = function(value) {
  return jspb.Message.setField(this, 410, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName10 = function() {
  return jspb.Message.setField(this, 410, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName10 = function() {
  return jspb.Message.getField(this, 410) != null;
};


/**
 * optional int32 FIELD_NAME11 = 411;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName11 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 411, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName11 = function(value) {
  return jspb.Message.setField(this, 411, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName11 = function() {
  return jspb.Message.setField(this, 411, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName11 = function() {
  return jspb.Message.getField(this, 411) != null;
};


/**
 * optional int32 FIELD_name12 = 412;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName12 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 412, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName12 = function(value) {
  return jspb.Message.setField(this, 412, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName12 = function() {
  return jspb.Message.setField(this, 412, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName12 = function() {
  return jspb.Message.getField(this, 412) != null;
};


/**
 * optional int32 __field_name13 = 413;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName13 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 413, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName13 = function(value) {
  return jspb.Message.setField(this, 413, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName13 = function() {
  return jspb.Message.setField(this, 413, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName13 = function() {
  return jspb.Message.getField(this, 413) != null;
};


/**
 * optional int32 __Field_name14 = 414;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName14 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 414, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName14 = function(value) {
  return jspb.Message.setField(this, 414, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName14 = function() {
  return jspb.Message.setField(this, 414, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName14 = function() {
  return jspb.Message.getField(this, 414) != null;
};


/**
 * optional int32 field__name15 = 415;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName15 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 415, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName15 = function(value) {
  return jspb.Message.setField(this, 415, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName15 = function() {
  return jspb.Message.setField(this, 415, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName15 = function() {
  return jspb.Message.getField(this, 415) != null;
};


/**
 * optional int32 field__Name16 = 416;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName16 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 416, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName16 = function(value) {
  return jspb.Message.setField(this, 416, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName16 = function() {
  return jspb.Message.setField(this, 416, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName16 = function() {
  return jspb.Message.getField(this, 416) != null;
};


/**
 * optional int32 field_name17__ = 417;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName17 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 417, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName17 = function(value) {
  return jspb.Message.setField(this, 417, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName17 = function() {
  return jspb.Message.setField(this, 417, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName17 = function() {
  return jspb.Message.getField(this, 417) != null;
};


/**
 * optional int32 Field_name18__ = 418;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.getFieldName18 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 418, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.setFieldName18 = function(value) {
  return jspb.Message.setField(this, 418, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.TestAllTypesProto2} returns this
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.clearFieldName18 = function() {
  return jspb.Message.setField(this, 418, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.TestAllTypesProto2.prototype.hasFieldName18 = function() {
  return jspb.Message.getField(this, 418) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.ForeignMessageProto2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.ForeignMessageProto2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.toObject = function(includeInstance, msg) {
  var f, obj = {
    c: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.ForeignMessageProto2}
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.ForeignMessageProto2;
  return proto.protobuf_test_messages.proto2.ForeignMessageProto2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.ForeignMessageProto2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.ForeignMessageProto2}
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setC(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.ForeignMessageProto2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.ForeignMessageProto2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 c = 1;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.prototype.getC = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.ForeignMessageProto2} returns this
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.prototype.setC = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.ForeignMessageProto2} returns this
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.prototype.clearC = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.ForeignMessageProto2.prototype.hasC = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.repeatedFields_ = [1011];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    optionalInt32: (f = jspb.Message.getField(msg, 1001)) == null ? undefined : f,
    optionalString: (f = jspb.Message.getField(msg, 1002)) == null ? undefined : f,
    nestedMessage: (f = msg.getNestedMessage()) && proto.protobuf_test_messages.proto2.ForeignMessageProto2.toObject(includeInstance, f),
    optionalGroup: (f = msg.getOptionalGroup()) && proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.toObject(includeInstance, f),
    optionalBool: (f = jspb.Message.getBooleanField(msg, 1006)) == null ? undefined : f,
    repeatedInt32List: (f = jspb.Message.getRepeatedField(msg, 1011)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.UnknownToTestAllTypes;
  return proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1001:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOptionalInt32(value);
      break;
    case 1002:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalString(value);
      break;
    case 1003:
      var value = new proto.protobuf_test_messages.proto2.ForeignMessageProto2;
      reader.readMessage(value,proto.protobuf_test_messages.proto2.ForeignMessageProto2.deserializeBinaryFromReader);
      msg.setNestedMessage(value);
      break;
    case 1004:
      var value = new proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup;
      reader.readGroup(1004, value,proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.deserializeBinaryFromReader);
      msg.setOptionalGroup(value);
      break;
    case 1006:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOptionalBool(value);
      break;
    case 1011:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepeatedInt32(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1001));
  if (f != null) {
    writer.writeInt32(
      1001,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1002));
  if (f != null) {
    writer.writeString(
      1002,
      f
    );
  }
  f = message.getNestedMessage();
  if (f != null) {
    writer.writeMessage(
      1003,
      f,
      proto.protobuf_test_messages.proto2.ForeignMessageProto2.serializeBinaryToWriter
    );
  }
  f = message.getOptionalGroup();
  if (f != null) {
    writer.writeGroup(
      1004,
      f,
      proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1006));
  if (f != null) {
    writer.writeBool(
      1006,
      f
    );
  }
  f = message.getRepeatedInt32List();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      1011,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    a: (f = jspb.Message.getField(msg, -1003)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup;
  return proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setA(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, -1003));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 a = 1;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.prototype.getA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, -1003, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.prototype.setA = function(value) {
  return jspb.Message.setField(this, -1003, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.prototype.clearA = function() {
  return jspb.Message.setField(this, -1003, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup.prototype.hasA = function() {
  return jspb.Message.getField(this, -1003) != null;
};


/**
 * optional int32 optional_int32 = 1001;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.getOptionalInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1001, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.setOptionalInt32 = function(value) {
  return jspb.Message.setField(this, 1001, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.clearOptionalInt32 = function() {
  return jspb.Message.setField(this, 1001, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.hasOptionalInt32 = function() {
  return jspb.Message.getField(this, 1001) != null;
};


/**
 * optional string optional_string = 1002;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.getOptionalString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1002, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.setOptionalString = function(value) {
  return jspb.Message.setField(this, 1002, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.clearOptionalString = function() {
  return jspb.Message.setField(this, 1002, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.hasOptionalString = function() {
  return jspb.Message.getField(this, 1002) != null;
};


/**
 * optional ForeignMessageProto2 nested_message = 1003;
 * @return {?proto.protobuf_test_messages.proto2.ForeignMessageProto2}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.getNestedMessage = function() {
  return /** @type{?proto.protobuf_test_messages.proto2.ForeignMessageProto2} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_test_messages.proto2.ForeignMessageProto2, 1003));
};


/**
 * @param {?proto.protobuf_test_messages.proto2.ForeignMessageProto2|undefined} value
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
*/
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.setNestedMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1003, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.clearNestedMessage = function() {
  return this.setNestedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.hasNestedMessage = function() {
  return jspb.Message.getField(this, 1003) != null;
};


/**
 * optional group OptionalGroup = 1004;
 * @return {?proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.getOptionalGroup = function() {
  return /** @type{?proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup} */ (
    jspb.Message.getWrapperField(this, proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup, 1004));
};


/**
 * @param {?proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.OptionalGroup|undefined} value
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
*/
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.setOptionalGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1004, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.clearOptionalGroup = function() {
  return this.setOptionalGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.hasOptionalGroup = function() {
  return jspb.Message.getField(this, 1004) != null;
};


/**
 * optional bool optional_bool = 1006;
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.getOptionalBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1006, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.setOptionalBool = function(value) {
  return jspb.Message.setField(this, 1006, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.clearOptionalBool = function() {
  return jspb.Message.setField(this, 1006, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.hasOptionalBool = function() {
  return jspb.Message.getField(this, 1006) != null;
};


/**
 * repeated int32 repeated_int32 = 1011;
 * @return {!Array<number>}
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.getRepeatedInt32List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1011));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.setRepeatedInt32List = function(value) {
  return jspb.Message.setField(this, 1011, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.addRepeatedInt32 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1011, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.UnknownToTestAllTypes} returns this
 */
proto.protobuf_test_messages.proto2.UnknownToTestAllTypes.prototype.clearRepeatedInt32List = function() {
  return this.setRepeatedInt32List([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.NullHypothesisProto2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.NullHypothesisProto2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.NullHypothesisProto2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.NullHypothesisProto2.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.NullHypothesisProto2}
 */
proto.protobuf_test_messages.proto2.NullHypothesisProto2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.NullHypothesisProto2;
  return proto.protobuf_test_messages.proto2.NullHypothesisProto2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.NullHypothesisProto2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.NullHypothesisProto2}
 */
proto.protobuf_test_messages.proto2.NullHypothesisProto2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.NullHypothesisProto2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.NullHypothesisProto2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.NullHypothesisProto2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.NullHypothesisProto2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.EnumOnlyProto2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.EnumOnlyProto2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.EnumOnlyProto2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.EnumOnlyProto2.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.EnumOnlyProto2}
 */
proto.protobuf_test_messages.proto2.EnumOnlyProto2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.EnumOnlyProto2;
  return proto.protobuf_test_messages.proto2.EnumOnlyProto2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.EnumOnlyProto2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.EnumOnlyProto2}
 */
proto.protobuf_test_messages.proto2.EnumOnlyProto2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.EnumOnlyProto2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.EnumOnlyProto2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.EnumOnlyProto2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.EnumOnlyProto2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.protobuf_test_messages.proto2.EnumOnlyProto2.Bool = {
  KFALSE: 0,
  KTRUE: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.OneStringProto2.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.OneStringProto2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.OneStringProto2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.OneStringProto2.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.OneStringProto2}
 */
proto.protobuf_test_messages.proto2.OneStringProto2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.OneStringProto2;
  return proto.protobuf_test_messages.proto2.OneStringProto2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.OneStringProto2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.OneStringProto2}
 */
proto.protobuf_test_messages.proto2.OneStringProto2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.OneStringProto2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.OneStringProto2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.OneStringProto2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.OneStringProto2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.OneStringProto2.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.OneStringProto2} returns this
 */
proto.protobuf_test_messages.proto2.OneStringProto2.prototype.setData = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.OneStringProto2} returns this
 */
proto.protobuf_test_messages.proto2.OneStringProto2.prototype.clearData = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.OneStringProto2.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf_test_messages.proto2.ProtoWithKeywords.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.toObject = function(includeInstance, msg) {
  var f, obj = {
    inline: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    concept: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    requiresList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf_test_messages.proto2.ProtoWithKeywords;
  return proto.protobuf_test_messages.proto2.ProtoWithKeywords.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInline(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConcept(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRequires(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf_test_messages.proto2.ProtoWithKeywords.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequiresList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional int32 inline = 1;
 * @return {number}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.getInline = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} returns this
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.setInline = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} returns this
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.clearInline = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.hasInline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string concept = 2;
 * @return {string}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.getConcept = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} returns this
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.setConcept = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} returns this
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.clearConcept = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.hasConcept = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string requires = 3;
 * @return {!Array<string>}
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.getRequiresList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} returns this
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.setRequiresList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} returns this
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.addRequires = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf_test_messages.proto2.ProtoWithKeywords} returns this
 */
proto.protobuf_test_messages.proto2.ProtoWithKeywords.prototype.clearRequiresList = function() {
  return this.setRequiresList([]);
};


/**
 * @enum {number}
 */
proto.protobuf_test_messages.proto2.ForeignEnumProto2 = {
  FOREIGN_FOO: 0,
  FOREIGN_BAR: 1,
  FOREIGN_BAZ: 2
};


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `extensionInt32`.
 * @type {!jspb.ExtensionFieldInfo<number>}
 */
proto.protobuf_test_messages.proto2.extensionInt32 = new jspb.ExtensionFieldInfo(
    120,
    {extensionInt32: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

proto.protobuf_test_messages.proto2.TestAllTypesProto2.extensionsBinary[120] = new jspb.ExtensionFieldBinaryInfo(
    proto.protobuf_test_messages.proto2.extensionInt32,
    jspb.BinaryReader.prototype.readInt32,
    jspb.BinaryWriter.prototype.writeInt32,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
proto.protobuf_test_messages.proto2.TestAllTypesProto2.extensions[120] = proto.protobuf_test_messages.proto2.extensionInt32;

goog.object.extend(exports, proto.protobuf_test_messages.proto2);
